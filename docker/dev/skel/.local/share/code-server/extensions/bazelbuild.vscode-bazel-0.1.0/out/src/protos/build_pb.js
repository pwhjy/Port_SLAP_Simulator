"use strict";
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();
goog.exportSymbol('proto.blaze_query.AllowedRuleClassInfo', null, global);
goog.exportSymbol('proto.blaze_query.AllowedRuleClassInfo.AllowedRuleClasses', null, global);
goog.exportSymbol('proto.blaze_query.Attribute', null, global);
goog.exportSymbol('proto.blaze_query.Attribute.Discriminator', null, global);
goog.exportSymbol('proto.blaze_query.Attribute.Selector', null, global);
goog.exportSymbol('proto.blaze_query.Attribute.SelectorEntry', null, global);
goog.exportSymbol('proto.blaze_query.Attribute.SelectorList', null, global);
goog.exportSymbol('proto.blaze_query.Attribute.Tristate', null, global);
goog.exportSymbol('proto.blaze_query.AttributeAspect', null, global);
goog.exportSymbol('proto.blaze_query.AttributeDefinition', null, global);
goog.exportSymbol('proto.blaze_query.BuildLanguage', null, global);
goog.exportSymbol('proto.blaze_query.DEPRECATED_GlobCriteria', null, global);
goog.exportSymbol('proto.blaze_query.EnvironmentGroup', null, global);
goog.exportSymbol('proto.blaze_query.Event', null, global);
goog.exportSymbol('proto.blaze_query.Event.EventKind', null, global);
goog.exportSymbol('proto.blaze_query.FilesetEntry', null, global);
goog.exportSymbol('proto.blaze_query.FilesetEntry.SymlinkBehavior', null, global);
goog.exportSymbol('proto.blaze_query.GeneratedFile', null, global);
goog.exportSymbol('proto.blaze_query.LabelDictUnaryEntry', null, global);
goog.exportSymbol('proto.blaze_query.LabelKeyedStringDictEntry', null, global);
goog.exportSymbol('proto.blaze_query.LabelListDictEntry', null, global);
goog.exportSymbol('proto.blaze_query.License', null, global);
goog.exportSymbol('proto.blaze_query.Location', null, global);
goog.exportSymbol('proto.blaze_query.MakeVar', null, global);
goog.exportSymbol('proto.blaze_query.MakeVarBinding', null, global);
goog.exportSymbol('proto.blaze_query.PackageGroup', null, global);
goog.exportSymbol('proto.blaze_query.QueryResult', null, global);
goog.exportSymbol('proto.blaze_query.Rule', null, global);
goog.exportSymbol('proto.blaze_query.RuleDefinition', null, global);
goog.exportSymbol('proto.blaze_query.RuleSummary', null, global);
goog.exportSymbol('proto.blaze_query.SkylarkAspect', null, global);
goog.exportSymbol('proto.blaze_query.SourceFile', null, global);
goog.exportSymbol('proto.blaze_query.StringDictEntry', null, global);
goog.exportSymbol('proto.blaze_query.StringListDictEntry', null, global);
goog.exportSymbol('proto.blaze_query.Target', null, global);
goog.exportSymbol('proto.blaze_query.Target.Discriminator', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.License = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.blaze_query.License.repeatedFields_, null);
};
goog.inherits(proto.blaze_query.License, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.License.displayName = 'proto.blaze_query.License';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blaze_query.License.repeatedFields_ = [1, 2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.License.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.License.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.License} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.License.toObject = function (includeInstance, msg) {
        var f, obj = {
            licenseTypeList: jspb.Message.getRepeatedField(msg, 1),
            exceptionList: jspb.Message.getRepeatedField(msg, 2)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.License}
 */
proto.blaze_query.License.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.License;
    return proto.blaze_query.License.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.License} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.License}
 */
proto.blaze_query.License.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.addLicenseType(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.addException(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.License.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.License.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.License} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.License.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getLicenseTypeList();
    if (f.length > 0) {
        writer.writeRepeatedString(1, f);
    }
    f = message.getExceptionList();
    if (f.length > 0) {
        writer.writeRepeatedString(2, f);
    }
};
/**
 * repeated string license_type = 1;
 * @return {!Array.<string>}
 */
proto.blaze_query.License.prototype.getLicenseTypeList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};
/** @param {!Array.<string>} value */
proto.blaze_query.License.prototype.setLicenseTypeList = function (value) {
    jspb.Message.setField(this, 1, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.blaze_query.License.prototype.addLicenseType = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};
proto.blaze_query.License.prototype.clearLicenseTypeList = function () {
    this.setLicenseTypeList([]);
};
/**
 * repeated string exception = 2;
 * @return {!Array.<string>}
 */
proto.blaze_query.License.prototype.getExceptionList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 2));
};
/** @param {!Array.<string>} value */
proto.blaze_query.License.prototype.setExceptionList = function (value) {
    jspb.Message.setField(this, 2, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.blaze_query.License.prototype.addException = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};
proto.blaze_query.License.prototype.clearExceptionList = function () {
    this.setExceptionList([]);
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.StringDictEntry = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blaze_query.StringDictEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.StringDictEntry.displayName = 'proto.blaze_query.StringDictEntry';
}
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.StringDictEntry.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.StringDictEntry.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.StringDictEntry} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.StringDictEntry.toObject = function (includeInstance, msg) {
        var f, obj = {
            key: jspb.Message.getField(msg, 1),
            value: jspb.Message.getField(msg, 2)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.StringDictEntry}
 */
proto.blaze_query.StringDictEntry.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.StringDictEntry;
    return proto.blaze_query.StringDictEntry.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.StringDictEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.StringDictEntry}
 */
proto.blaze_query.StringDictEntry.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setKey(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setValue(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.StringDictEntry.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.StringDictEntry.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.StringDictEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.StringDictEntry.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
};
/**
 * required string key = 1;
 * @return {string}
 */
proto.blaze_query.StringDictEntry.prototype.getKey = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/** @param {string} value */
proto.blaze_query.StringDictEntry.prototype.setKey = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.StringDictEntry.prototype.clearKey = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.StringDictEntry.prototype.hasKey = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * required string value = 2;
 * @return {string}
 */
proto.blaze_query.StringDictEntry.prototype.getValue = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/** @param {string} value */
proto.blaze_query.StringDictEntry.prototype.setValue = function (value) {
    jspb.Message.setField(this, 2, value);
};
proto.blaze_query.StringDictEntry.prototype.clearValue = function () {
    jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.StringDictEntry.prototype.hasValue = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.LabelDictUnaryEntry = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blaze_query.LabelDictUnaryEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.LabelDictUnaryEntry.displayName = 'proto.blaze_query.LabelDictUnaryEntry';
}
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.LabelDictUnaryEntry.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.LabelDictUnaryEntry.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.LabelDictUnaryEntry} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.LabelDictUnaryEntry.toObject = function (includeInstance, msg) {
        var f, obj = {
            key: jspb.Message.getField(msg, 1),
            value: jspb.Message.getField(msg, 2)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.LabelDictUnaryEntry}
 */
proto.blaze_query.LabelDictUnaryEntry.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.LabelDictUnaryEntry;
    return proto.blaze_query.LabelDictUnaryEntry.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.LabelDictUnaryEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.LabelDictUnaryEntry}
 */
proto.blaze_query.LabelDictUnaryEntry.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setKey(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setValue(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.LabelDictUnaryEntry.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.LabelDictUnaryEntry.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.LabelDictUnaryEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.LabelDictUnaryEntry.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
};
/**
 * required string key = 1;
 * @return {string}
 */
proto.blaze_query.LabelDictUnaryEntry.prototype.getKey = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/** @param {string} value */
proto.blaze_query.LabelDictUnaryEntry.prototype.setKey = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.LabelDictUnaryEntry.prototype.clearKey = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.LabelDictUnaryEntry.prototype.hasKey = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * required string value = 2;
 * @return {string}
 */
proto.blaze_query.LabelDictUnaryEntry.prototype.getValue = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/** @param {string} value */
proto.blaze_query.LabelDictUnaryEntry.prototype.setValue = function (value) {
    jspb.Message.setField(this, 2, value);
};
proto.blaze_query.LabelDictUnaryEntry.prototype.clearValue = function () {
    jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.LabelDictUnaryEntry.prototype.hasValue = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.LabelListDictEntry = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.blaze_query.LabelListDictEntry.repeatedFields_, null);
};
goog.inherits(proto.blaze_query.LabelListDictEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.LabelListDictEntry.displayName = 'proto.blaze_query.LabelListDictEntry';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blaze_query.LabelListDictEntry.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.LabelListDictEntry.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.LabelListDictEntry.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.LabelListDictEntry} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.LabelListDictEntry.toObject = function (includeInstance, msg) {
        var f, obj = {
            key: jspb.Message.getField(msg, 1),
            valueList: jspb.Message.getRepeatedField(msg, 2)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.LabelListDictEntry}
 */
proto.blaze_query.LabelListDictEntry.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.LabelListDictEntry;
    return proto.blaze_query.LabelListDictEntry.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.LabelListDictEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.LabelListDictEntry}
 */
proto.blaze_query.LabelListDictEntry.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setKey(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.addValue(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.LabelListDictEntry.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.LabelListDictEntry.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.LabelListDictEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.LabelListDictEntry.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = message.getValueList();
    if (f.length > 0) {
        writer.writeRepeatedString(2, f);
    }
};
/**
 * required string key = 1;
 * @return {string}
 */
proto.blaze_query.LabelListDictEntry.prototype.getKey = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/** @param {string} value */
proto.blaze_query.LabelListDictEntry.prototype.setKey = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.LabelListDictEntry.prototype.clearKey = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.LabelListDictEntry.prototype.hasKey = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated string value = 2;
 * @return {!Array.<string>}
 */
proto.blaze_query.LabelListDictEntry.prototype.getValueList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 2));
};
/** @param {!Array.<string>} value */
proto.blaze_query.LabelListDictEntry.prototype.setValueList = function (value) {
    jspb.Message.setField(this, 2, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.blaze_query.LabelListDictEntry.prototype.addValue = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};
proto.blaze_query.LabelListDictEntry.prototype.clearValueList = function () {
    this.setValueList([]);
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.LabelKeyedStringDictEntry = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blaze_query.LabelKeyedStringDictEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.LabelKeyedStringDictEntry.displayName = 'proto.blaze_query.LabelKeyedStringDictEntry';
}
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.LabelKeyedStringDictEntry.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.LabelKeyedStringDictEntry.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.LabelKeyedStringDictEntry} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.LabelKeyedStringDictEntry.toObject = function (includeInstance, msg) {
        var f, obj = {
            key: jspb.Message.getField(msg, 1),
            value: jspb.Message.getField(msg, 2)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.LabelKeyedStringDictEntry}
 */
proto.blaze_query.LabelKeyedStringDictEntry.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.LabelKeyedStringDictEntry;
    return proto.blaze_query.LabelKeyedStringDictEntry.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.LabelKeyedStringDictEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.LabelKeyedStringDictEntry}
 */
proto.blaze_query.LabelKeyedStringDictEntry.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setKey(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setValue(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.LabelKeyedStringDictEntry.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.LabelKeyedStringDictEntry.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.LabelKeyedStringDictEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.LabelKeyedStringDictEntry.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
};
/**
 * required string key = 1;
 * @return {string}
 */
proto.blaze_query.LabelKeyedStringDictEntry.prototype.getKey = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/** @param {string} value */
proto.blaze_query.LabelKeyedStringDictEntry.prototype.setKey = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.LabelKeyedStringDictEntry.prototype.clearKey = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.LabelKeyedStringDictEntry.prototype.hasKey = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * required string value = 2;
 * @return {string}
 */
proto.blaze_query.LabelKeyedStringDictEntry.prototype.getValue = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/** @param {string} value */
proto.blaze_query.LabelKeyedStringDictEntry.prototype.setValue = function (value) {
    jspb.Message.setField(this, 2, value);
};
proto.blaze_query.LabelKeyedStringDictEntry.prototype.clearValue = function () {
    jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.LabelKeyedStringDictEntry.prototype.hasValue = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.StringListDictEntry = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.blaze_query.StringListDictEntry.repeatedFields_, null);
};
goog.inherits(proto.blaze_query.StringListDictEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.StringListDictEntry.displayName = 'proto.blaze_query.StringListDictEntry';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blaze_query.StringListDictEntry.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.StringListDictEntry.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.StringListDictEntry.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.StringListDictEntry} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.StringListDictEntry.toObject = function (includeInstance, msg) {
        var f, obj = {
            key: jspb.Message.getField(msg, 1),
            valueList: jspb.Message.getRepeatedField(msg, 2)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.StringListDictEntry}
 */
proto.blaze_query.StringListDictEntry.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.StringListDictEntry;
    return proto.blaze_query.StringListDictEntry.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.StringListDictEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.StringListDictEntry}
 */
proto.blaze_query.StringListDictEntry.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setKey(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.addValue(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.StringListDictEntry.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.StringListDictEntry.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.StringListDictEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.StringListDictEntry.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = message.getValueList();
    if (f.length > 0) {
        writer.writeRepeatedString(2, f);
    }
};
/**
 * required string key = 1;
 * @return {string}
 */
proto.blaze_query.StringListDictEntry.prototype.getKey = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/** @param {string} value */
proto.blaze_query.StringListDictEntry.prototype.setKey = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.StringListDictEntry.prototype.clearKey = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.StringListDictEntry.prototype.hasKey = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated string value = 2;
 * @return {!Array.<string>}
 */
proto.blaze_query.StringListDictEntry.prototype.getValueList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 2));
};
/** @param {!Array.<string>} value */
proto.blaze_query.StringListDictEntry.prototype.setValueList = function (value) {
    jspb.Message.setField(this, 2, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.blaze_query.StringListDictEntry.prototype.addValue = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};
proto.blaze_query.StringListDictEntry.prototype.clearValueList = function () {
    this.setValueList([]);
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.FilesetEntry = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.blaze_query.FilesetEntry.repeatedFields_, null);
};
goog.inherits(proto.blaze_query.FilesetEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.FilesetEntry.displayName = 'proto.blaze_query.FilesetEntry';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blaze_query.FilesetEntry.repeatedFields_ = [3, 4];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.FilesetEntry.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.FilesetEntry.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.FilesetEntry} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.FilesetEntry.toObject = function (includeInstance, msg) {
        var f, obj = {
            source: jspb.Message.getField(msg, 1),
            destinationDirectory: jspb.Message.getField(msg, 2),
            filesPresent: jspb.Message.getField(msg, 7),
            fileList: jspb.Message.getRepeatedField(msg, 3),
            excludeList: jspb.Message.getRepeatedField(msg, 4),
            symlinkBehavior: jspb.Message.getFieldWithDefault(msg, 5, 1),
            stripPrefix: jspb.Message.getField(msg, 6)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.FilesetEntry}
 */
proto.blaze_query.FilesetEntry.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.FilesetEntry;
    return proto.blaze_query.FilesetEntry.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.FilesetEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.FilesetEntry}
 */
proto.blaze_query.FilesetEntry.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setSource(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setDestinationDirectory(value);
                break;
            case 7:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setFilesPresent(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.addFile(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.addExclude(value);
                break;
            case 5:
                var value = /** @type {!proto.blaze_query.FilesetEntry.SymlinkBehavior} */ (reader.readEnum());
                msg.setSymlinkBehavior(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setStripPrefix(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.FilesetEntry.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.FilesetEntry.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.FilesetEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.FilesetEntry.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
    if (f != null) {
        writer.writeBool(7, f);
    }
    f = message.getFileList();
    if (f.length > 0) {
        writer.writeRepeatedString(3, f);
    }
    f = message.getExcludeList();
    if (f.length > 0) {
        writer.writeRepeatedString(4, f);
    }
    f = /** @type {!proto.blaze_query.FilesetEntry.SymlinkBehavior} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeEnum(5, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeString(6, f);
    }
};
/**
 * @enum {number}
 */
proto.blaze_query.FilesetEntry.SymlinkBehavior = {
    COPY: 1,
    DEREFERENCE: 2
};
/**
 * required string source = 1;
 * @return {string}
 */
proto.blaze_query.FilesetEntry.prototype.getSource = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/** @param {string} value */
proto.blaze_query.FilesetEntry.prototype.setSource = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.FilesetEntry.prototype.clearSource = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.FilesetEntry.prototype.hasSource = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * required string destination_directory = 2;
 * @return {string}
 */
proto.blaze_query.FilesetEntry.prototype.getDestinationDirectory = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/** @param {string} value */
proto.blaze_query.FilesetEntry.prototype.setDestinationDirectory = function (value) {
    jspb.Message.setField(this, 2, value);
};
proto.blaze_query.FilesetEntry.prototype.clearDestinationDirectory = function () {
    jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.FilesetEntry.prototype.hasDestinationDirectory = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional bool files_present = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.blaze_query.FilesetEntry.prototype.getFilesPresent = function () {
    return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};
/** @param {boolean} value */
proto.blaze_query.FilesetEntry.prototype.setFilesPresent = function (value) {
    jspb.Message.setField(this, 7, value);
};
proto.blaze_query.FilesetEntry.prototype.clearFilesPresent = function () {
    jspb.Message.setField(this, 7, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.FilesetEntry.prototype.hasFilesPresent = function () {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * repeated string file = 3;
 * @return {!Array.<string>}
 */
proto.blaze_query.FilesetEntry.prototype.getFileList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 3));
};
/** @param {!Array.<string>} value */
proto.blaze_query.FilesetEntry.prototype.setFileList = function (value) {
    jspb.Message.setField(this, 3, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.blaze_query.FilesetEntry.prototype.addFile = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};
proto.blaze_query.FilesetEntry.prototype.clearFileList = function () {
    this.setFileList([]);
};
/**
 * repeated string exclude = 4;
 * @return {!Array.<string>}
 */
proto.blaze_query.FilesetEntry.prototype.getExcludeList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 4));
};
/** @param {!Array.<string>} value */
proto.blaze_query.FilesetEntry.prototype.setExcludeList = function (value) {
    jspb.Message.setField(this, 4, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.blaze_query.FilesetEntry.prototype.addExclude = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};
proto.blaze_query.FilesetEntry.prototype.clearExcludeList = function () {
    this.setExcludeList([]);
};
/**
 * optional SymlinkBehavior symlink_behavior = 5;
 * @return {!proto.blaze_query.FilesetEntry.SymlinkBehavior}
 */
proto.blaze_query.FilesetEntry.prototype.getSymlinkBehavior = function () {
    return /** @type {!proto.blaze_query.FilesetEntry.SymlinkBehavior} */ (jspb.Message.getFieldWithDefault(this, 5, 1));
};
/** @param {!proto.blaze_query.FilesetEntry.SymlinkBehavior} value */
proto.blaze_query.FilesetEntry.prototype.setSymlinkBehavior = function (value) {
    jspb.Message.setField(this, 5, value);
};
proto.blaze_query.FilesetEntry.prototype.clearSymlinkBehavior = function () {
    jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.FilesetEntry.prototype.hasSymlinkBehavior = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional string strip_prefix = 6;
 * @return {string}
 */
proto.blaze_query.FilesetEntry.prototype.getStripPrefix = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};
/** @param {string} value */
proto.blaze_query.FilesetEntry.prototype.setStripPrefix = function (value) {
    jspb.Message.setField(this, 6, value);
};
proto.blaze_query.FilesetEntry.prototype.clearStripPrefix = function () {
    jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.FilesetEntry.prototype.hasStripPrefix = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.Attribute = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.blaze_query.Attribute.repeatedFields_, null);
};
goog.inherits(proto.blaze_query.Attribute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.Attribute.displayName = 'proto.blaze_query.Attribute';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blaze_query.Attribute.repeatedFields_ = [6, 8, 9, 10, 11, 17, 19, 22, 16, 18];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.Attribute.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.Attribute.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.Attribute} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.Attribute.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: jspb.Message.getField(msg, 1),
            deprecatedParseableLocation: (f = msg.getDeprecatedParseableLocation()) && proto.blaze_query.Location.toObject(includeInstance, f),
            explicitlySpecified: jspb.Message.getField(msg, 13),
            nodep: jspb.Message.getField(msg, 20),
            type: jspb.Message.getField(msg, 2),
            intValue: jspb.Message.getField(msg, 3),
            stringValue: jspb.Message.getField(msg, 5),
            booleanValue: jspb.Message.getField(msg, 14),
            tristateValue: jspb.Message.getField(msg, 15),
            stringListValueList: jspb.Message.getRepeatedField(msg, 6),
            license: (f = msg.getLicense()) && proto.blaze_query.License.toObject(includeInstance, f),
            stringDictValueList: jspb.Message.toObjectList(msg.getStringDictValueList(), proto.blaze_query.StringDictEntry.toObject, includeInstance),
            filesetListValueList: jspb.Message.toObjectList(msg.getFilesetListValueList(), proto.blaze_query.FilesetEntry.toObject, includeInstance),
            labelListDictValueList: jspb.Message.toObjectList(msg.getLabelListDictValueList(), proto.blaze_query.LabelListDictEntry.toObject, includeInstance),
            stringListDictValueList: jspb.Message.toObjectList(msg.getStringListDictValueList(), proto.blaze_query.StringListDictEntry.toObject, includeInstance),
            intListValueList: jspb.Message.getRepeatedField(msg, 17),
            labelDictUnaryValueList: jspb.Message.toObjectList(msg.getLabelDictUnaryValueList(), proto.blaze_query.LabelDictUnaryEntry.toObject, includeInstance),
            labelKeyedStringDictValueList: jspb.Message.toObjectList(msg.getLabelKeyedStringDictValueList(), proto.blaze_query.LabelKeyedStringDictEntry.toObject, includeInstance),
            selectorList: (f = msg.getSelectorList()) && proto.blaze_query.Attribute.SelectorList.toObject(includeInstance, f),
            deprecatedGlobCriteriaList: jspb.Message.toObjectList(msg.getDeprecatedGlobCriteriaList(), proto.blaze_query.DEPRECATED_GlobCriteria.toObject, includeInstance),
            deprecatedStringDictUnaryValueList: msg.getDeprecatedStringDictUnaryValueList_asB64()
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.Attribute}
 */
proto.blaze_query.Attribute.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.Attribute;
    return proto.blaze_query.Attribute.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.Attribute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.Attribute}
 */
proto.blaze_query.Attribute.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 12:
                var value = new proto.blaze_query.Location;
                reader.readMessage(value, proto.blaze_query.Location.deserializeBinaryFromReader);
                msg.setDeprecatedParseableLocation(value);
                break;
            case 13:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setExplicitlySpecified(value);
                break;
            case 20:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setNodep(value);
                break;
            case 2:
                var value = /** @type {!proto.blaze_query.Attribute.Discriminator} */ (reader.readEnum());
                msg.setType(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setIntValue(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setStringValue(value);
                break;
            case 14:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setBooleanValue(value);
                break;
            case 15:
                var value = /** @type {!proto.blaze_query.Attribute.Tristate} */ (reader.readEnum());
                msg.setTristateValue(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.addStringListValue(value);
                break;
            case 7:
                var value = new proto.blaze_query.License;
                reader.readMessage(value, proto.blaze_query.License.deserializeBinaryFromReader);
                msg.setLicense(value);
                break;
            case 8:
                var value = new proto.blaze_query.StringDictEntry;
                reader.readMessage(value, proto.blaze_query.StringDictEntry.deserializeBinaryFromReader);
                msg.addStringDictValue(value);
                break;
            case 9:
                var value = new proto.blaze_query.FilesetEntry;
                reader.readMessage(value, proto.blaze_query.FilesetEntry.deserializeBinaryFromReader);
                msg.addFilesetListValue(value);
                break;
            case 10:
                var value = new proto.blaze_query.LabelListDictEntry;
                reader.readMessage(value, proto.blaze_query.LabelListDictEntry.deserializeBinaryFromReader);
                msg.addLabelListDictValue(value);
                break;
            case 11:
                var value = new proto.blaze_query.StringListDictEntry;
                reader.readMessage(value, proto.blaze_query.StringListDictEntry.deserializeBinaryFromReader);
                msg.addStringListDictValue(value);
                break;
            case 17:
                var value = /** @type {number} */ (reader.readInt32());
                msg.addIntListValue(value);
                break;
            case 19:
                var value = new proto.blaze_query.LabelDictUnaryEntry;
                reader.readMessage(value, proto.blaze_query.LabelDictUnaryEntry.deserializeBinaryFromReader);
                msg.addLabelDictUnaryValue(value);
                break;
            case 22:
                var value = new proto.blaze_query.LabelKeyedStringDictEntry;
                reader.readMessage(value, proto.blaze_query.LabelKeyedStringDictEntry.deserializeBinaryFromReader);
                msg.addLabelKeyedStringDictValue(value);
                break;
            case 21:
                var value = new proto.blaze_query.Attribute.SelectorList;
                reader.readMessage(value, proto.blaze_query.Attribute.SelectorList.deserializeBinaryFromReader);
                msg.setSelectorList(value);
                break;
            case 16:
                var value = new proto.blaze_query.DEPRECATED_GlobCriteria;
                reader.readMessage(value, proto.blaze_query.DEPRECATED_GlobCriteria.deserializeBinaryFromReader);
                msg.addDeprecatedGlobCriteria(value);
                break;
            case 18:
                var value = /** @type {!Uint8Array} */ (reader.readBytes());
                msg.addDeprecatedStringDictUnaryValue(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.Attribute.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.Attribute.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.Attribute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.Attribute.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = message.getDeprecatedParseableLocation();
    if (f != null) {
        writer.writeMessage(12, f, proto.blaze_query.Location.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
    if (f != null) {
        writer.writeBool(13, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 20));
    if (f != null) {
        writer.writeBool(20, f);
    }
    f = /** @type {!proto.blaze_query.Attribute.Discriminator} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeEnum(2, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeInt32(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
    if (f != null) {
        writer.writeBool(14, f);
    }
    f = /** @type {!proto.blaze_query.Attribute.Tristate} */ (jspb.Message.getField(message, 15));
    if (f != null) {
        writer.writeEnum(15, f);
    }
    f = message.getStringListValueList();
    if (f.length > 0) {
        writer.writeRepeatedString(6, f);
    }
    f = message.getLicense();
    if (f != null) {
        writer.writeMessage(7, f, proto.blaze_query.License.serializeBinaryToWriter);
    }
    f = message.getStringDictValueList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(8, f, proto.blaze_query.StringDictEntry.serializeBinaryToWriter);
    }
    f = message.getFilesetListValueList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(9, f, proto.blaze_query.FilesetEntry.serializeBinaryToWriter);
    }
    f = message.getLabelListDictValueList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(10, f, proto.blaze_query.LabelListDictEntry.serializeBinaryToWriter);
    }
    f = message.getStringListDictValueList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(11, f, proto.blaze_query.StringListDictEntry.serializeBinaryToWriter);
    }
    f = message.getIntListValueList();
    if (f.length > 0) {
        writer.writeRepeatedInt32(17, f);
    }
    f = message.getLabelDictUnaryValueList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(19, f, proto.blaze_query.LabelDictUnaryEntry.serializeBinaryToWriter);
    }
    f = message.getLabelKeyedStringDictValueList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(22, f, proto.blaze_query.LabelKeyedStringDictEntry.serializeBinaryToWriter);
    }
    f = message.getSelectorList();
    if (f != null) {
        writer.writeMessage(21, f, proto.blaze_query.Attribute.SelectorList.serializeBinaryToWriter);
    }
    f = message.getDeprecatedGlobCriteriaList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(16, f, proto.blaze_query.DEPRECATED_GlobCriteria.serializeBinaryToWriter);
    }
    f = message.getDeprecatedStringDictUnaryValueList_asU8();
    if (f.length > 0) {
        writer.writeRepeatedBytes(18, f);
    }
};
/**
 * @enum {number}
 */
proto.blaze_query.Attribute.Discriminator = {
    INTEGER: 1,
    STRING: 2,
    LABEL: 3,
    OUTPUT: 4,
    STRING_LIST: 5,
    LABEL_LIST: 6,
    OUTPUT_LIST: 7,
    DISTRIBUTION_SET: 8,
    LICENSE: 9,
    STRING_DICT: 10,
    FILESET_ENTRY_LIST: 11,
    LABEL_LIST_DICT: 12,
    STRING_LIST_DICT: 13,
    BOOLEAN: 14,
    TRISTATE: 15,
    INTEGER_LIST: 16,
    UNKNOWN: 18,
    LABEL_DICT_UNARY: 19,
    SELECTOR_LIST: 20,
    LABEL_KEYED_STRING_DICT: 21,
    DEPRECATED_STRING_DICT_UNARY: 17
};
/**
 * @enum {number}
 */
proto.blaze_query.Attribute.Tristate = {
    NO: 0,
    YES: 1,
    AUTO: 2
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.Attribute.SelectorEntry = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.blaze_query.Attribute.SelectorEntry.repeatedFields_, null);
};
goog.inherits(proto.blaze_query.Attribute.SelectorEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.Attribute.SelectorEntry.displayName = 'proto.blaze_query.Attribute.SelectorEntry';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blaze_query.Attribute.SelectorEntry.repeatedFields_ = [6, 8, 9, 10, 11, 13, 15, 17, 12, 14];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.Attribute.SelectorEntry.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.Attribute.SelectorEntry.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.Attribute.SelectorEntry} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.Attribute.SelectorEntry.toObject = function (includeInstance, msg) {
        var f, obj = {
            label: jspb.Message.getField(msg, 1),
            isDefaultValue: jspb.Message.getField(msg, 16),
            intValue: jspb.Message.getField(msg, 2),
            stringValue: jspb.Message.getField(msg, 3),
            booleanValue: jspb.Message.getField(msg, 4),
            tristateValue: jspb.Message.getField(msg, 5),
            stringListValueList: jspb.Message.getRepeatedField(msg, 6),
            license: (f = msg.getLicense()) && proto.blaze_query.License.toObject(includeInstance, f),
            stringDictValueList: jspb.Message.toObjectList(msg.getStringDictValueList(), proto.blaze_query.StringDictEntry.toObject, includeInstance),
            filesetListValueList: jspb.Message.toObjectList(msg.getFilesetListValueList(), proto.blaze_query.FilesetEntry.toObject, includeInstance),
            labelListDictValueList: jspb.Message.toObjectList(msg.getLabelListDictValueList(), proto.blaze_query.LabelListDictEntry.toObject, includeInstance),
            stringListDictValueList: jspb.Message.toObjectList(msg.getStringListDictValueList(), proto.blaze_query.StringListDictEntry.toObject, includeInstance),
            intListValueList: jspb.Message.getRepeatedField(msg, 13),
            labelDictUnaryValueList: jspb.Message.toObjectList(msg.getLabelDictUnaryValueList(), proto.blaze_query.LabelDictUnaryEntry.toObject, includeInstance),
            labelKeyedStringDictValueList: jspb.Message.toObjectList(msg.getLabelKeyedStringDictValueList(), proto.blaze_query.LabelKeyedStringDictEntry.toObject, includeInstance),
            deprecatedGlobCriteriaList: jspb.Message.toObjectList(msg.getDeprecatedGlobCriteriaList(), proto.blaze_query.DEPRECATED_GlobCriteria.toObject, includeInstance),
            deprecatedStringDictUnaryValueList: msg.getDeprecatedStringDictUnaryValueList_asB64()
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.Attribute.SelectorEntry}
 */
proto.blaze_query.Attribute.SelectorEntry.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.Attribute.SelectorEntry;
    return proto.blaze_query.Attribute.SelectorEntry.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.Attribute.SelectorEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.Attribute.SelectorEntry}
 */
proto.blaze_query.Attribute.SelectorEntry.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setLabel(value);
                break;
            case 16:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setIsDefaultValue(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setIntValue(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setStringValue(value);
                break;
            case 4:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setBooleanValue(value);
                break;
            case 5:
                var value = /** @type {!proto.blaze_query.Attribute.Tristate} */ (reader.readEnum());
                msg.setTristateValue(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.addStringListValue(value);
                break;
            case 7:
                var value = new proto.blaze_query.License;
                reader.readMessage(value, proto.blaze_query.License.deserializeBinaryFromReader);
                msg.setLicense(value);
                break;
            case 8:
                var value = new proto.blaze_query.StringDictEntry;
                reader.readMessage(value, proto.blaze_query.StringDictEntry.deserializeBinaryFromReader);
                msg.addStringDictValue(value);
                break;
            case 9:
                var value = new proto.blaze_query.FilesetEntry;
                reader.readMessage(value, proto.blaze_query.FilesetEntry.deserializeBinaryFromReader);
                msg.addFilesetListValue(value);
                break;
            case 10:
                var value = new proto.blaze_query.LabelListDictEntry;
                reader.readMessage(value, proto.blaze_query.LabelListDictEntry.deserializeBinaryFromReader);
                msg.addLabelListDictValue(value);
                break;
            case 11:
                var value = new proto.blaze_query.StringListDictEntry;
                reader.readMessage(value, proto.blaze_query.StringListDictEntry.deserializeBinaryFromReader);
                msg.addStringListDictValue(value);
                break;
            case 13:
                var value = /** @type {number} */ (reader.readInt32());
                msg.addIntListValue(value);
                break;
            case 15:
                var value = new proto.blaze_query.LabelDictUnaryEntry;
                reader.readMessage(value, proto.blaze_query.LabelDictUnaryEntry.deserializeBinaryFromReader);
                msg.addLabelDictUnaryValue(value);
                break;
            case 17:
                var value = new proto.blaze_query.LabelKeyedStringDictEntry;
                reader.readMessage(value, proto.blaze_query.LabelKeyedStringDictEntry.deserializeBinaryFromReader);
                msg.addLabelKeyedStringDictValue(value);
                break;
            case 12:
                var value = new proto.blaze_query.DEPRECATED_GlobCriteria;
                reader.readMessage(value, proto.blaze_query.DEPRECATED_GlobCriteria.deserializeBinaryFromReader);
                msg.addDeprecatedGlobCriteria(value);
                break;
            case 14:
                var value = /** @type {!Uint8Array} */ (reader.readBytes());
                msg.addDeprecatedStringDictUnaryValue(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.Attribute.SelectorEntry.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.Attribute.SelectorEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.Attribute.SelectorEntry.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 16));
    if (f != null) {
        writer.writeBool(16, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeInt32(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeBool(4, f);
    }
    f = /** @type {!proto.blaze_query.Attribute.Tristate} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeEnum(5, f);
    }
    f = message.getStringListValueList();
    if (f.length > 0) {
        writer.writeRepeatedString(6, f);
    }
    f = message.getLicense();
    if (f != null) {
        writer.writeMessage(7, f, proto.blaze_query.License.serializeBinaryToWriter);
    }
    f = message.getStringDictValueList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(8, f, proto.blaze_query.StringDictEntry.serializeBinaryToWriter);
    }
    f = message.getFilesetListValueList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(9, f, proto.blaze_query.FilesetEntry.serializeBinaryToWriter);
    }
    f = message.getLabelListDictValueList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(10, f, proto.blaze_query.LabelListDictEntry.serializeBinaryToWriter);
    }
    f = message.getStringListDictValueList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(11, f, proto.blaze_query.StringListDictEntry.serializeBinaryToWriter);
    }
    f = message.getIntListValueList();
    if (f.length > 0) {
        writer.writeRepeatedInt32(13, f);
    }
    f = message.getLabelDictUnaryValueList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(15, f, proto.blaze_query.LabelDictUnaryEntry.serializeBinaryToWriter);
    }
    f = message.getLabelKeyedStringDictValueList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(17, f, proto.blaze_query.LabelKeyedStringDictEntry.serializeBinaryToWriter);
    }
    f = message.getDeprecatedGlobCriteriaList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(12, f, proto.blaze_query.DEPRECATED_GlobCriteria.serializeBinaryToWriter);
    }
    f = message.getDeprecatedStringDictUnaryValueList_asU8();
    if (f.length > 0) {
        writer.writeRepeatedBytes(14, f);
    }
};
/**
 * optional string label = 1;
 * @return {string}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getLabel = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/** @param {string} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setLabel = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearLabel = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.hasLabel = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional bool is_default_value = 16;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getIsDefaultValue = function () {
    return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 16, false));
};
/** @param {boolean} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setIsDefaultValue = function (value) {
    jspb.Message.setField(this, 16, value);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearIsDefaultValue = function () {
    jspb.Message.setField(this, 16, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.hasIsDefaultValue = function () {
    return jspb.Message.getField(this, 16) != null;
};
/**
 * optional int32 int_value = 2;
 * @return {number}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getIntValue = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/** @param {number} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setIntValue = function (value) {
    jspb.Message.setField(this, 2, value);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearIntValue = function () {
    jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.hasIntValue = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string string_value = 3;
 * @return {string}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getStringValue = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/** @param {string} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setStringValue = function (value) {
    jspb.Message.setField(this, 3, value);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearStringValue = function () {
    jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.hasStringValue = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional bool boolean_value = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getBooleanValue = function () {
    return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};
/** @param {boolean} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setBooleanValue = function (value) {
    jspb.Message.setField(this, 4, value);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearBooleanValue = function () {
    jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.hasBooleanValue = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional Tristate tristate_value = 5;
 * @return {!proto.blaze_query.Attribute.Tristate}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getTristateValue = function () {
    return /** @type {!proto.blaze_query.Attribute.Tristate} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};
/** @param {!proto.blaze_query.Attribute.Tristate} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setTristateValue = function (value) {
    jspb.Message.setField(this, 5, value);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearTristateValue = function () {
    jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.hasTristateValue = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * repeated string string_list_value = 6;
 * @return {!Array.<string>}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getStringListValueList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 6));
};
/** @param {!Array.<string>} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setStringListValueList = function (value) {
    jspb.Message.setField(this, 6, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.addStringListValue = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearStringListValueList = function () {
    this.setStringListValueList([]);
};
/**
 * optional License license = 7;
 * @return {?proto.blaze_query.License}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getLicense = function () {
    return /** @type{?proto.blaze_query.License} */ (jspb.Message.getWrapperField(this, proto.blaze_query.License, 7));
};
/** @param {?proto.blaze_query.License|undefined} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setLicense = function (value) {
    jspb.Message.setWrapperField(this, 7, value);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearLicense = function () {
    this.setLicense(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.hasLicense = function () {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * repeated StringDictEntry string_dict_value = 8;
 * @return {!Array.<!proto.blaze_query.StringDictEntry>}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getStringDictValueList = function () {
    return /** @type{!Array.<!proto.blaze_query.StringDictEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.StringDictEntry, 8));
};
/** @param {!Array.<!proto.blaze_query.StringDictEntry>} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setStringDictValueList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 8, value);
};
/**
 * @param {!proto.blaze_query.StringDictEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.StringDictEntry}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.addStringDictValue = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.blaze_query.StringDictEntry, opt_index);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearStringDictValueList = function () {
    this.setStringDictValueList([]);
};
/**
 * repeated FilesetEntry fileset_list_value = 9;
 * @return {!Array.<!proto.blaze_query.FilesetEntry>}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getFilesetListValueList = function () {
    return /** @type{!Array.<!proto.blaze_query.FilesetEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.FilesetEntry, 9));
};
/** @param {!Array.<!proto.blaze_query.FilesetEntry>} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setFilesetListValueList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 9, value);
};
/**
 * @param {!proto.blaze_query.FilesetEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.FilesetEntry}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.addFilesetListValue = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.blaze_query.FilesetEntry, opt_index);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearFilesetListValueList = function () {
    this.setFilesetListValueList([]);
};
/**
 * repeated LabelListDictEntry label_list_dict_value = 10;
 * @return {!Array.<!proto.blaze_query.LabelListDictEntry>}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getLabelListDictValueList = function () {
    return /** @type{!Array.<!proto.blaze_query.LabelListDictEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.LabelListDictEntry, 10));
};
/** @param {!Array.<!proto.blaze_query.LabelListDictEntry>} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setLabelListDictValueList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 10, value);
};
/**
 * @param {!proto.blaze_query.LabelListDictEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.LabelListDictEntry}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.addLabelListDictValue = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.blaze_query.LabelListDictEntry, opt_index);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearLabelListDictValueList = function () {
    this.setLabelListDictValueList([]);
};
/**
 * repeated StringListDictEntry string_list_dict_value = 11;
 * @return {!Array.<!proto.blaze_query.StringListDictEntry>}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getStringListDictValueList = function () {
    return /** @type{!Array.<!proto.blaze_query.StringListDictEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.StringListDictEntry, 11));
};
/** @param {!Array.<!proto.blaze_query.StringListDictEntry>} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setStringListDictValueList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 11, value);
};
/**
 * @param {!proto.blaze_query.StringListDictEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.StringListDictEntry}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.addStringListDictValue = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.blaze_query.StringListDictEntry, opt_index);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearStringListDictValueList = function () {
    this.setStringListDictValueList([]);
};
/**
 * repeated int32 int_list_value = 13;
 * @return {!Array.<number>}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getIntListValueList = function () {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 13));
};
/** @param {!Array.<number>} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setIntListValueList = function (value) {
    jspb.Message.setField(this, 13, value || []);
};
/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.addIntListValue = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearIntListValueList = function () {
    this.setIntListValueList([]);
};
/**
 * repeated LabelDictUnaryEntry label_dict_unary_value = 15;
 * @return {!Array.<!proto.blaze_query.LabelDictUnaryEntry>}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getLabelDictUnaryValueList = function () {
    return /** @type{!Array.<!proto.blaze_query.LabelDictUnaryEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.LabelDictUnaryEntry, 15));
};
/** @param {!Array.<!proto.blaze_query.LabelDictUnaryEntry>} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setLabelDictUnaryValueList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 15, value);
};
/**
 * @param {!proto.blaze_query.LabelDictUnaryEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.LabelDictUnaryEntry}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.addLabelDictUnaryValue = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.blaze_query.LabelDictUnaryEntry, opt_index);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearLabelDictUnaryValueList = function () {
    this.setLabelDictUnaryValueList([]);
};
/**
 * repeated LabelKeyedStringDictEntry label_keyed_string_dict_value = 17;
 * @return {!Array.<!proto.blaze_query.LabelKeyedStringDictEntry>}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getLabelKeyedStringDictValueList = function () {
    return /** @type{!Array.<!proto.blaze_query.LabelKeyedStringDictEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.LabelKeyedStringDictEntry, 17));
};
/** @param {!Array.<!proto.blaze_query.LabelKeyedStringDictEntry>} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setLabelKeyedStringDictValueList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 17, value);
};
/**
 * @param {!proto.blaze_query.LabelKeyedStringDictEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.LabelKeyedStringDictEntry}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.addLabelKeyedStringDictValue = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 17, opt_value, proto.blaze_query.LabelKeyedStringDictEntry, opt_index);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearLabelKeyedStringDictValueList = function () {
    this.setLabelKeyedStringDictValueList([]);
};
/**
 * repeated DEPRECATED_GlobCriteria DEPRECATED_glob_criteria = 12;
 * @return {!Array.<!proto.blaze_query.DEPRECATED_GlobCriteria>}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getDeprecatedGlobCriteriaList = function () {
    return /** @type{!Array.<!proto.blaze_query.DEPRECATED_GlobCriteria>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.DEPRECATED_GlobCriteria, 12));
};
/** @param {!Array.<!proto.blaze_query.DEPRECATED_GlobCriteria>} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setDeprecatedGlobCriteriaList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 12, value);
};
/**
 * @param {!proto.blaze_query.DEPRECATED_GlobCriteria=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.DEPRECATED_GlobCriteria}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.addDeprecatedGlobCriteria = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.blaze_query.DEPRECATED_GlobCriteria, opt_index);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearDeprecatedGlobCriteriaList = function () {
    this.setDeprecatedGlobCriteriaList([]);
};
/**
 * repeated bytes DEPRECATED_string_dict_unary_value = 14;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getDeprecatedStringDictUnaryValueList = function () {
    return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 14));
};
/**
 * repeated bytes DEPRECATED_string_dict_unary_value = 14;
 * This is a type-conversion wrapper around `getDeprecatedStringDictUnaryValueList()`
 * @return {!Array.<string>}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getDeprecatedStringDictUnaryValueList_asB64 = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.bytesListAsB64(this.getDeprecatedStringDictUnaryValueList()));
};
/**
 * repeated bytes DEPRECATED_string_dict_unary_value = 14;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDeprecatedStringDictUnaryValueList()`
 * @return {!Array.<!Uint8Array>}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getDeprecatedStringDictUnaryValueList_asU8 = function () {
    return /** @type {!Array.<!Uint8Array>} */ (jspb.Message.bytesListAsU8(this.getDeprecatedStringDictUnaryValueList()));
};
/** @param {!(Array<!Uint8Array>|Array<string>)} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setDeprecatedStringDictUnaryValueList = function (value) {
    jspb.Message.setField(this, 14, value || []);
};
/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.addDeprecatedStringDictUnaryValue = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearDeprecatedStringDictUnaryValueList = function () {
    this.setDeprecatedStringDictUnaryValueList([]);
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.Attribute.Selector = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.blaze_query.Attribute.Selector.repeatedFields_, null);
};
goog.inherits(proto.blaze_query.Attribute.Selector, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.Attribute.Selector.displayName = 'proto.blaze_query.Attribute.Selector';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blaze_query.Attribute.Selector.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.Attribute.Selector.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.Attribute.Selector.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.Attribute.Selector} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.Attribute.Selector.toObject = function (includeInstance, msg) {
        var f, obj = {
            entriesList: jspb.Message.toObjectList(msg.getEntriesList(), proto.blaze_query.Attribute.SelectorEntry.toObject, includeInstance),
            hasDefaultValue: jspb.Message.getField(msg, 2),
            noMatchError: jspb.Message.getField(msg, 3)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.Attribute.Selector}
 */
proto.blaze_query.Attribute.Selector.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.Attribute.Selector;
    return proto.blaze_query.Attribute.Selector.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.Attribute.Selector} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.Attribute.Selector}
 */
proto.blaze_query.Attribute.Selector.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.blaze_query.Attribute.SelectorEntry;
                reader.readMessage(value, proto.blaze_query.Attribute.SelectorEntry.deserializeBinaryFromReader);
                msg.addEntries(value);
                break;
            case 2:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setHasDefaultValue(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setNoMatchError(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.Attribute.Selector.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.Attribute.Selector.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.Attribute.Selector} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.Attribute.Selector.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getEntriesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.blaze_query.Attribute.SelectorEntry.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeBool(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
};
/**
 * repeated SelectorEntry entries = 1;
 * @return {!Array.<!proto.blaze_query.Attribute.SelectorEntry>}
 */
proto.blaze_query.Attribute.Selector.prototype.getEntriesList = function () {
    return /** @type{!Array.<!proto.blaze_query.Attribute.SelectorEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.Attribute.SelectorEntry, 1));
};
/** @param {!Array.<!proto.blaze_query.Attribute.SelectorEntry>} value */
proto.blaze_query.Attribute.Selector.prototype.setEntriesList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.blaze_query.Attribute.SelectorEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.Attribute.SelectorEntry}
 */
proto.blaze_query.Attribute.Selector.prototype.addEntries = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.blaze_query.Attribute.SelectorEntry, opt_index);
};
proto.blaze_query.Attribute.Selector.prototype.clearEntriesList = function () {
    this.setEntriesList([]);
};
/**
 * optional bool has_default_value = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.blaze_query.Attribute.Selector.prototype.getHasDefaultValue = function () {
    return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};
/** @param {boolean} value */
proto.blaze_query.Attribute.Selector.prototype.setHasDefaultValue = function (value) {
    jspb.Message.setField(this, 2, value);
};
proto.blaze_query.Attribute.Selector.prototype.clearHasDefaultValue = function () {
    jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.Selector.prototype.hasHasDefaultValue = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string no_match_error = 3;
 * @return {string}
 */
proto.blaze_query.Attribute.Selector.prototype.getNoMatchError = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/** @param {string} value */
proto.blaze_query.Attribute.Selector.prototype.setNoMatchError = function (value) {
    jspb.Message.setField(this, 3, value);
};
proto.blaze_query.Attribute.Selector.prototype.clearNoMatchError = function () {
    jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.Selector.prototype.hasNoMatchError = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.Attribute.SelectorList = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.blaze_query.Attribute.SelectorList.repeatedFields_, null);
};
goog.inherits(proto.blaze_query.Attribute.SelectorList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.Attribute.SelectorList.displayName = 'proto.blaze_query.Attribute.SelectorList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blaze_query.Attribute.SelectorList.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.Attribute.SelectorList.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.Attribute.SelectorList.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.Attribute.SelectorList} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.Attribute.SelectorList.toObject = function (includeInstance, msg) {
        var f, obj = {
            type: jspb.Message.getField(msg, 1),
            elementsList: jspb.Message.toObjectList(msg.getElementsList(), proto.blaze_query.Attribute.Selector.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.Attribute.SelectorList}
 */
proto.blaze_query.Attribute.SelectorList.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.Attribute.SelectorList;
    return proto.blaze_query.Attribute.SelectorList.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.Attribute.SelectorList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.Attribute.SelectorList}
 */
proto.blaze_query.Attribute.SelectorList.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.blaze_query.Attribute.Discriminator} */ (reader.readEnum());
                msg.setType(value);
                break;
            case 2:
                var value = new proto.blaze_query.Attribute.Selector;
                reader.readMessage(value, proto.blaze_query.Attribute.Selector.deserializeBinaryFromReader);
                msg.addElements(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.Attribute.SelectorList.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.Attribute.SelectorList.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.Attribute.SelectorList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.Attribute.SelectorList.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {!proto.blaze_query.Attribute.Discriminator} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeEnum(1, f);
    }
    f = message.getElementsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.blaze_query.Attribute.Selector.serializeBinaryToWriter);
    }
};
/**
 * optional Discriminator type = 1;
 * @return {!proto.blaze_query.Attribute.Discriminator}
 */
proto.blaze_query.Attribute.SelectorList.prototype.getType = function () {
    return /** @type {!proto.blaze_query.Attribute.Discriminator} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};
/** @param {!proto.blaze_query.Attribute.Discriminator} value */
proto.blaze_query.Attribute.SelectorList.prototype.setType = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.Attribute.SelectorList.prototype.clearType = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.SelectorList.prototype.hasType = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated Selector elements = 2;
 * @return {!Array.<!proto.blaze_query.Attribute.Selector>}
 */
proto.blaze_query.Attribute.SelectorList.prototype.getElementsList = function () {
    return /** @type{!Array.<!proto.blaze_query.Attribute.Selector>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.Attribute.Selector, 2));
};
/** @param {!Array.<!proto.blaze_query.Attribute.Selector>} value */
proto.blaze_query.Attribute.SelectorList.prototype.setElementsList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.blaze_query.Attribute.Selector=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.Attribute.Selector}
 */
proto.blaze_query.Attribute.SelectorList.prototype.addElements = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.blaze_query.Attribute.Selector, opt_index);
};
proto.blaze_query.Attribute.SelectorList.prototype.clearElementsList = function () {
    this.setElementsList([]);
};
/**
 * required string name = 1;
 * @return {string}
 */
proto.blaze_query.Attribute.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/** @param {string} value */
proto.blaze_query.Attribute.prototype.setName = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.Attribute.prototype.clearName = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional Location DEPRECATED_parseable_location = 12;
 * @return {?proto.blaze_query.Location}
 */
proto.blaze_query.Attribute.prototype.getDeprecatedParseableLocation = function () {
    return /** @type{?proto.blaze_query.Location} */ (jspb.Message.getWrapperField(this, proto.blaze_query.Location, 12));
};
/** @param {?proto.blaze_query.Location|undefined} value */
proto.blaze_query.Attribute.prototype.setDeprecatedParseableLocation = function (value) {
    jspb.Message.setWrapperField(this, 12, value);
};
proto.blaze_query.Attribute.prototype.clearDeprecatedParseableLocation = function () {
    this.setDeprecatedParseableLocation(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.prototype.hasDeprecatedParseableLocation = function () {
    return jspb.Message.getField(this, 12) != null;
};
/**
 * optional bool explicitly_specified = 13;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.blaze_query.Attribute.prototype.getExplicitlySpecified = function () {
    return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 13, false));
};
/** @param {boolean} value */
proto.blaze_query.Attribute.prototype.setExplicitlySpecified = function (value) {
    jspb.Message.setField(this, 13, value);
};
proto.blaze_query.Attribute.prototype.clearExplicitlySpecified = function () {
    jspb.Message.setField(this, 13, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.prototype.hasExplicitlySpecified = function () {
    return jspb.Message.getField(this, 13) != null;
};
/**
 * optional bool nodep = 20;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.blaze_query.Attribute.prototype.getNodep = function () {
    return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 20, false));
};
/** @param {boolean} value */
proto.blaze_query.Attribute.prototype.setNodep = function (value) {
    jspb.Message.setField(this, 20, value);
};
proto.blaze_query.Attribute.prototype.clearNodep = function () {
    jspb.Message.setField(this, 20, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.prototype.hasNodep = function () {
    return jspb.Message.getField(this, 20) != null;
};
/**
 * required Discriminator type = 2;
 * @return {!proto.blaze_query.Attribute.Discriminator}
 */
proto.blaze_query.Attribute.prototype.getType = function () {
    return /** @type {!proto.blaze_query.Attribute.Discriminator} */ (jspb.Message.getFieldWithDefault(this, 2, 1));
};
/** @param {!proto.blaze_query.Attribute.Discriminator} value */
proto.blaze_query.Attribute.prototype.setType = function (value) {
    jspb.Message.setField(this, 2, value);
};
proto.blaze_query.Attribute.prototype.clearType = function () {
    jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.prototype.hasType = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional int32 int_value = 3;
 * @return {number}
 */
proto.blaze_query.Attribute.prototype.getIntValue = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};
/** @param {number} value */
proto.blaze_query.Attribute.prototype.setIntValue = function (value) {
    jspb.Message.setField(this, 3, value);
};
proto.blaze_query.Attribute.prototype.clearIntValue = function () {
    jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.prototype.hasIntValue = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string string_value = 5;
 * @return {string}
 */
proto.blaze_query.Attribute.prototype.getStringValue = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/** @param {string} value */
proto.blaze_query.Attribute.prototype.setStringValue = function (value) {
    jspb.Message.setField(this, 5, value);
};
proto.blaze_query.Attribute.prototype.clearStringValue = function () {
    jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.prototype.hasStringValue = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional bool boolean_value = 14;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.blaze_query.Attribute.prototype.getBooleanValue = function () {
    return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 14, false));
};
/** @param {boolean} value */
proto.blaze_query.Attribute.prototype.setBooleanValue = function (value) {
    jspb.Message.setField(this, 14, value);
};
proto.blaze_query.Attribute.prototype.clearBooleanValue = function () {
    jspb.Message.setField(this, 14, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.prototype.hasBooleanValue = function () {
    return jspb.Message.getField(this, 14) != null;
};
/**
 * optional Tristate tristate_value = 15;
 * @return {!proto.blaze_query.Attribute.Tristate}
 */
proto.blaze_query.Attribute.prototype.getTristateValue = function () {
    return /** @type {!proto.blaze_query.Attribute.Tristate} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};
/** @param {!proto.blaze_query.Attribute.Tristate} value */
proto.blaze_query.Attribute.prototype.setTristateValue = function (value) {
    jspb.Message.setField(this, 15, value);
};
proto.blaze_query.Attribute.prototype.clearTristateValue = function () {
    jspb.Message.setField(this, 15, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.prototype.hasTristateValue = function () {
    return jspb.Message.getField(this, 15) != null;
};
/**
 * repeated string string_list_value = 6;
 * @return {!Array.<string>}
 */
proto.blaze_query.Attribute.prototype.getStringListValueList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 6));
};
/** @param {!Array.<string>} value */
proto.blaze_query.Attribute.prototype.setStringListValueList = function (value) {
    jspb.Message.setField(this, 6, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.blaze_query.Attribute.prototype.addStringListValue = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};
proto.blaze_query.Attribute.prototype.clearStringListValueList = function () {
    this.setStringListValueList([]);
};
/**
 * optional License license = 7;
 * @return {?proto.blaze_query.License}
 */
proto.blaze_query.Attribute.prototype.getLicense = function () {
    return /** @type{?proto.blaze_query.License} */ (jspb.Message.getWrapperField(this, proto.blaze_query.License, 7));
};
/** @param {?proto.blaze_query.License|undefined} value */
proto.blaze_query.Attribute.prototype.setLicense = function (value) {
    jspb.Message.setWrapperField(this, 7, value);
};
proto.blaze_query.Attribute.prototype.clearLicense = function () {
    this.setLicense(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.prototype.hasLicense = function () {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * repeated StringDictEntry string_dict_value = 8;
 * @return {!Array.<!proto.blaze_query.StringDictEntry>}
 */
proto.blaze_query.Attribute.prototype.getStringDictValueList = function () {
    return /** @type{!Array.<!proto.blaze_query.StringDictEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.StringDictEntry, 8));
};
/** @param {!Array.<!proto.blaze_query.StringDictEntry>} value */
proto.blaze_query.Attribute.prototype.setStringDictValueList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 8, value);
};
/**
 * @param {!proto.blaze_query.StringDictEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.StringDictEntry}
 */
proto.blaze_query.Attribute.prototype.addStringDictValue = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.blaze_query.StringDictEntry, opt_index);
};
proto.blaze_query.Attribute.prototype.clearStringDictValueList = function () {
    this.setStringDictValueList([]);
};
/**
 * repeated FilesetEntry fileset_list_value = 9;
 * @return {!Array.<!proto.blaze_query.FilesetEntry>}
 */
proto.blaze_query.Attribute.prototype.getFilesetListValueList = function () {
    return /** @type{!Array.<!proto.blaze_query.FilesetEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.FilesetEntry, 9));
};
/** @param {!Array.<!proto.blaze_query.FilesetEntry>} value */
proto.blaze_query.Attribute.prototype.setFilesetListValueList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 9, value);
};
/**
 * @param {!proto.blaze_query.FilesetEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.FilesetEntry}
 */
proto.blaze_query.Attribute.prototype.addFilesetListValue = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.blaze_query.FilesetEntry, opt_index);
};
proto.blaze_query.Attribute.prototype.clearFilesetListValueList = function () {
    this.setFilesetListValueList([]);
};
/**
 * repeated LabelListDictEntry label_list_dict_value = 10;
 * @return {!Array.<!proto.blaze_query.LabelListDictEntry>}
 */
proto.blaze_query.Attribute.prototype.getLabelListDictValueList = function () {
    return /** @type{!Array.<!proto.blaze_query.LabelListDictEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.LabelListDictEntry, 10));
};
/** @param {!Array.<!proto.blaze_query.LabelListDictEntry>} value */
proto.blaze_query.Attribute.prototype.setLabelListDictValueList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 10, value);
};
/**
 * @param {!proto.blaze_query.LabelListDictEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.LabelListDictEntry}
 */
proto.blaze_query.Attribute.prototype.addLabelListDictValue = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.blaze_query.LabelListDictEntry, opt_index);
};
proto.blaze_query.Attribute.prototype.clearLabelListDictValueList = function () {
    this.setLabelListDictValueList([]);
};
/**
 * repeated StringListDictEntry string_list_dict_value = 11;
 * @return {!Array.<!proto.blaze_query.StringListDictEntry>}
 */
proto.blaze_query.Attribute.prototype.getStringListDictValueList = function () {
    return /** @type{!Array.<!proto.blaze_query.StringListDictEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.StringListDictEntry, 11));
};
/** @param {!Array.<!proto.blaze_query.StringListDictEntry>} value */
proto.blaze_query.Attribute.prototype.setStringListDictValueList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 11, value);
};
/**
 * @param {!proto.blaze_query.StringListDictEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.StringListDictEntry}
 */
proto.blaze_query.Attribute.prototype.addStringListDictValue = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.blaze_query.StringListDictEntry, opt_index);
};
proto.blaze_query.Attribute.prototype.clearStringListDictValueList = function () {
    this.setStringListDictValueList([]);
};
/**
 * repeated int32 int_list_value = 17;
 * @return {!Array.<number>}
 */
proto.blaze_query.Attribute.prototype.getIntListValueList = function () {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 17));
};
/** @param {!Array.<number>} value */
proto.blaze_query.Attribute.prototype.setIntListValueList = function (value) {
    jspb.Message.setField(this, 17, value || []);
};
/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.blaze_query.Attribute.prototype.addIntListValue = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 17, value, opt_index);
};
proto.blaze_query.Attribute.prototype.clearIntListValueList = function () {
    this.setIntListValueList([]);
};
/**
 * repeated LabelDictUnaryEntry label_dict_unary_value = 19;
 * @return {!Array.<!proto.blaze_query.LabelDictUnaryEntry>}
 */
proto.blaze_query.Attribute.prototype.getLabelDictUnaryValueList = function () {
    return /** @type{!Array.<!proto.blaze_query.LabelDictUnaryEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.LabelDictUnaryEntry, 19));
};
/** @param {!Array.<!proto.blaze_query.LabelDictUnaryEntry>} value */
proto.blaze_query.Attribute.prototype.setLabelDictUnaryValueList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 19, value);
};
/**
 * @param {!proto.blaze_query.LabelDictUnaryEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.LabelDictUnaryEntry}
 */
proto.blaze_query.Attribute.prototype.addLabelDictUnaryValue = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 19, opt_value, proto.blaze_query.LabelDictUnaryEntry, opt_index);
};
proto.blaze_query.Attribute.prototype.clearLabelDictUnaryValueList = function () {
    this.setLabelDictUnaryValueList([]);
};
/**
 * repeated LabelKeyedStringDictEntry label_keyed_string_dict_value = 22;
 * @return {!Array.<!proto.blaze_query.LabelKeyedStringDictEntry>}
 */
proto.blaze_query.Attribute.prototype.getLabelKeyedStringDictValueList = function () {
    return /** @type{!Array.<!proto.blaze_query.LabelKeyedStringDictEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.LabelKeyedStringDictEntry, 22));
};
/** @param {!Array.<!proto.blaze_query.LabelKeyedStringDictEntry>} value */
proto.blaze_query.Attribute.prototype.setLabelKeyedStringDictValueList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 22, value);
};
/**
 * @param {!proto.blaze_query.LabelKeyedStringDictEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.LabelKeyedStringDictEntry}
 */
proto.blaze_query.Attribute.prototype.addLabelKeyedStringDictValue = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.blaze_query.LabelKeyedStringDictEntry, opt_index);
};
proto.blaze_query.Attribute.prototype.clearLabelKeyedStringDictValueList = function () {
    this.setLabelKeyedStringDictValueList([]);
};
/**
 * optional SelectorList selector_list = 21;
 * @return {?proto.blaze_query.Attribute.SelectorList}
 */
proto.blaze_query.Attribute.prototype.getSelectorList = function () {
    return /** @type{?proto.blaze_query.Attribute.SelectorList} */ (jspb.Message.getWrapperField(this, proto.blaze_query.Attribute.SelectorList, 21));
};
/** @param {?proto.blaze_query.Attribute.SelectorList|undefined} value */
proto.blaze_query.Attribute.prototype.setSelectorList = function (value) {
    jspb.Message.setWrapperField(this, 21, value);
};
proto.blaze_query.Attribute.prototype.clearSelectorList = function () {
    this.setSelectorList(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.prototype.hasSelectorList = function () {
    return jspb.Message.getField(this, 21) != null;
};
/**
 * repeated DEPRECATED_GlobCriteria DEPRECATED_glob_criteria = 16;
 * @return {!Array.<!proto.blaze_query.DEPRECATED_GlobCriteria>}
 */
proto.blaze_query.Attribute.prototype.getDeprecatedGlobCriteriaList = function () {
    return /** @type{!Array.<!proto.blaze_query.DEPRECATED_GlobCriteria>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.DEPRECATED_GlobCriteria, 16));
};
/** @param {!Array.<!proto.blaze_query.DEPRECATED_GlobCriteria>} value */
proto.blaze_query.Attribute.prototype.setDeprecatedGlobCriteriaList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 16, value);
};
/**
 * @param {!proto.blaze_query.DEPRECATED_GlobCriteria=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.DEPRECATED_GlobCriteria}
 */
proto.blaze_query.Attribute.prototype.addDeprecatedGlobCriteria = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.blaze_query.DEPRECATED_GlobCriteria, opt_index);
};
proto.blaze_query.Attribute.prototype.clearDeprecatedGlobCriteriaList = function () {
    this.setDeprecatedGlobCriteriaList([]);
};
/**
 * repeated bytes DEPRECATED_string_dict_unary_value = 18;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.blaze_query.Attribute.prototype.getDeprecatedStringDictUnaryValueList = function () {
    return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 18));
};
/**
 * repeated bytes DEPRECATED_string_dict_unary_value = 18;
 * This is a type-conversion wrapper around `getDeprecatedStringDictUnaryValueList()`
 * @return {!Array.<string>}
 */
proto.blaze_query.Attribute.prototype.getDeprecatedStringDictUnaryValueList_asB64 = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.bytesListAsB64(this.getDeprecatedStringDictUnaryValueList()));
};
/**
 * repeated bytes DEPRECATED_string_dict_unary_value = 18;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDeprecatedStringDictUnaryValueList()`
 * @return {!Array.<!Uint8Array>}
 */
proto.blaze_query.Attribute.prototype.getDeprecatedStringDictUnaryValueList_asU8 = function () {
    return /** @type {!Array.<!Uint8Array>} */ (jspb.Message.bytesListAsU8(this.getDeprecatedStringDictUnaryValueList()));
};
/** @param {!(Array<!Uint8Array>|Array<string>)} value */
proto.blaze_query.Attribute.prototype.setDeprecatedStringDictUnaryValueList = function (value) {
    jspb.Message.setField(this, 18, value || []);
};
/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 */
proto.blaze_query.Attribute.prototype.addDeprecatedStringDictUnaryValue = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};
proto.blaze_query.Attribute.prototype.clearDeprecatedStringDictUnaryValueList = function () {
    this.setDeprecatedStringDictUnaryValueList([]);
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.Rule = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.blaze_query.Rule.repeatedFields_, null);
};
goog.inherits(proto.blaze_query.Rule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.Rule.displayName = 'proto.blaze_query.Rule';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blaze_query.Rule.repeatedFields_ = [4, 5, 6, 7, 11];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.Rule.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.Rule.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.Rule} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.Rule.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: jspb.Message.getField(msg, 1),
            ruleClass: jspb.Message.getField(msg, 2),
            location: jspb.Message.getField(msg, 3),
            attributeList: jspb.Message.toObjectList(msg.getAttributeList(), proto.blaze_query.Attribute.toObject, includeInstance),
            ruleInputList: jspb.Message.getRepeatedField(msg, 5),
            ruleOutputList: jspb.Message.getRepeatedField(msg, 6),
            defaultSettingList: jspb.Message.getRepeatedField(msg, 7),
            deprecatedParseableLocation: (f = msg.getDeprecatedParseableLocation()) && proto.blaze_query.Location.toObject(includeInstance, f),
            publicByDefault: jspb.Message.getField(msg, 9),
            isSkylark: jspb.Message.getField(msg, 10),
            skylarkAttributeAspectsList: jspb.Message.toObjectList(msg.getSkylarkAttributeAspectsList(), proto.blaze_query.AttributeAspect.toObject, includeInstance),
            skylarkEnvironmentHashCode: jspb.Message.getField(msg, 12)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.Rule}
 */
proto.blaze_query.Rule.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.Rule;
    return proto.blaze_query.Rule.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.Rule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.Rule}
 */
proto.blaze_query.Rule.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setRuleClass(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setLocation(value);
                break;
            case 4:
                var value = new proto.blaze_query.Attribute;
                reader.readMessage(value, proto.blaze_query.Attribute.deserializeBinaryFromReader);
                msg.addAttribute(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.addRuleInput(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.addRuleOutput(value);
                break;
            case 7:
                var value = /** @type {string} */ (reader.readString());
                msg.addDefaultSetting(value);
                break;
            case 8:
                var value = new proto.blaze_query.Location;
                reader.readMessage(value, proto.blaze_query.Location.deserializeBinaryFromReader);
                msg.setDeprecatedParseableLocation(value);
                break;
            case 9:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setPublicByDefault(value);
                break;
            case 10:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setIsSkylark(value);
                break;
            case 11:
                var value = new proto.blaze_query.AttributeAspect;
                reader.readMessage(value, proto.blaze_query.AttributeAspect.deserializeBinaryFromReader);
                msg.addSkylarkAttributeAspects(value);
                break;
            case 12:
                var value = /** @type {string} */ (reader.readString());
                msg.setSkylarkEnvironmentHashCode(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.Rule.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.Rule.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.Rule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.Rule.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = message.getAttributeList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(4, f, proto.blaze_query.Attribute.serializeBinaryToWriter);
    }
    f = message.getRuleInputList();
    if (f.length > 0) {
        writer.writeRepeatedString(5, f);
    }
    f = message.getRuleOutputList();
    if (f.length > 0) {
        writer.writeRepeatedString(6, f);
    }
    f = message.getDefaultSettingList();
    if (f.length > 0) {
        writer.writeRepeatedString(7, f);
    }
    f = message.getDeprecatedParseableLocation();
    if (f != null) {
        writer.writeMessage(8, f, proto.blaze_query.Location.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
    if (f != null) {
        writer.writeBool(9, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
    if (f != null) {
        writer.writeBool(10, f);
    }
    f = message.getSkylarkAttributeAspectsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(11, f, proto.blaze_query.AttributeAspect.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 12));
    if (f != null) {
        writer.writeString(12, f);
    }
};
/**
 * required string name = 1;
 * @return {string}
 */
proto.blaze_query.Rule.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/** @param {string} value */
proto.blaze_query.Rule.prototype.setName = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.Rule.prototype.clearName = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Rule.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * required string rule_class = 2;
 * @return {string}
 */
proto.blaze_query.Rule.prototype.getRuleClass = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/** @param {string} value */
proto.blaze_query.Rule.prototype.setRuleClass = function (value) {
    jspb.Message.setField(this, 2, value);
};
proto.blaze_query.Rule.prototype.clearRuleClass = function () {
    jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Rule.prototype.hasRuleClass = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string location = 3;
 * @return {string}
 */
proto.blaze_query.Rule.prototype.getLocation = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/** @param {string} value */
proto.blaze_query.Rule.prototype.setLocation = function (value) {
    jspb.Message.setField(this, 3, value);
};
proto.blaze_query.Rule.prototype.clearLocation = function () {
    jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Rule.prototype.hasLocation = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * repeated Attribute attribute = 4;
 * @return {!Array.<!proto.blaze_query.Attribute>}
 */
proto.blaze_query.Rule.prototype.getAttributeList = function () {
    return /** @type{!Array.<!proto.blaze_query.Attribute>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.Attribute, 4));
};
/** @param {!Array.<!proto.blaze_query.Attribute>} value */
proto.blaze_query.Rule.prototype.setAttributeList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 4, value);
};
/**
 * @param {!proto.blaze_query.Attribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.Attribute}
 */
proto.blaze_query.Rule.prototype.addAttribute = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.blaze_query.Attribute, opt_index);
};
proto.blaze_query.Rule.prototype.clearAttributeList = function () {
    this.setAttributeList([]);
};
/**
 * repeated string rule_input = 5;
 * @return {!Array.<string>}
 */
proto.blaze_query.Rule.prototype.getRuleInputList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 5));
};
/** @param {!Array.<string>} value */
proto.blaze_query.Rule.prototype.setRuleInputList = function (value) {
    jspb.Message.setField(this, 5, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.blaze_query.Rule.prototype.addRuleInput = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};
proto.blaze_query.Rule.prototype.clearRuleInputList = function () {
    this.setRuleInputList([]);
};
/**
 * repeated string rule_output = 6;
 * @return {!Array.<string>}
 */
proto.blaze_query.Rule.prototype.getRuleOutputList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 6));
};
/** @param {!Array.<string>} value */
proto.blaze_query.Rule.prototype.setRuleOutputList = function (value) {
    jspb.Message.setField(this, 6, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.blaze_query.Rule.prototype.addRuleOutput = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};
proto.blaze_query.Rule.prototype.clearRuleOutputList = function () {
    this.setRuleOutputList([]);
};
/**
 * repeated string default_setting = 7;
 * @return {!Array.<string>}
 */
proto.blaze_query.Rule.prototype.getDefaultSettingList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 7));
};
/** @param {!Array.<string>} value */
proto.blaze_query.Rule.prototype.setDefaultSettingList = function (value) {
    jspb.Message.setField(this, 7, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.blaze_query.Rule.prototype.addDefaultSetting = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};
proto.blaze_query.Rule.prototype.clearDefaultSettingList = function () {
    this.setDefaultSettingList([]);
};
/**
 * optional Location DEPRECATED_parseable_location = 8;
 * @return {?proto.blaze_query.Location}
 */
proto.blaze_query.Rule.prototype.getDeprecatedParseableLocation = function () {
    return /** @type{?proto.blaze_query.Location} */ (jspb.Message.getWrapperField(this, proto.blaze_query.Location, 8));
};
/** @param {?proto.blaze_query.Location|undefined} value */
proto.blaze_query.Rule.prototype.setDeprecatedParseableLocation = function (value) {
    jspb.Message.setWrapperField(this, 8, value);
};
proto.blaze_query.Rule.prototype.clearDeprecatedParseableLocation = function () {
    this.setDeprecatedParseableLocation(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Rule.prototype.hasDeprecatedParseableLocation = function () {
    return jspb.Message.getField(this, 8) != null;
};
/**
 * optional bool public_by_default = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.blaze_query.Rule.prototype.getPublicByDefault = function () {
    return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};
/** @param {boolean} value */
proto.blaze_query.Rule.prototype.setPublicByDefault = function (value) {
    jspb.Message.setField(this, 9, value);
};
proto.blaze_query.Rule.prototype.clearPublicByDefault = function () {
    jspb.Message.setField(this, 9, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Rule.prototype.hasPublicByDefault = function () {
    return jspb.Message.getField(this, 9) != null;
};
/**
 * optional bool is_skylark = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.blaze_query.Rule.prototype.getIsSkylark = function () {
    return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));
};
/** @param {boolean} value */
proto.blaze_query.Rule.prototype.setIsSkylark = function (value) {
    jspb.Message.setField(this, 10, value);
};
proto.blaze_query.Rule.prototype.clearIsSkylark = function () {
    jspb.Message.setField(this, 10, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Rule.prototype.hasIsSkylark = function () {
    return jspb.Message.getField(this, 10) != null;
};
/**
 * repeated AttributeAspect skylark_attribute_aspects = 11;
 * @return {!Array.<!proto.blaze_query.AttributeAspect>}
 */
proto.blaze_query.Rule.prototype.getSkylarkAttributeAspectsList = function () {
    return /** @type{!Array.<!proto.blaze_query.AttributeAspect>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.AttributeAspect, 11));
};
/** @param {!Array.<!proto.blaze_query.AttributeAspect>} value */
proto.blaze_query.Rule.prototype.setSkylarkAttributeAspectsList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 11, value);
};
/**
 * @param {!proto.blaze_query.AttributeAspect=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.AttributeAspect}
 */
proto.blaze_query.Rule.prototype.addSkylarkAttributeAspects = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.blaze_query.AttributeAspect, opt_index);
};
proto.blaze_query.Rule.prototype.clearSkylarkAttributeAspectsList = function () {
    this.setSkylarkAttributeAspectsList([]);
};
/**
 * optional string skylark_environment_hash_code = 12;
 * @return {string}
 */
proto.blaze_query.Rule.prototype.getSkylarkEnvironmentHashCode = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};
/** @param {string} value */
proto.blaze_query.Rule.prototype.setSkylarkEnvironmentHashCode = function (value) {
    jspb.Message.setField(this, 12, value);
};
proto.blaze_query.Rule.prototype.clearSkylarkEnvironmentHashCode = function () {
    jspb.Message.setField(this, 12, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Rule.prototype.hasSkylarkEnvironmentHashCode = function () {
    return jspb.Message.getField(this, 12) != null;
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.AttributeAspect = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blaze_query.AttributeAspect, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.AttributeAspect.displayName = 'proto.blaze_query.AttributeAspect';
}
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.AttributeAspect.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.AttributeAspect.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.AttributeAspect} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.AttributeAspect.toObject = function (includeInstance, msg) {
        var f, obj = {
            attributeName: jspb.Message.getField(msg, 1),
            aspect: (f = msg.getAspect()) && proto.blaze_query.SkylarkAspect.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.AttributeAspect}
 */
proto.blaze_query.AttributeAspect.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.AttributeAspect;
    return proto.blaze_query.AttributeAspect.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.AttributeAspect} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.AttributeAspect}
 */
proto.blaze_query.AttributeAspect.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setAttributeName(value);
                break;
            case 2:
                var value = new proto.blaze_query.SkylarkAspect;
                reader.readMessage(value, proto.blaze_query.SkylarkAspect.deserializeBinaryFromReader);
                msg.setAspect(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.AttributeAspect.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.AttributeAspect.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.AttributeAspect} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.AttributeAspect.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = message.getAspect();
    if (f != null) {
        writer.writeMessage(2, f, proto.blaze_query.SkylarkAspect.serializeBinaryToWriter);
    }
};
/**
 * required string attribute_name = 1;
 * @return {string}
 */
proto.blaze_query.AttributeAspect.prototype.getAttributeName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/** @param {string} value */
proto.blaze_query.AttributeAspect.prototype.setAttributeName = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.AttributeAspect.prototype.clearAttributeName = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.AttributeAspect.prototype.hasAttributeName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * required SkylarkAspect aspect = 2;
 * @return {!proto.blaze_query.SkylarkAspect}
 */
proto.blaze_query.AttributeAspect.prototype.getAspect = function () {
    return /** @type{!proto.blaze_query.SkylarkAspect} */ (jspb.Message.getWrapperField(this, proto.blaze_query.SkylarkAspect, 2, 1));
};
/** @param {!proto.blaze_query.SkylarkAspect} value */
proto.blaze_query.AttributeAspect.prototype.setAspect = function (value) {
    jspb.Message.setWrapperField(this, 2, value);
};
proto.blaze_query.AttributeAspect.prototype.clearAspect = function () {
    jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.AttributeAspect.prototype.hasAspect = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.SkylarkAspect = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.blaze_query.SkylarkAspect.repeatedFields_, null);
};
goog.inherits(proto.blaze_query.SkylarkAspect, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.SkylarkAspect.displayName = 'proto.blaze_query.SkylarkAspect';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blaze_query.SkylarkAspect.repeatedFields_ = [3];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.SkylarkAspect.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.SkylarkAspect.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.SkylarkAspect} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.SkylarkAspect.toObject = function (includeInstance, msg) {
        var f, obj = {
            extensionFileLabel: jspb.Message.getField(msg, 1),
            exportedName: jspb.Message.getField(msg, 2),
            attributeList: jspb.Message.toObjectList(msg.getAttributeList(), proto.blaze_query.Attribute.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.SkylarkAspect}
 */
proto.blaze_query.SkylarkAspect.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.SkylarkAspect;
    return proto.blaze_query.SkylarkAspect.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.SkylarkAspect} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.SkylarkAspect}
 */
proto.blaze_query.SkylarkAspect.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setExtensionFileLabel(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setExportedName(value);
                break;
            case 3:
                var value = new proto.blaze_query.Attribute;
                reader.readMessage(value, proto.blaze_query.Attribute.deserializeBinaryFromReader);
                msg.addAttribute(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.SkylarkAspect.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.SkylarkAspect.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.SkylarkAspect} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.SkylarkAspect.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = message.getAttributeList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(3, f, proto.blaze_query.Attribute.serializeBinaryToWriter);
    }
};
/**
 * required string extension_file_label = 1;
 * @return {string}
 */
proto.blaze_query.SkylarkAspect.prototype.getExtensionFileLabel = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/** @param {string} value */
proto.blaze_query.SkylarkAspect.prototype.setExtensionFileLabel = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.SkylarkAspect.prototype.clearExtensionFileLabel = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.SkylarkAspect.prototype.hasExtensionFileLabel = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * required string exported_name = 2;
 * @return {string}
 */
proto.blaze_query.SkylarkAspect.prototype.getExportedName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/** @param {string} value */
proto.blaze_query.SkylarkAspect.prototype.setExportedName = function (value) {
    jspb.Message.setField(this, 2, value);
};
proto.blaze_query.SkylarkAspect.prototype.clearExportedName = function () {
    jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.SkylarkAspect.prototype.hasExportedName = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * repeated Attribute attribute = 3;
 * @return {!Array.<!proto.blaze_query.Attribute>}
 */
proto.blaze_query.SkylarkAspect.prototype.getAttributeList = function () {
    return /** @type{!Array.<!proto.blaze_query.Attribute>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.Attribute, 3));
};
/** @param {!Array.<!proto.blaze_query.Attribute>} value */
proto.blaze_query.SkylarkAspect.prototype.setAttributeList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 3, value);
};
/**
 * @param {!proto.blaze_query.Attribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.Attribute}
 */
proto.blaze_query.SkylarkAspect.prototype.addAttribute = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.blaze_query.Attribute, opt_index);
};
proto.blaze_query.SkylarkAspect.prototype.clearAttributeList = function () {
    this.setAttributeList([]);
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.RuleSummary = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.blaze_query.RuleSummary.repeatedFields_, null);
};
goog.inherits(proto.blaze_query.RuleSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.RuleSummary.displayName = 'proto.blaze_query.RuleSummary';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blaze_query.RuleSummary.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.RuleSummary.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.RuleSummary.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.RuleSummary} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.RuleSummary.toObject = function (includeInstance, msg) {
        var f, obj = {
            rule: (f = msg.getRule()) && proto.blaze_query.Rule.toObject(includeInstance, f),
            dependencyList: jspb.Message.toObjectList(msg.getDependencyList(), proto.blaze_query.Rule.toObject, includeInstance),
            location: jspb.Message.getField(msg, 3)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.RuleSummary}
 */
proto.blaze_query.RuleSummary.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.RuleSummary;
    return proto.blaze_query.RuleSummary.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.RuleSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.RuleSummary}
 */
proto.blaze_query.RuleSummary.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.blaze_query.Rule;
                reader.readMessage(value, proto.blaze_query.Rule.deserializeBinaryFromReader);
                msg.setRule(value);
                break;
            case 2:
                var value = new proto.blaze_query.Rule;
                reader.readMessage(value, proto.blaze_query.Rule.deserializeBinaryFromReader);
                msg.addDependency(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setLocation(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.RuleSummary.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.RuleSummary.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.RuleSummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.RuleSummary.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getRule();
    if (f != null) {
        writer.writeMessage(1, f, proto.blaze_query.Rule.serializeBinaryToWriter);
    }
    f = message.getDependencyList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.blaze_query.Rule.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
};
/**
 * required Rule rule = 1;
 * @return {!proto.blaze_query.Rule}
 */
proto.blaze_query.RuleSummary.prototype.getRule = function () {
    return /** @type{!proto.blaze_query.Rule} */ (jspb.Message.getWrapperField(this, proto.blaze_query.Rule, 1, 1));
};
/** @param {!proto.blaze_query.Rule} value */
proto.blaze_query.RuleSummary.prototype.setRule = function (value) {
    jspb.Message.setWrapperField(this, 1, value);
};
proto.blaze_query.RuleSummary.prototype.clearRule = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.RuleSummary.prototype.hasRule = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated Rule dependency = 2;
 * @return {!Array.<!proto.blaze_query.Rule>}
 */
proto.blaze_query.RuleSummary.prototype.getDependencyList = function () {
    return /** @type{!Array.<!proto.blaze_query.Rule>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.Rule, 2));
};
/** @param {!Array.<!proto.blaze_query.Rule>} value */
proto.blaze_query.RuleSummary.prototype.setDependencyList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.blaze_query.Rule=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.Rule}
 */
proto.blaze_query.RuleSummary.prototype.addDependency = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.blaze_query.Rule, opt_index);
};
proto.blaze_query.RuleSummary.prototype.clearDependencyList = function () {
    this.setDependencyList([]);
};
/**
 * optional string location = 3;
 * @return {string}
 */
proto.blaze_query.RuleSummary.prototype.getLocation = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/** @param {string} value */
proto.blaze_query.RuleSummary.prototype.setLocation = function (value) {
    jspb.Message.setField(this, 3, value);
};
proto.blaze_query.RuleSummary.prototype.clearLocation = function () {
    jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.RuleSummary.prototype.hasLocation = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.PackageGroup = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.blaze_query.PackageGroup.repeatedFields_, null);
};
goog.inherits(proto.blaze_query.PackageGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.PackageGroup.displayName = 'proto.blaze_query.PackageGroup';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blaze_query.PackageGroup.repeatedFields_ = [2, 3];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.PackageGroup.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.PackageGroup.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.PackageGroup} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.PackageGroup.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: jspb.Message.getField(msg, 1),
            containedPackageList: jspb.Message.getRepeatedField(msg, 2),
            includedPackageGroupList: jspb.Message.getRepeatedField(msg, 3),
            deprecatedParseableLocation: (f = msg.getDeprecatedParseableLocation()) && proto.blaze_query.Location.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.PackageGroup}
 */
proto.blaze_query.PackageGroup.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.PackageGroup;
    return proto.blaze_query.PackageGroup.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.PackageGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.PackageGroup}
 */
proto.blaze_query.PackageGroup.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.addContainedPackage(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.addIncludedPackageGroup(value);
                break;
            case 4:
                var value = new proto.blaze_query.Location;
                reader.readMessage(value, proto.blaze_query.Location.deserializeBinaryFromReader);
                msg.setDeprecatedParseableLocation(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.PackageGroup.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.PackageGroup.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.PackageGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.PackageGroup.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = message.getContainedPackageList();
    if (f.length > 0) {
        writer.writeRepeatedString(2, f);
    }
    f = message.getIncludedPackageGroupList();
    if (f.length > 0) {
        writer.writeRepeatedString(3, f);
    }
    f = message.getDeprecatedParseableLocation();
    if (f != null) {
        writer.writeMessage(4, f, proto.blaze_query.Location.serializeBinaryToWriter);
    }
};
/**
 * required string name = 1;
 * @return {string}
 */
proto.blaze_query.PackageGroup.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/** @param {string} value */
proto.blaze_query.PackageGroup.prototype.setName = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.PackageGroup.prototype.clearName = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.PackageGroup.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated string contained_package = 2;
 * @return {!Array.<string>}
 */
proto.blaze_query.PackageGroup.prototype.getContainedPackageList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 2));
};
/** @param {!Array.<string>} value */
proto.blaze_query.PackageGroup.prototype.setContainedPackageList = function (value) {
    jspb.Message.setField(this, 2, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.blaze_query.PackageGroup.prototype.addContainedPackage = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};
proto.blaze_query.PackageGroup.prototype.clearContainedPackageList = function () {
    this.setContainedPackageList([]);
};
/**
 * repeated string included_package_group = 3;
 * @return {!Array.<string>}
 */
proto.blaze_query.PackageGroup.prototype.getIncludedPackageGroupList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 3));
};
/** @param {!Array.<string>} value */
proto.blaze_query.PackageGroup.prototype.setIncludedPackageGroupList = function (value) {
    jspb.Message.setField(this, 3, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.blaze_query.PackageGroup.prototype.addIncludedPackageGroup = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};
proto.blaze_query.PackageGroup.prototype.clearIncludedPackageGroupList = function () {
    this.setIncludedPackageGroupList([]);
};
/**
 * optional Location DEPRECATED_parseable_location = 4;
 * @return {?proto.blaze_query.Location}
 */
proto.blaze_query.PackageGroup.prototype.getDeprecatedParseableLocation = function () {
    return /** @type{?proto.blaze_query.Location} */ (jspb.Message.getWrapperField(this, proto.blaze_query.Location, 4));
};
/** @param {?proto.blaze_query.Location|undefined} value */
proto.blaze_query.PackageGroup.prototype.setDeprecatedParseableLocation = function (value) {
    jspb.Message.setWrapperField(this, 4, value);
};
proto.blaze_query.PackageGroup.prototype.clearDeprecatedParseableLocation = function () {
    this.setDeprecatedParseableLocation(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.PackageGroup.prototype.hasDeprecatedParseableLocation = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.EnvironmentGroup = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.blaze_query.EnvironmentGroup.repeatedFields_, null);
};
goog.inherits(proto.blaze_query.EnvironmentGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.EnvironmentGroup.displayName = 'proto.blaze_query.EnvironmentGroup';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blaze_query.EnvironmentGroup.repeatedFields_ = [2, 3];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.EnvironmentGroup.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.EnvironmentGroup.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.EnvironmentGroup} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.EnvironmentGroup.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: jspb.Message.getField(msg, 1),
            environmentList: jspb.Message.getRepeatedField(msg, 2),
            defaultList: jspb.Message.getRepeatedField(msg, 3)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.EnvironmentGroup}
 */
proto.blaze_query.EnvironmentGroup.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.EnvironmentGroup;
    return proto.blaze_query.EnvironmentGroup.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.EnvironmentGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.EnvironmentGroup}
 */
proto.blaze_query.EnvironmentGroup.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.addEnvironment(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.addDefault(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.EnvironmentGroup.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.EnvironmentGroup.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.EnvironmentGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.EnvironmentGroup.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = message.getEnvironmentList();
    if (f.length > 0) {
        writer.writeRepeatedString(2, f);
    }
    f = message.getDefaultList();
    if (f.length > 0) {
        writer.writeRepeatedString(3, f);
    }
};
/**
 * required string name = 1;
 * @return {string}
 */
proto.blaze_query.EnvironmentGroup.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/** @param {string} value */
proto.blaze_query.EnvironmentGroup.prototype.setName = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.EnvironmentGroup.prototype.clearName = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.EnvironmentGroup.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated string environment = 2;
 * @return {!Array.<string>}
 */
proto.blaze_query.EnvironmentGroup.prototype.getEnvironmentList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 2));
};
/** @param {!Array.<string>} value */
proto.blaze_query.EnvironmentGroup.prototype.setEnvironmentList = function (value) {
    jspb.Message.setField(this, 2, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.blaze_query.EnvironmentGroup.prototype.addEnvironment = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};
proto.blaze_query.EnvironmentGroup.prototype.clearEnvironmentList = function () {
    this.setEnvironmentList([]);
};
/**
 * repeated string default = 3;
 * @return {!Array.<string>}
 */
proto.blaze_query.EnvironmentGroup.prototype.getDefaultList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 3));
};
/** @param {!Array.<string>} value */
proto.blaze_query.EnvironmentGroup.prototype.setDefaultList = function (value) {
    jspb.Message.setField(this, 3, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.blaze_query.EnvironmentGroup.prototype.addDefault = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};
proto.blaze_query.EnvironmentGroup.prototype.clearDefaultList = function () {
    this.setDefaultList([]);
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.SourceFile = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.blaze_query.SourceFile.repeatedFields_, null);
};
goog.inherits(proto.blaze_query.SourceFile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.SourceFile.displayName = 'proto.blaze_query.SourceFile';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blaze_query.SourceFile.repeatedFields_ = [3, 4, 5, 6];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.SourceFile.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.SourceFile.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.SourceFile} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.SourceFile.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: jspb.Message.getField(msg, 1),
            location: jspb.Message.getField(msg, 2),
            deprecatedParseableLocation: (f = msg.getDeprecatedParseableLocation()) && proto.blaze_query.Location.toObject(includeInstance, f),
            subincludeList: jspb.Message.getRepeatedField(msg, 3),
            packageGroupList: jspb.Message.getRepeatedField(msg, 4),
            visibilityLabelList: jspb.Message.getRepeatedField(msg, 5),
            featureList: jspb.Message.getRepeatedField(msg, 6),
            license: (f = msg.getLicense()) && proto.blaze_query.License.toObject(includeInstance, f),
            packageContainsErrors: jspb.Message.getField(msg, 9)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.SourceFile}
 */
proto.blaze_query.SourceFile.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.SourceFile;
    return proto.blaze_query.SourceFile.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.SourceFile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.SourceFile}
 */
proto.blaze_query.SourceFile.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setLocation(value);
                break;
            case 7:
                var value = new proto.blaze_query.Location;
                reader.readMessage(value, proto.blaze_query.Location.deserializeBinaryFromReader);
                msg.setDeprecatedParseableLocation(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.addSubinclude(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.addPackageGroup(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.addVisibilityLabel(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.addFeature(value);
                break;
            case 8:
                var value = new proto.blaze_query.License;
                reader.readMessage(value, proto.blaze_query.License.deserializeBinaryFromReader);
                msg.setLicense(value);
                break;
            case 9:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setPackageContainsErrors(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.SourceFile.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.SourceFile.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.SourceFile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.SourceFile.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = message.getDeprecatedParseableLocation();
    if (f != null) {
        writer.writeMessage(7, f, proto.blaze_query.Location.serializeBinaryToWriter);
    }
    f = message.getSubincludeList();
    if (f.length > 0) {
        writer.writeRepeatedString(3, f);
    }
    f = message.getPackageGroupList();
    if (f.length > 0) {
        writer.writeRepeatedString(4, f);
    }
    f = message.getVisibilityLabelList();
    if (f.length > 0) {
        writer.writeRepeatedString(5, f);
    }
    f = message.getFeatureList();
    if (f.length > 0) {
        writer.writeRepeatedString(6, f);
    }
    f = message.getLicense();
    if (f != null) {
        writer.writeMessage(8, f, proto.blaze_query.License.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
    if (f != null) {
        writer.writeBool(9, f);
    }
};
/**
 * required string name = 1;
 * @return {string}
 */
proto.blaze_query.SourceFile.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/** @param {string} value */
proto.blaze_query.SourceFile.prototype.setName = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.SourceFile.prototype.clearName = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.SourceFile.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional string location = 2;
 * @return {string}
 */
proto.blaze_query.SourceFile.prototype.getLocation = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/** @param {string} value */
proto.blaze_query.SourceFile.prototype.setLocation = function (value) {
    jspb.Message.setField(this, 2, value);
};
proto.blaze_query.SourceFile.prototype.clearLocation = function () {
    jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.SourceFile.prototype.hasLocation = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional Location DEPRECATED_parseable_location = 7;
 * @return {?proto.blaze_query.Location}
 */
proto.blaze_query.SourceFile.prototype.getDeprecatedParseableLocation = function () {
    return /** @type{?proto.blaze_query.Location} */ (jspb.Message.getWrapperField(this, proto.blaze_query.Location, 7));
};
/** @param {?proto.blaze_query.Location|undefined} value */
proto.blaze_query.SourceFile.prototype.setDeprecatedParseableLocation = function (value) {
    jspb.Message.setWrapperField(this, 7, value);
};
proto.blaze_query.SourceFile.prototype.clearDeprecatedParseableLocation = function () {
    this.setDeprecatedParseableLocation(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.SourceFile.prototype.hasDeprecatedParseableLocation = function () {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * repeated string subinclude = 3;
 * @return {!Array.<string>}
 */
proto.blaze_query.SourceFile.prototype.getSubincludeList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 3));
};
/** @param {!Array.<string>} value */
proto.blaze_query.SourceFile.prototype.setSubincludeList = function (value) {
    jspb.Message.setField(this, 3, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.blaze_query.SourceFile.prototype.addSubinclude = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};
proto.blaze_query.SourceFile.prototype.clearSubincludeList = function () {
    this.setSubincludeList([]);
};
/**
 * repeated string package_group = 4;
 * @return {!Array.<string>}
 */
proto.blaze_query.SourceFile.prototype.getPackageGroupList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 4));
};
/** @param {!Array.<string>} value */
proto.blaze_query.SourceFile.prototype.setPackageGroupList = function (value) {
    jspb.Message.setField(this, 4, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.blaze_query.SourceFile.prototype.addPackageGroup = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};
proto.blaze_query.SourceFile.prototype.clearPackageGroupList = function () {
    this.setPackageGroupList([]);
};
/**
 * repeated string visibility_label = 5;
 * @return {!Array.<string>}
 */
proto.blaze_query.SourceFile.prototype.getVisibilityLabelList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 5));
};
/** @param {!Array.<string>} value */
proto.blaze_query.SourceFile.prototype.setVisibilityLabelList = function (value) {
    jspb.Message.setField(this, 5, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.blaze_query.SourceFile.prototype.addVisibilityLabel = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};
proto.blaze_query.SourceFile.prototype.clearVisibilityLabelList = function () {
    this.setVisibilityLabelList([]);
};
/**
 * repeated string feature = 6;
 * @return {!Array.<string>}
 */
proto.blaze_query.SourceFile.prototype.getFeatureList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 6));
};
/** @param {!Array.<string>} value */
proto.blaze_query.SourceFile.prototype.setFeatureList = function (value) {
    jspb.Message.setField(this, 6, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.blaze_query.SourceFile.prototype.addFeature = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};
proto.blaze_query.SourceFile.prototype.clearFeatureList = function () {
    this.setFeatureList([]);
};
/**
 * optional License license = 8;
 * @return {?proto.blaze_query.License}
 */
proto.blaze_query.SourceFile.prototype.getLicense = function () {
    return /** @type{?proto.blaze_query.License} */ (jspb.Message.getWrapperField(this, proto.blaze_query.License, 8));
};
/** @param {?proto.blaze_query.License|undefined} value */
proto.blaze_query.SourceFile.prototype.setLicense = function (value) {
    jspb.Message.setWrapperField(this, 8, value);
};
proto.blaze_query.SourceFile.prototype.clearLicense = function () {
    this.setLicense(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.SourceFile.prototype.hasLicense = function () {
    return jspb.Message.getField(this, 8) != null;
};
/**
 * optional bool package_contains_errors = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.blaze_query.SourceFile.prototype.getPackageContainsErrors = function () {
    return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};
/** @param {boolean} value */
proto.blaze_query.SourceFile.prototype.setPackageContainsErrors = function (value) {
    jspb.Message.setField(this, 9, value);
};
proto.blaze_query.SourceFile.prototype.clearPackageContainsErrors = function () {
    jspb.Message.setField(this, 9, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.SourceFile.prototype.hasPackageContainsErrors = function () {
    return jspb.Message.getField(this, 9) != null;
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.GeneratedFile = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blaze_query.GeneratedFile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.GeneratedFile.displayName = 'proto.blaze_query.GeneratedFile';
}
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.GeneratedFile.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.GeneratedFile.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.GeneratedFile} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.GeneratedFile.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: jspb.Message.getField(msg, 1),
            generatingRule: jspb.Message.getField(msg, 2),
            location: jspb.Message.getField(msg, 3)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.GeneratedFile}
 */
proto.blaze_query.GeneratedFile.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.GeneratedFile;
    return proto.blaze_query.GeneratedFile.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.GeneratedFile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.GeneratedFile}
 */
proto.blaze_query.GeneratedFile.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setGeneratingRule(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setLocation(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.GeneratedFile.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.GeneratedFile.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.GeneratedFile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.GeneratedFile.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
};
/**
 * required string name = 1;
 * @return {string}
 */
proto.blaze_query.GeneratedFile.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/** @param {string} value */
proto.blaze_query.GeneratedFile.prototype.setName = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.GeneratedFile.prototype.clearName = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.GeneratedFile.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * required string generating_rule = 2;
 * @return {string}
 */
proto.blaze_query.GeneratedFile.prototype.getGeneratingRule = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/** @param {string} value */
proto.blaze_query.GeneratedFile.prototype.setGeneratingRule = function (value) {
    jspb.Message.setField(this, 2, value);
};
proto.blaze_query.GeneratedFile.prototype.clearGeneratingRule = function () {
    jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.GeneratedFile.prototype.hasGeneratingRule = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string location = 3;
 * @return {string}
 */
proto.blaze_query.GeneratedFile.prototype.getLocation = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/** @param {string} value */
proto.blaze_query.GeneratedFile.prototype.setLocation = function (value) {
    jspb.Message.setField(this, 3, value);
};
proto.blaze_query.GeneratedFile.prototype.clearLocation = function () {
    jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.GeneratedFile.prototype.hasLocation = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.Target = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blaze_query.Target, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.Target.displayName = 'proto.blaze_query.Target';
}
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.Target.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.Target.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.Target} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.Target.toObject = function (includeInstance, msg) {
        var f, obj = {
            type: jspb.Message.getField(msg, 1),
            rule: (f = msg.getRule()) && proto.blaze_query.Rule.toObject(includeInstance, f),
            sourceFile: (f = msg.getSourceFile()) && proto.blaze_query.SourceFile.toObject(includeInstance, f),
            generatedFile: (f = msg.getGeneratedFile()) && proto.blaze_query.GeneratedFile.toObject(includeInstance, f),
            packageGroup: (f = msg.getPackageGroup()) && proto.blaze_query.PackageGroup.toObject(includeInstance, f),
            environmentGroup: (f = msg.getEnvironmentGroup()) && proto.blaze_query.EnvironmentGroup.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.Target}
 */
proto.blaze_query.Target.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.Target;
    return proto.blaze_query.Target.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.Target} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.Target}
 */
proto.blaze_query.Target.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.blaze_query.Target.Discriminator} */ (reader.readEnum());
                msg.setType(value);
                break;
            case 2:
                var value = new proto.blaze_query.Rule;
                reader.readMessage(value, proto.blaze_query.Rule.deserializeBinaryFromReader);
                msg.setRule(value);
                break;
            case 3:
                var value = new proto.blaze_query.SourceFile;
                reader.readMessage(value, proto.blaze_query.SourceFile.deserializeBinaryFromReader);
                msg.setSourceFile(value);
                break;
            case 4:
                var value = new proto.blaze_query.GeneratedFile;
                reader.readMessage(value, proto.blaze_query.GeneratedFile.deserializeBinaryFromReader);
                msg.setGeneratedFile(value);
                break;
            case 5:
                var value = new proto.blaze_query.PackageGroup;
                reader.readMessage(value, proto.blaze_query.PackageGroup.deserializeBinaryFromReader);
                msg.setPackageGroup(value);
                break;
            case 6:
                var value = new proto.blaze_query.EnvironmentGroup;
                reader.readMessage(value, proto.blaze_query.EnvironmentGroup.deserializeBinaryFromReader);
                msg.setEnvironmentGroup(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.Target.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.Target.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.Target} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.Target.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {!proto.blaze_query.Target.Discriminator} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeEnum(1, f);
    }
    f = message.getRule();
    if (f != null) {
        writer.writeMessage(2, f, proto.blaze_query.Rule.serializeBinaryToWriter);
    }
    f = message.getSourceFile();
    if (f != null) {
        writer.writeMessage(3, f, proto.blaze_query.SourceFile.serializeBinaryToWriter);
    }
    f = message.getGeneratedFile();
    if (f != null) {
        writer.writeMessage(4, f, proto.blaze_query.GeneratedFile.serializeBinaryToWriter);
    }
    f = message.getPackageGroup();
    if (f != null) {
        writer.writeMessage(5, f, proto.blaze_query.PackageGroup.serializeBinaryToWriter);
    }
    f = message.getEnvironmentGroup();
    if (f != null) {
        writer.writeMessage(6, f, proto.blaze_query.EnvironmentGroup.serializeBinaryToWriter);
    }
};
/**
 * @enum {number}
 */
proto.blaze_query.Target.Discriminator = {
    RULE: 1,
    SOURCE_FILE: 2,
    GENERATED_FILE: 3,
    PACKAGE_GROUP: 4,
    ENVIRONMENT_GROUP: 5
};
/**
 * required Discriminator type = 1;
 * @return {!proto.blaze_query.Target.Discriminator}
 */
proto.blaze_query.Target.prototype.getType = function () {
    return /** @type {!proto.blaze_query.Target.Discriminator} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};
/** @param {!proto.blaze_query.Target.Discriminator} value */
proto.blaze_query.Target.prototype.setType = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.Target.prototype.clearType = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Target.prototype.hasType = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional Rule rule = 2;
 * @return {?proto.blaze_query.Rule}
 */
proto.blaze_query.Target.prototype.getRule = function () {
    return /** @type{?proto.blaze_query.Rule} */ (jspb.Message.getWrapperField(this, proto.blaze_query.Rule, 2));
};
/** @param {?proto.blaze_query.Rule|undefined} value */
proto.blaze_query.Target.prototype.setRule = function (value) {
    jspb.Message.setWrapperField(this, 2, value);
};
proto.blaze_query.Target.prototype.clearRule = function () {
    this.setRule(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Target.prototype.hasRule = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional SourceFile source_file = 3;
 * @return {?proto.blaze_query.SourceFile}
 */
proto.blaze_query.Target.prototype.getSourceFile = function () {
    return /** @type{?proto.blaze_query.SourceFile} */ (jspb.Message.getWrapperField(this, proto.blaze_query.SourceFile, 3));
};
/** @param {?proto.blaze_query.SourceFile|undefined} value */
proto.blaze_query.Target.prototype.setSourceFile = function (value) {
    jspb.Message.setWrapperField(this, 3, value);
};
proto.blaze_query.Target.prototype.clearSourceFile = function () {
    this.setSourceFile(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Target.prototype.hasSourceFile = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional GeneratedFile generated_file = 4;
 * @return {?proto.blaze_query.GeneratedFile}
 */
proto.blaze_query.Target.prototype.getGeneratedFile = function () {
    return /** @type{?proto.blaze_query.GeneratedFile} */ (jspb.Message.getWrapperField(this, proto.blaze_query.GeneratedFile, 4));
};
/** @param {?proto.blaze_query.GeneratedFile|undefined} value */
proto.blaze_query.Target.prototype.setGeneratedFile = function (value) {
    jspb.Message.setWrapperField(this, 4, value);
};
proto.blaze_query.Target.prototype.clearGeneratedFile = function () {
    this.setGeneratedFile(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Target.prototype.hasGeneratedFile = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional PackageGroup package_group = 5;
 * @return {?proto.blaze_query.PackageGroup}
 */
proto.blaze_query.Target.prototype.getPackageGroup = function () {
    return /** @type{?proto.blaze_query.PackageGroup} */ (jspb.Message.getWrapperField(this, proto.blaze_query.PackageGroup, 5));
};
/** @param {?proto.blaze_query.PackageGroup|undefined} value */
proto.blaze_query.Target.prototype.setPackageGroup = function (value) {
    jspb.Message.setWrapperField(this, 5, value);
};
proto.blaze_query.Target.prototype.clearPackageGroup = function () {
    this.setPackageGroup(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Target.prototype.hasPackageGroup = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional EnvironmentGroup environment_group = 6;
 * @return {?proto.blaze_query.EnvironmentGroup}
 */
proto.blaze_query.Target.prototype.getEnvironmentGroup = function () {
    return /** @type{?proto.blaze_query.EnvironmentGroup} */ (jspb.Message.getWrapperField(this, proto.blaze_query.EnvironmentGroup, 6));
};
/** @param {?proto.blaze_query.EnvironmentGroup|undefined} value */
proto.blaze_query.Target.prototype.setEnvironmentGroup = function (value) {
    jspb.Message.setWrapperField(this, 6, value);
};
proto.blaze_query.Target.prototype.clearEnvironmentGroup = function () {
    this.setEnvironmentGroup(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Target.prototype.hasEnvironmentGroup = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.QueryResult = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.blaze_query.QueryResult.repeatedFields_, null);
};
goog.inherits(proto.blaze_query.QueryResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.QueryResult.displayName = 'proto.blaze_query.QueryResult';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blaze_query.QueryResult.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.QueryResult.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.QueryResult.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.QueryResult} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.QueryResult.toObject = function (includeInstance, msg) {
        var f, obj = {
            targetList: jspb.Message.toObjectList(msg.getTargetList(), proto.blaze_query.Target.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.QueryResult}
 */
proto.blaze_query.QueryResult.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.QueryResult;
    return proto.blaze_query.QueryResult.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.QueryResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.QueryResult}
 */
proto.blaze_query.QueryResult.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.blaze_query.Target;
                reader.readMessage(value, proto.blaze_query.Target.deserializeBinaryFromReader);
                msg.addTarget(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.QueryResult.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.QueryResult.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.QueryResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.QueryResult.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getTargetList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.blaze_query.Target.serializeBinaryToWriter);
    }
};
/**
 * repeated Target target = 1;
 * @return {!Array.<!proto.blaze_query.Target>}
 */
proto.blaze_query.QueryResult.prototype.getTargetList = function () {
    return /** @type{!Array.<!proto.blaze_query.Target>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.Target, 1));
};
/** @param {!Array.<!proto.blaze_query.Target>} value */
proto.blaze_query.QueryResult.prototype.setTargetList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.blaze_query.Target=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.Target}
 */
proto.blaze_query.QueryResult.prototype.addTarget = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.blaze_query.Target, opt_index);
};
proto.blaze_query.QueryResult.prototype.clearTargetList = function () {
    this.setTargetList([]);
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.AllowedRuleClassInfo = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.blaze_query.AllowedRuleClassInfo.repeatedFields_, null);
};
goog.inherits(proto.blaze_query.AllowedRuleClassInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.AllowedRuleClassInfo.displayName = 'proto.blaze_query.AllowedRuleClassInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blaze_query.AllowedRuleClassInfo.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.AllowedRuleClassInfo.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.AllowedRuleClassInfo.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.AllowedRuleClassInfo} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.AllowedRuleClassInfo.toObject = function (includeInstance, msg) {
        var f, obj = {
            policy: jspb.Message.getField(msg, 1),
            allowedRuleClassList: jspb.Message.getRepeatedField(msg, 2)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.AllowedRuleClassInfo}
 */
proto.blaze_query.AllowedRuleClassInfo.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.AllowedRuleClassInfo;
    return proto.blaze_query.AllowedRuleClassInfo.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.AllowedRuleClassInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.AllowedRuleClassInfo}
 */
proto.blaze_query.AllowedRuleClassInfo.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.blaze_query.AllowedRuleClassInfo.AllowedRuleClasses} */ (reader.readEnum());
                msg.setPolicy(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.addAllowedRuleClass(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.AllowedRuleClassInfo.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.AllowedRuleClassInfo.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.AllowedRuleClassInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.AllowedRuleClassInfo.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {!proto.blaze_query.AllowedRuleClassInfo.AllowedRuleClasses} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeEnum(1, f);
    }
    f = message.getAllowedRuleClassList();
    if (f.length > 0) {
        writer.writeRepeatedString(2, f);
    }
};
/**
 * @enum {number}
 */
proto.blaze_query.AllowedRuleClassInfo.AllowedRuleClasses = {
    ANY: 1,
    SPECIFIED: 2
};
/**
 * required AllowedRuleClasses policy = 1;
 * @return {!proto.blaze_query.AllowedRuleClassInfo.AllowedRuleClasses}
 */
proto.blaze_query.AllowedRuleClassInfo.prototype.getPolicy = function () {
    return /** @type {!proto.blaze_query.AllowedRuleClassInfo.AllowedRuleClasses} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};
/** @param {!proto.blaze_query.AllowedRuleClassInfo.AllowedRuleClasses} value */
proto.blaze_query.AllowedRuleClassInfo.prototype.setPolicy = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.AllowedRuleClassInfo.prototype.clearPolicy = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.AllowedRuleClassInfo.prototype.hasPolicy = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated string allowed_rule_class = 2;
 * @return {!Array.<string>}
 */
proto.blaze_query.AllowedRuleClassInfo.prototype.getAllowedRuleClassList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 2));
};
/** @param {!Array.<string>} value */
proto.blaze_query.AllowedRuleClassInfo.prototype.setAllowedRuleClassList = function (value) {
    jspb.Message.setField(this, 2, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.blaze_query.AllowedRuleClassInfo.prototype.addAllowedRuleClass = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};
proto.blaze_query.AllowedRuleClassInfo.prototype.clearAllowedRuleClassList = function () {
    this.setAllowedRuleClassList([]);
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.AttributeDefinition = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blaze_query.AttributeDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.AttributeDefinition.displayName = 'proto.blaze_query.AttributeDefinition';
}
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.AttributeDefinition.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.AttributeDefinition.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.AttributeDefinition} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.AttributeDefinition.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: jspb.Message.getField(msg, 1),
            type: jspb.Message.getField(msg, 2),
            mandatory: jspb.Message.getField(msg, 3),
            allowedRuleClasses: (f = msg.getAllowedRuleClasses()) && proto.blaze_query.AllowedRuleClassInfo.toObject(includeInstance, f),
            documentation: jspb.Message.getField(msg, 5)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.AttributeDefinition}
 */
proto.blaze_query.AttributeDefinition.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.AttributeDefinition;
    return proto.blaze_query.AttributeDefinition.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.AttributeDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.AttributeDefinition}
 */
proto.blaze_query.AttributeDefinition.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {!proto.blaze_query.Attribute.Discriminator} */ (reader.readEnum());
                msg.setType(value);
                break;
            case 3:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setMandatory(value);
                break;
            case 4:
                var value = new proto.blaze_query.AllowedRuleClassInfo;
                reader.readMessage(value, proto.blaze_query.AllowedRuleClassInfo.deserializeBinaryFromReader);
                msg.setAllowedRuleClasses(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setDocumentation(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.AttributeDefinition.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.AttributeDefinition.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.AttributeDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.AttributeDefinition.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {!proto.blaze_query.Attribute.Discriminator} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeEnum(2, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeBool(3, f);
    }
    f = message.getAllowedRuleClasses();
    if (f != null) {
        writer.writeMessage(4, f, proto.blaze_query.AllowedRuleClassInfo.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
};
/**
 * required string name = 1;
 * @return {string}
 */
proto.blaze_query.AttributeDefinition.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/** @param {string} value */
proto.blaze_query.AttributeDefinition.prototype.setName = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.AttributeDefinition.prototype.clearName = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.AttributeDefinition.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * required Attribute.Discriminator type = 2;
 * @return {!proto.blaze_query.Attribute.Discriminator}
 */
proto.blaze_query.AttributeDefinition.prototype.getType = function () {
    return /** @type {!proto.blaze_query.Attribute.Discriminator} */ (jspb.Message.getFieldWithDefault(this, 2, 1));
};
/** @param {!proto.blaze_query.Attribute.Discriminator} value */
proto.blaze_query.AttributeDefinition.prototype.setType = function (value) {
    jspb.Message.setField(this, 2, value);
};
proto.blaze_query.AttributeDefinition.prototype.clearType = function () {
    jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.AttributeDefinition.prototype.hasType = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * required bool mandatory = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.blaze_query.AttributeDefinition.prototype.getMandatory = function () {
    return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};
/** @param {boolean} value */
proto.blaze_query.AttributeDefinition.prototype.setMandatory = function (value) {
    jspb.Message.setField(this, 3, value);
};
proto.blaze_query.AttributeDefinition.prototype.clearMandatory = function () {
    jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.AttributeDefinition.prototype.hasMandatory = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional AllowedRuleClassInfo allowed_rule_classes = 4;
 * @return {?proto.blaze_query.AllowedRuleClassInfo}
 */
proto.blaze_query.AttributeDefinition.prototype.getAllowedRuleClasses = function () {
    return /** @type{?proto.blaze_query.AllowedRuleClassInfo} */ (jspb.Message.getWrapperField(this, proto.blaze_query.AllowedRuleClassInfo, 4));
};
/** @param {?proto.blaze_query.AllowedRuleClassInfo|undefined} value */
proto.blaze_query.AttributeDefinition.prototype.setAllowedRuleClasses = function (value) {
    jspb.Message.setWrapperField(this, 4, value);
};
proto.blaze_query.AttributeDefinition.prototype.clearAllowedRuleClasses = function () {
    this.setAllowedRuleClasses(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.AttributeDefinition.prototype.hasAllowedRuleClasses = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional string documentation = 5;
 * @return {string}
 */
proto.blaze_query.AttributeDefinition.prototype.getDocumentation = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/** @param {string} value */
proto.blaze_query.AttributeDefinition.prototype.setDocumentation = function (value) {
    jspb.Message.setField(this, 5, value);
};
proto.blaze_query.AttributeDefinition.prototype.clearDocumentation = function () {
    jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.AttributeDefinition.prototype.hasDocumentation = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.RuleDefinition = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.blaze_query.RuleDefinition.repeatedFields_, null);
};
goog.inherits(proto.blaze_query.RuleDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.RuleDefinition.displayName = 'proto.blaze_query.RuleDefinition';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blaze_query.RuleDefinition.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.RuleDefinition.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.RuleDefinition.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.RuleDefinition} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.RuleDefinition.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: jspb.Message.getField(msg, 1),
            attributeList: jspb.Message.toObjectList(msg.getAttributeList(), proto.blaze_query.AttributeDefinition.toObject, includeInstance),
            documentation: jspb.Message.getField(msg, 3),
            label: jspb.Message.getField(msg, 4)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.RuleDefinition}
 */
proto.blaze_query.RuleDefinition.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.RuleDefinition;
    return proto.blaze_query.RuleDefinition.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.RuleDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.RuleDefinition}
 */
proto.blaze_query.RuleDefinition.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = new proto.blaze_query.AttributeDefinition;
                reader.readMessage(value, proto.blaze_query.AttributeDefinition.deserializeBinaryFromReader);
                msg.addAttribute(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setDocumentation(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setLabel(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.RuleDefinition.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.RuleDefinition.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.RuleDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.RuleDefinition.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = message.getAttributeList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.blaze_query.AttributeDefinition.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeString(4, f);
    }
};
/**
 * required string name = 1;
 * @return {string}
 */
proto.blaze_query.RuleDefinition.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/** @param {string} value */
proto.blaze_query.RuleDefinition.prototype.setName = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.RuleDefinition.prototype.clearName = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.RuleDefinition.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated AttributeDefinition attribute = 2;
 * @return {!Array.<!proto.blaze_query.AttributeDefinition>}
 */
proto.blaze_query.RuleDefinition.prototype.getAttributeList = function () {
    return /** @type{!Array.<!proto.blaze_query.AttributeDefinition>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.AttributeDefinition, 2));
};
/** @param {!Array.<!proto.blaze_query.AttributeDefinition>} value */
proto.blaze_query.RuleDefinition.prototype.setAttributeList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.blaze_query.AttributeDefinition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.AttributeDefinition}
 */
proto.blaze_query.RuleDefinition.prototype.addAttribute = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.blaze_query.AttributeDefinition, opt_index);
};
proto.blaze_query.RuleDefinition.prototype.clearAttributeList = function () {
    this.setAttributeList([]);
};
/**
 * optional string documentation = 3;
 * @return {string}
 */
proto.blaze_query.RuleDefinition.prototype.getDocumentation = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/** @param {string} value */
proto.blaze_query.RuleDefinition.prototype.setDocumentation = function (value) {
    jspb.Message.setField(this, 3, value);
};
proto.blaze_query.RuleDefinition.prototype.clearDocumentation = function () {
    jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.RuleDefinition.prototype.hasDocumentation = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string label = 4;
 * @return {string}
 */
proto.blaze_query.RuleDefinition.prototype.getLabel = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/** @param {string} value */
proto.blaze_query.RuleDefinition.prototype.setLabel = function (value) {
    jspb.Message.setField(this, 4, value);
};
proto.blaze_query.RuleDefinition.prototype.clearLabel = function () {
    jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.RuleDefinition.prototype.hasLabel = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.BuildLanguage = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.blaze_query.BuildLanguage.repeatedFields_, null);
};
goog.inherits(proto.blaze_query.BuildLanguage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.BuildLanguage.displayName = 'proto.blaze_query.BuildLanguage';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blaze_query.BuildLanguage.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.BuildLanguage.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.BuildLanguage.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.BuildLanguage} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.BuildLanguage.toObject = function (includeInstance, msg) {
        var f, obj = {
            ruleList: jspb.Message.toObjectList(msg.getRuleList(), proto.blaze_query.RuleDefinition.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.BuildLanguage}
 */
proto.blaze_query.BuildLanguage.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.BuildLanguage;
    return proto.blaze_query.BuildLanguage.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.BuildLanguage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.BuildLanguage}
 */
proto.blaze_query.BuildLanguage.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.blaze_query.RuleDefinition;
                reader.readMessage(value, proto.blaze_query.RuleDefinition.deserializeBinaryFromReader);
                msg.addRule(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.BuildLanguage.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.BuildLanguage.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.BuildLanguage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.BuildLanguage.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getRuleList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.blaze_query.RuleDefinition.serializeBinaryToWriter);
    }
};
/**
 * repeated RuleDefinition rule = 1;
 * @return {!Array.<!proto.blaze_query.RuleDefinition>}
 */
proto.blaze_query.BuildLanguage.prototype.getRuleList = function () {
    return /** @type{!Array.<!proto.blaze_query.RuleDefinition>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.RuleDefinition, 1));
};
/** @param {!Array.<!proto.blaze_query.RuleDefinition>} value */
proto.blaze_query.BuildLanguage.prototype.setRuleList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.blaze_query.RuleDefinition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.RuleDefinition}
 */
proto.blaze_query.BuildLanguage.prototype.addRule = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.blaze_query.RuleDefinition, opt_index);
};
proto.blaze_query.BuildLanguage.prototype.clearRuleList = function () {
    this.setRuleList([]);
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.Location = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blaze_query.Location, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.Location.displayName = 'proto.blaze_query.Location';
}
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.Location.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.Location.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.Location} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.Location.toObject = function (includeInstance, msg) {
        var f, obj = {
            startOffset: jspb.Message.getField(msg, 1),
            startLine: jspb.Message.getField(msg, 2),
            startColumn: jspb.Message.getField(msg, 3),
            endOffset: jspb.Message.getField(msg, 4),
            endLine: jspb.Message.getField(msg, 5),
            endColumn: jspb.Message.getField(msg, 6)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.Location}
 */
proto.blaze_query.Location.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.Location;
    return proto.blaze_query.Location.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.Location} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.Location}
 */
proto.blaze_query.Location.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setStartOffset(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setStartLine(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setStartColumn(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setEndOffset(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setEndLine(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setEndColumn(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.Location.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.Location.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.Location} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.Location.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {number} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeInt32(1, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeInt32(2, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeInt32(3, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeInt32(4, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeInt32(5, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 6));
    if (f != null) {
        writer.writeInt32(6, f);
    }
};
/**
 * optional int32 start_offset = 1;
 * @return {number}
 */
proto.blaze_query.Location.prototype.getStartOffset = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/** @param {number} value */
proto.blaze_query.Location.prototype.setStartOffset = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.Location.prototype.clearStartOffset = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Location.prototype.hasStartOffset = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional int32 start_line = 2;
 * @return {number}
 */
proto.blaze_query.Location.prototype.getStartLine = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/** @param {number} value */
proto.blaze_query.Location.prototype.setStartLine = function (value) {
    jspb.Message.setField(this, 2, value);
};
proto.blaze_query.Location.prototype.clearStartLine = function () {
    jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Location.prototype.hasStartLine = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional int32 start_column = 3;
 * @return {number}
 */
proto.blaze_query.Location.prototype.getStartColumn = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};
/** @param {number} value */
proto.blaze_query.Location.prototype.setStartColumn = function (value) {
    jspb.Message.setField(this, 3, value);
};
proto.blaze_query.Location.prototype.clearStartColumn = function () {
    jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Location.prototype.hasStartColumn = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional int32 end_offset = 4;
 * @return {number}
 */
proto.blaze_query.Location.prototype.getEndOffset = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};
/** @param {number} value */
proto.blaze_query.Location.prototype.setEndOffset = function (value) {
    jspb.Message.setField(this, 4, value);
};
proto.blaze_query.Location.prototype.clearEndOffset = function () {
    jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Location.prototype.hasEndOffset = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional int32 end_line = 5;
 * @return {number}
 */
proto.blaze_query.Location.prototype.getEndLine = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};
/** @param {number} value */
proto.blaze_query.Location.prototype.setEndLine = function (value) {
    jspb.Message.setField(this, 5, value);
};
proto.blaze_query.Location.prototype.clearEndLine = function () {
    jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Location.prototype.hasEndLine = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional int32 end_column = 6;
 * @return {number}
 */
proto.blaze_query.Location.prototype.getEndColumn = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};
/** @param {number} value */
proto.blaze_query.Location.prototype.setEndColumn = function (value) {
    jspb.Message.setField(this, 6, value);
};
proto.blaze_query.Location.prototype.clearEndColumn = function () {
    jspb.Message.setField(this, 6, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Location.prototype.hasEndColumn = function () {
    return jspb.Message.getField(this, 6) != null;
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.MakeVarBinding = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blaze_query.MakeVarBinding, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.MakeVarBinding.displayName = 'proto.blaze_query.MakeVarBinding';
}
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.MakeVarBinding.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.MakeVarBinding.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.MakeVarBinding} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.MakeVarBinding.toObject = function (includeInstance, msg) {
        var f, obj = {
            value: jspb.Message.getField(msg, 1),
            platformSetRegexp: jspb.Message.getField(msg, 2)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.MakeVarBinding}
 */
proto.blaze_query.MakeVarBinding.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.MakeVarBinding;
    return proto.blaze_query.MakeVarBinding.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.MakeVarBinding} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.MakeVarBinding}
 */
proto.blaze_query.MakeVarBinding.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setValue(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setPlatformSetRegexp(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.MakeVarBinding.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.MakeVarBinding.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.MakeVarBinding} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.MakeVarBinding.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeString(2, f);
    }
};
/**
 * required string value = 1;
 * @return {string}
 */
proto.blaze_query.MakeVarBinding.prototype.getValue = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/** @param {string} value */
proto.blaze_query.MakeVarBinding.prototype.setValue = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.MakeVarBinding.prototype.clearValue = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.MakeVarBinding.prototype.hasValue = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * required string platform_set_regexp = 2;
 * @return {string}
 */
proto.blaze_query.MakeVarBinding.prototype.getPlatformSetRegexp = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/** @param {string} value */
proto.blaze_query.MakeVarBinding.prototype.setPlatformSetRegexp = function (value) {
    jspb.Message.setField(this, 2, value);
};
proto.blaze_query.MakeVarBinding.prototype.clearPlatformSetRegexp = function () {
    jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.MakeVarBinding.prototype.hasPlatformSetRegexp = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.MakeVar = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.blaze_query.MakeVar.repeatedFields_, null);
};
goog.inherits(proto.blaze_query.MakeVar, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.MakeVar.displayName = 'proto.blaze_query.MakeVar';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blaze_query.MakeVar.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.MakeVar.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.MakeVar.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.MakeVar} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.MakeVar.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: jspb.Message.getField(msg, 1),
            bindingList: jspb.Message.toObjectList(msg.getBindingList(), proto.blaze_query.MakeVarBinding.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.MakeVar}
 */
proto.blaze_query.MakeVar.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.MakeVar;
    return proto.blaze_query.MakeVar.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.MakeVar} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.MakeVar}
 */
proto.blaze_query.MakeVar.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = new proto.blaze_query.MakeVarBinding;
                reader.readMessage(value, proto.blaze_query.MakeVarBinding.deserializeBinaryFromReader);
                msg.addBinding(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.MakeVar.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.MakeVar.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.MakeVar} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.MakeVar.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = message.getBindingList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.blaze_query.MakeVarBinding.serializeBinaryToWriter);
    }
};
/**
 * required string name = 1;
 * @return {string}
 */
proto.blaze_query.MakeVar.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/** @param {string} value */
proto.blaze_query.MakeVar.prototype.setName = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.MakeVar.prototype.clearName = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.MakeVar.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated MakeVarBinding binding = 2;
 * @return {!Array.<!proto.blaze_query.MakeVarBinding>}
 */
proto.blaze_query.MakeVar.prototype.getBindingList = function () {
    return /** @type{!Array.<!proto.blaze_query.MakeVarBinding>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.MakeVarBinding, 2));
};
/** @param {!Array.<!proto.blaze_query.MakeVarBinding>} value */
proto.blaze_query.MakeVar.prototype.setBindingList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.blaze_query.MakeVarBinding=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.MakeVarBinding}
 */
proto.blaze_query.MakeVar.prototype.addBinding = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.blaze_query.MakeVarBinding, opt_index);
};
proto.blaze_query.MakeVar.prototype.clearBindingList = function () {
    this.setBindingList([]);
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.DEPRECATED_GlobCriteria = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.blaze_query.DEPRECATED_GlobCriteria.repeatedFields_, null);
};
goog.inherits(proto.blaze_query.DEPRECATED_GlobCriteria, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.DEPRECATED_GlobCriteria.displayName = 'proto.blaze_query.DEPRECATED_GlobCriteria';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blaze_query.DEPRECATED_GlobCriteria.repeatedFields_ = [1, 2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.DEPRECATED_GlobCriteria.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.DEPRECATED_GlobCriteria.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.DEPRECATED_GlobCriteria} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.DEPRECATED_GlobCriteria.toObject = function (includeInstance, msg) {
        var f, obj = {
            includeList: jspb.Message.getRepeatedField(msg, 1),
            excludeList: jspb.Message.getRepeatedField(msg, 2),
            glob: jspb.Message.getField(msg, 3)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.DEPRECATED_GlobCriteria}
 */
proto.blaze_query.DEPRECATED_GlobCriteria.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.DEPRECATED_GlobCriteria;
    return proto.blaze_query.DEPRECATED_GlobCriteria.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.DEPRECATED_GlobCriteria} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.DEPRECATED_GlobCriteria}
 */
proto.blaze_query.DEPRECATED_GlobCriteria.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.addInclude(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.addExclude(value);
                break;
            case 3:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setGlob(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.DEPRECATED_GlobCriteria.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.DEPRECATED_GlobCriteria.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.DEPRECATED_GlobCriteria} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.DEPRECATED_GlobCriteria.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getIncludeList();
    if (f.length > 0) {
        writer.writeRepeatedString(1, f);
    }
    f = message.getExcludeList();
    if (f.length > 0) {
        writer.writeRepeatedString(2, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeBool(3, f);
    }
};
/**
 * repeated string include = 1;
 * @return {!Array.<string>}
 */
proto.blaze_query.DEPRECATED_GlobCriteria.prototype.getIncludeList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};
/** @param {!Array.<string>} value */
proto.blaze_query.DEPRECATED_GlobCriteria.prototype.setIncludeList = function (value) {
    jspb.Message.setField(this, 1, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.blaze_query.DEPRECATED_GlobCriteria.prototype.addInclude = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};
proto.blaze_query.DEPRECATED_GlobCriteria.prototype.clearIncludeList = function () {
    this.setIncludeList([]);
};
/**
 * repeated string exclude = 2;
 * @return {!Array.<string>}
 */
proto.blaze_query.DEPRECATED_GlobCriteria.prototype.getExcludeList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 2));
};
/** @param {!Array.<string>} value */
proto.blaze_query.DEPRECATED_GlobCriteria.prototype.setExcludeList = function (value) {
    jspb.Message.setField(this, 2, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.blaze_query.DEPRECATED_GlobCriteria.prototype.addExclude = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};
proto.blaze_query.DEPRECATED_GlobCriteria.prototype.clearExcludeList = function () {
    this.setExcludeList([]);
};
/**
 * optional bool glob = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.blaze_query.DEPRECATED_GlobCriteria.prototype.getGlob = function () {
    return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};
/** @param {boolean} value */
proto.blaze_query.DEPRECATED_GlobCriteria.prototype.setGlob = function (value) {
    jspb.Message.setField(this, 3, value);
};
proto.blaze_query.DEPRECATED_GlobCriteria.prototype.clearGlob = function () {
    jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.DEPRECATED_GlobCriteria.prototype.hasGlob = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.Event = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.blaze_query.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.Event.displayName = 'proto.blaze_query.Event';
}
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.Event.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.Event.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.Event} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.Event.toObject = function (includeInstance, msg) {
        var f, obj = {
            kind: jspb.Message.getField(msg, 1),
            deprecatedLocation: (f = msg.getDeprecatedLocation()) && proto.blaze_query.Location.toObject(includeInstance, f),
            message: jspb.Message.getField(msg, 3)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.Event}
 */
proto.blaze_query.Event.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.Event;
    return proto.blaze_query.Event.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.Event}
 */
proto.blaze_query.Event.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.blaze_query.Event.EventKind} */ (reader.readEnum());
                msg.setKind(value);
                break;
            case 2:
                var value = new proto.blaze_query.Location;
                reader.readMessage(value, proto.blaze_query.Location.deserializeBinaryFromReader);
                msg.setDeprecatedLocation(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setMessage(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.Event.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.Event.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.Event.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {!proto.blaze_query.Event.EventKind} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeEnum(1, f);
    }
    f = message.getDeprecatedLocation();
    if (f != null) {
        writer.writeMessage(2, f, proto.blaze_query.Location.serializeBinaryToWriter);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
};
/**
 * @enum {number}
 */
proto.blaze_query.Event.EventKind = {
    ERROR: 1,
    WARNING: 2,
    INFO: 3,
    PROGRESS: 4
};
/**
 * required EventKind kind = 1;
 * @return {!proto.blaze_query.Event.EventKind}
 */
proto.blaze_query.Event.prototype.getKind = function () {
    return /** @type {!proto.blaze_query.Event.EventKind} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};
/** @param {!proto.blaze_query.Event.EventKind} value */
proto.blaze_query.Event.prototype.setKind = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.Event.prototype.clearKind = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Event.prototype.hasKind = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional Location DEPRECATED_location = 2;
 * @return {?proto.blaze_query.Location}
 */
proto.blaze_query.Event.prototype.getDeprecatedLocation = function () {
    return /** @type{?proto.blaze_query.Location} */ (jspb.Message.getWrapperField(this, proto.blaze_query.Location, 2));
};
/** @param {?proto.blaze_query.Location|undefined} value */
proto.blaze_query.Event.prototype.setDeprecatedLocation = function (value) {
    jspb.Message.setWrapperField(this, 2, value);
};
proto.blaze_query.Event.prototype.clearDeprecatedLocation = function () {
    this.setDeprecatedLocation(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Event.prototype.hasDeprecatedLocation = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string message = 3;
 * @return {string}
 */
proto.blaze_query.Event.prototype.getMessage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/** @param {string} value */
proto.blaze_query.Event.prototype.setMessage = function (value) {
    jspb.Message.setField(this, 3, value);
};
proto.blaze_query.Event.prototype.clearMessage = function () {
    jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Event.prototype.hasMessage = function () {
    return jspb.Message.getField(this, 3) != null;
};
goog.object.extend(exports, proto.blaze_query);
//# sourceMappingURL=build_pb.js.map