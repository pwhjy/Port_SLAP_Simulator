"use strict";
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
goog.provide('proto.blaze_query.Attribute');
goog.provide('proto.blaze_query.Attribute.Discriminator');
goog.provide('proto.blaze_query.Attribute.Selector');
goog.provide('proto.blaze_query.Attribute.SelectorEntry');
goog.provide('proto.blaze_query.Attribute.SelectorList');
goog.provide('proto.blaze_query.Attribute.Tristate');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.blaze_query.DEPRECATED_GlobCriteria');
goog.require('proto.blaze_query.FilesetEntry');
goog.require('proto.blaze_query.LabelDictUnaryEntry');
goog.require('proto.blaze_query.LabelKeyedStringDictEntry');
goog.require('proto.blaze_query.LabelListDictEntry');
goog.require('proto.blaze_query.License');
goog.require('proto.blaze_query.Location');
goog.require('proto.blaze_query.StringDictEntry');
goog.require('proto.blaze_query.StringListDictEntry');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.Attribute = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.blaze_query.Attribute.repeatedFields_, null);
};
goog.inherits(proto.blaze_query.Attribute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.Attribute.displayName = 'proto.blaze_query.Attribute';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blaze_query.Attribute.repeatedFields_ = [6, 8, 9, 10, 11, 17, 19, 22, 16, 18];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.Attribute.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.Attribute.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.Attribute} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.Attribute.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: jspb.Message.getField(msg, 1),
            deprecatedParseableLocation: (f = msg.getDeprecatedParseableLocation()) && proto.blaze_query.Location.toObject(includeInstance, f),
            explicitlySpecified: jspb.Message.getField(msg, 13),
            nodep: jspb.Message.getField(msg, 20),
            type: jspb.Message.getField(msg, 2),
            intValue: jspb.Message.getField(msg, 3),
            stringValue: jspb.Message.getField(msg, 5),
            booleanValue: jspb.Message.getField(msg, 14),
            tristateValue: jspb.Message.getField(msg, 15),
            stringListValueList: jspb.Message.getRepeatedField(msg, 6),
            license: (f = msg.getLicense()) && proto.blaze_query.License.toObject(includeInstance, f),
            stringDictValueList: jspb.Message.toObjectList(msg.getStringDictValueList(), proto.blaze_query.StringDictEntry.toObject, includeInstance),
            filesetListValueList: jspb.Message.toObjectList(msg.getFilesetListValueList(), proto.blaze_query.FilesetEntry.toObject, includeInstance),
            labelListDictValueList: jspb.Message.toObjectList(msg.getLabelListDictValueList(), proto.blaze_query.LabelListDictEntry.toObject, includeInstance),
            stringListDictValueList: jspb.Message.toObjectList(msg.getStringListDictValueList(), proto.blaze_query.StringListDictEntry.toObject, includeInstance),
            intListValueList: jspb.Message.getRepeatedField(msg, 17),
            labelDictUnaryValueList: jspb.Message.toObjectList(msg.getLabelDictUnaryValueList(), proto.blaze_query.LabelDictUnaryEntry.toObject, includeInstance),
            labelKeyedStringDictValueList: jspb.Message.toObjectList(msg.getLabelKeyedStringDictValueList(), proto.blaze_query.LabelKeyedStringDictEntry.toObject, includeInstance),
            selectorList: (f = msg.getSelectorList()) && proto.blaze_query.Attribute.SelectorList.toObject(includeInstance, f),
            deprecatedGlobCriteriaList: jspb.Message.toObjectList(msg.getDeprecatedGlobCriteriaList(), proto.blaze_query.DEPRECATED_GlobCriteria.toObject, includeInstance),
            deprecatedStringDictUnaryValueList: msg.getDeprecatedStringDictUnaryValueList_asB64()
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.Attribute}
 */
proto.blaze_query.Attribute.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.Attribute;
    return proto.blaze_query.Attribute.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.Attribute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.Attribute}
 */
proto.blaze_query.Attribute.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 12:
                var value = new proto.blaze_query.Location;
                reader.readMessage(value, proto.blaze_query.Location.deserializeBinaryFromReader);
                msg.setDeprecatedParseableLocation(value);
                break;
            case 13:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setExplicitlySpecified(value);
                break;
            case 20:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setNodep(value);
                break;
            case 2:
                var value = /** @type {!proto.blaze_query.Attribute.Discriminator} */ (reader.readEnum());
                msg.setType(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setIntValue(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setStringValue(value);
                break;
            case 14:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setBooleanValue(value);
                break;
            case 15:
                var value = /** @type {!proto.blaze_query.Attribute.Tristate} */ (reader.readEnum());
                msg.setTristateValue(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.addStringListValue(value);
                break;
            case 7:
                var value = new proto.blaze_query.License;
                reader.readMessage(value, proto.blaze_query.License.deserializeBinaryFromReader);
                msg.setLicense(value);
                break;
            case 8:
                var value = new proto.blaze_query.StringDictEntry;
                reader.readMessage(value, proto.blaze_query.StringDictEntry.deserializeBinaryFromReader);
                msg.addStringDictValue(value);
                break;
            case 9:
                var value = new proto.blaze_query.FilesetEntry;
                reader.readMessage(value, proto.blaze_query.FilesetEntry.deserializeBinaryFromReader);
                msg.addFilesetListValue(value);
                break;
            case 10:
                var value = new proto.blaze_query.LabelListDictEntry;
                reader.readMessage(value, proto.blaze_query.LabelListDictEntry.deserializeBinaryFromReader);
                msg.addLabelListDictValue(value);
                break;
            case 11:
                var value = new proto.blaze_query.StringListDictEntry;
                reader.readMessage(value, proto.blaze_query.StringListDictEntry.deserializeBinaryFromReader);
                msg.addStringListDictValue(value);
                break;
            case 17:
                var value = /** @type {number} */ (reader.readInt32());
                msg.addIntListValue(value);
                break;
            case 19:
                var value = new proto.blaze_query.LabelDictUnaryEntry;
                reader.readMessage(value, proto.blaze_query.LabelDictUnaryEntry.deserializeBinaryFromReader);
                msg.addLabelDictUnaryValue(value);
                break;
            case 22:
                var value = new proto.blaze_query.LabelKeyedStringDictEntry;
                reader.readMessage(value, proto.blaze_query.LabelKeyedStringDictEntry.deserializeBinaryFromReader);
                msg.addLabelKeyedStringDictValue(value);
                break;
            case 21:
                var value = new proto.blaze_query.Attribute.SelectorList;
                reader.readMessage(value, proto.blaze_query.Attribute.SelectorList.deserializeBinaryFromReader);
                msg.setSelectorList(value);
                break;
            case 16:
                var value = new proto.blaze_query.DEPRECATED_GlobCriteria;
                reader.readMessage(value, proto.blaze_query.DEPRECATED_GlobCriteria.deserializeBinaryFromReader);
                msg.addDeprecatedGlobCriteria(value);
                break;
            case 18:
                var value = /** @type {!Uint8Array} */ (reader.readBytes());
                msg.addDeprecatedStringDictUnaryValue(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.Attribute.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.Attribute.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.Attribute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.Attribute.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = message.getDeprecatedParseableLocation();
    if (f != null) {
        writer.writeMessage(12, f, proto.blaze_query.Location.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 13));
    if (f != null) {
        writer.writeBool(13, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 20));
    if (f != null) {
        writer.writeBool(20, f);
    }
    f = /** @type {!proto.blaze_query.Attribute.Discriminator} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeEnum(2, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeInt32(3, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeString(5, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
    if (f != null) {
        writer.writeBool(14, f);
    }
    f = /** @type {!proto.blaze_query.Attribute.Tristate} */ (jspb.Message.getField(message, 15));
    if (f != null) {
        writer.writeEnum(15, f);
    }
    f = message.getStringListValueList();
    if (f.length > 0) {
        writer.writeRepeatedString(6, f);
    }
    f = message.getLicense();
    if (f != null) {
        writer.writeMessage(7, f, proto.blaze_query.License.serializeBinaryToWriter);
    }
    f = message.getStringDictValueList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(8, f, proto.blaze_query.StringDictEntry.serializeBinaryToWriter);
    }
    f = message.getFilesetListValueList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(9, f, proto.blaze_query.FilesetEntry.serializeBinaryToWriter);
    }
    f = message.getLabelListDictValueList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(10, f, proto.blaze_query.LabelListDictEntry.serializeBinaryToWriter);
    }
    f = message.getStringListDictValueList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(11, f, proto.blaze_query.StringListDictEntry.serializeBinaryToWriter);
    }
    f = message.getIntListValueList();
    if (f.length > 0) {
        writer.writeRepeatedInt32(17, f);
    }
    f = message.getLabelDictUnaryValueList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(19, f, proto.blaze_query.LabelDictUnaryEntry.serializeBinaryToWriter);
    }
    f = message.getLabelKeyedStringDictValueList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(22, f, proto.blaze_query.LabelKeyedStringDictEntry.serializeBinaryToWriter);
    }
    f = message.getSelectorList();
    if (f != null) {
        writer.writeMessage(21, f, proto.blaze_query.Attribute.SelectorList.serializeBinaryToWriter);
    }
    f = message.getDeprecatedGlobCriteriaList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(16, f, proto.blaze_query.DEPRECATED_GlobCriteria.serializeBinaryToWriter);
    }
    f = message.getDeprecatedStringDictUnaryValueList_asU8();
    if (f.length > 0) {
        writer.writeRepeatedBytes(18, f);
    }
};
/**
 * @enum {number}
 */
proto.blaze_query.Attribute.Discriminator = {
    INTEGER: 1,
    STRING: 2,
    LABEL: 3,
    OUTPUT: 4,
    STRING_LIST: 5,
    LABEL_LIST: 6,
    OUTPUT_LIST: 7,
    DISTRIBUTION_SET: 8,
    LICENSE: 9,
    STRING_DICT: 10,
    FILESET_ENTRY_LIST: 11,
    LABEL_LIST_DICT: 12,
    STRING_LIST_DICT: 13,
    BOOLEAN: 14,
    TRISTATE: 15,
    INTEGER_LIST: 16,
    UNKNOWN: 18,
    LABEL_DICT_UNARY: 19,
    SELECTOR_LIST: 20,
    LABEL_KEYED_STRING_DICT: 21,
    DEPRECATED_STRING_DICT_UNARY: 17
};
/**
 * @enum {number}
 */
proto.blaze_query.Attribute.Tristate = {
    NO: 0,
    YES: 1,
    AUTO: 2
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.Attribute.SelectorEntry = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.blaze_query.Attribute.SelectorEntry.repeatedFields_, null);
};
goog.inherits(proto.blaze_query.Attribute.SelectorEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.Attribute.SelectorEntry.displayName = 'proto.blaze_query.Attribute.SelectorEntry';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blaze_query.Attribute.SelectorEntry.repeatedFields_ = [6, 8, 9, 10, 11, 13, 15, 17, 12, 14];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.Attribute.SelectorEntry.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.Attribute.SelectorEntry.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.Attribute.SelectorEntry} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.Attribute.SelectorEntry.toObject = function (includeInstance, msg) {
        var f, obj = {
            label: jspb.Message.getField(msg, 1),
            isDefaultValue: jspb.Message.getField(msg, 16),
            intValue: jspb.Message.getField(msg, 2),
            stringValue: jspb.Message.getField(msg, 3),
            booleanValue: jspb.Message.getField(msg, 4),
            tristateValue: jspb.Message.getField(msg, 5),
            stringListValueList: jspb.Message.getRepeatedField(msg, 6),
            license: (f = msg.getLicense()) && proto.blaze_query.License.toObject(includeInstance, f),
            stringDictValueList: jspb.Message.toObjectList(msg.getStringDictValueList(), proto.blaze_query.StringDictEntry.toObject, includeInstance),
            filesetListValueList: jspb.Message.toObjectList(msg.getFilesetListValueList(), proto.blaze_query.FilesetEntry.toObject, includeInstance),
            labelListDictValueList: jspb.Message.toObjectList(msg.getLabelListDictValueList(), proto.blaze_query.LabelListDictEntry.toObject, includeInstance),
            stringListDictValueList: jspb.Message.toObjectList(msg.getStringListDictValueList(), proto.blaze_query.StringListDictEntry.toObject, includeInstance),
            intListValueList: jspb.Message.getRepeatedField(msg, 13),
            labelDictUnaryValueList: jspb.Message.toObjectList(msg.getLabelDictUnaryValueList(), proto.blaze_query.LabelDictUnaryEntry.toObject, includeInstance),
            labelKeyedStringDictValueList: jspb.Message.toObjectList(msg.getLabelKeyedStringDictValueList(), proto.blaze_query.LabelKeyedStringDictEntry.toObject, includeInstance),
            deprecatedGlobCriteriaList: jspb.Message.toObjectList(msg.getDeprecatedGlobCriteriaList(), proto.blaze_query.DEPRECATED_GlobCriteria.toObject, includeInstance),
            deprecatedStringDictUnaryValueList: msg.getDeprecatedStringDictUnaryValueList_asB64()
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.Attribute.SelectorEntry}
 */
proto.blaze_query.Attribute.SelectorEntry.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.Attribute.SelectorEntry;
    return proto.blaze_query.Attribute.SelectorEntry.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.Attribute.SelectorEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.Attribute.SelectorEntry}
 */
proto.blaze_query.Attribute.SelectorEntry.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setLabel(value);
                break;
            case 16:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setIsDefaultValue(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setIntValue(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setStringValue(value);
                break;
            case 4:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setBooleanValue(value);
                break;
            case 5:
                var value = /** @type {!proto.blaze_query.Attribute.Tristate} */ (reader.readEnum());
                msg.setTristateValue(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.addStringListValue(value);
                break;
            case 7:
                var value = new proto.blaze_query.License;
                reader.readMessage(value, proto.blaze_query.License.deserializeBinaryFromReader);
                msg.setLicense(value);
                break;
            case 8:
                var value = new proto.blaze_query.StringDictEntry;
                reader.readMessage(value, proto.blaze_query.StringDictEntry.deserializeBinaryFromReader);
                msg.addStringDictValue(value);
                break;
            case 9:
                var value = new proto.blaze_query.FilesetEntry;
                reader.readMessage(value, proto.blaze_query.FilesetEntry.deserializeBinaryFromReader);
                msg.addFilesetListValue(value);
                break;
            case 10:
                var value = new proto.blaze_query.LabelListDictEntry;
                reader.readMessage(value, proto.blaze_query.LabelListDictEntry.deserializeBinaryFromReader);
                msg.addLabelListDictValue(value);
                break;
            case 11:
                var value = new proto.blaze_query.StringListDictEntry;
                reader.readMessage(value, proto.blaze_query.StringListDictEntry.deserializeBinaryFromReader);
                msg.addStringListDictValue(value);
                break;
            case 13:
                var value = /** @type {number} */ (reader.readInt32());
                msg.addIntListValue(value);
                break;
            case 15:
                var value = new proto.blaze_query.LabelDictUnaryEntry;
                reader.readMessage(value, proto.blaze_query.LabelDictUnaryEntry.deserializeBinaryFromReader);
                msg.addLabelDictUnaryValue(value);
                break;
            case 17:
                var value = new proto.blaze_query.LabelKeyedStringDictEntry;
                reader.readMessage(value, proto.blaze_query.LabelKeyedStringDictEntry.deserializeBinaryFromReader);
                msg.addLabelKeyedStringDictValue(value);
                break;
            case 12:
                var value = new proto.blaze_query.DEPRECATED_GlobCriteria;
                reader.readMessage(value, proto.blaze_query.DEPRECATED_GlobCriteria.deserializeBinaryFromReader);
                msg.addDeprecatedGlobCriteria(value);
                break;
            case 14:
                var value = /** @type {!Uint8Array} */ (reader.readBytes());
                msg.addDeprecatedStringDictUnaryValue(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.Attribute.SelectorEntry.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.Attribute.SelectorEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.Attribute.SelectorEntry.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 16));
    if (f != null) {
        writer.writeBool(16, f);
    }
    f = /** @type {number} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeInt32(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
    if (f != null) {
        writer.writeBool(4, f);
    }
    f = /** @type {!proto.blaze_query.Attribute.Tristate} */ (jspb.Message.getField(message, 5));
    if (f != null) {
        writer.writeEnum(5, f);
    }
    f = message.getStringListValueList();
    if (f.length > 0) {
        writer.writeRepeatedString(6, f);
    }
    f = message.getLicense();
    if (f != null) {
        writer.writeMessage(7, f, proto.blaze_query.License.serializeBinaryToWriter);
    }
    f = message.getStringDictValueList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(8, f, proto.blaze_query.StringDictEntry.serializeBinaryToWriter);
    }
    f = message.getFilesetListValueList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(9, f, proto.blaze_query.FilesetEntry.serializeBinaryToWriter);
    }
    f = message.getLabelListDictValueList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(10, f, proto.blaze_query.LabelListDictEntry.serializeBinaryToWriter);
    }
    f = message.getStringListDictValueList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(11, f, proto.blaze_query.StringListDictEntry.serializeBinaryToWriter);
    }
    f = message.getIntListValueList();
    if (f.length > 0) {
        writer.writeRepeatedInt32(13, f);
    }
    f = message.getLabelDictUnaryValueList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(15, f, proto.blaze_query.LabelDictUnaryEntry.serializeBinaryToWriter);
    }
    f = message.getLabelKeyedStringDictValueList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(17, f, proto.blaze_query.LabelKeyedStringDictEntry.serializeBinaryToWriter);
    }
    f = message.getDeprecatedGlobCriteriaList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(12, f, proto.blaze_query.DEPRECATED_GlobCriteria.serializeBinaryToWriter);
    }
    f = message.getDeprecatedStringDictUnaryValueList_asU8();
    if (f.length > 0) {
        writer.writeRepeatedBytes(14, f);
    }
};
/**
 * optional string label = 1;
 * @return {string}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getLabel = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/** @param {string} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setLabel = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearLabel = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.hasLabel = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional bool is_default_value = 16;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getIsDefaultValue = function () {
    return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 16, false));
};
/** @param {boolean} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setIsDefaultValue = function (value) {
    jspb.Message.setField(this, 16, value);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearIsDefaultValue = function () {
    jspb.Message.setField(this, 16, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.hasIsDefaultValue = function () {
    return jspb.Message.getField(this, 16) != null;
};
/**
 * optional int32 int_value = 2;
 * @return {number}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getIntValue = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/** @param {number} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setIntValue = function (value) {
    jspb.Message.setField(this, 2, value);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearIntValue = function () {
    jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.hasIntValue = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string string_value = 3;
 * @return {string}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getStringValue = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/** @param {string} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setStringValue = function (value) {
    jspb.Message.setField(this, 3, value);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearStringValue = function () {
    jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.hasStringValue = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional bool boolean_value = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getBooleanValue = function () {
    return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};
/** @param {boolean} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setBooleanValue = function (value) {
    jspb.Message.setField(this, 4, value);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearBooleanValue = function () {
    jspb.Message.setField(this, 4, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.hasBooleanValue = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * optional Tristate tristate_value = 5;
 * @return {!proto.blaze_query.Attribute.Tristate}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getTristateValue = function () {
    return /** @type {!proto.blaze_query.Attribute.Tristate} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};
/** @param {!proto.blaze_query.Attribute.Tristate} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setTristateValue = function (value) {
    jspb.Message.setField(this, 5, value);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearTristateValue = function () {
    jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.hasTristateValue = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * repeated string string_list_value = 6;
 * @return {!Array.<string>}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getStringListValueList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 6));
};
/** @param {!Array.<string>} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setStringListValueList = function (value) {
    jspb.Message.setField(this, 6, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.addStringListValue = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearStringListValueList = function () {
    this.setStringListValueList([]);
};
/**
 * optional License license = 7;
 * @return {?proto.blaze_query.License}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getLicense = function () {
    return /** @type{?proto.blaze_query.License} */ (jspb.Message.getWrapperField(this, proto.blaze_query.License, 7));
};
/** @param {?proto.blaze_query.License|undefined} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setLicense = function (value) {
    jspb.Message.setWrapperField(this, 7, value);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearLicense = function () {
    this.setLicense(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.hasLicense = function () {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * repeated StringDictEntry string_dict_value = 8;
 * @return {!Array.<!proto.blaze_query.StringDictEntry>}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getStringDictValueList = function () {
    return /** @type{!Array.<!proto.blaze_query.StringDictEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.StringDictEntry, 8));
};
/** @param {!Array.<!proto.blaze_query.StringDictEntry>} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setStringDictValueList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 8, value);
};
/**
 * @param {!proto.blaze_query.StringDictEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.StringDictEntry}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.addStringDictValue = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.blaze_query.StringDictEntry, opt_index);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearStringDictValueList = function () {
    this.setStringDictValueList([]);
};
/**
 * repeated FilesetEntry fileset_list_value = 9;
 * @return {!Array.<!proto.blaze_query.FilesetEntry>}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getFilesetListValueList = function () {
    return /** @type{!Array.<!proto.blaze_query.FilesetEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.FilesetEntry, 9));
};
/** @param {!Array.<!proto.blaze_query.FilesetEntry>} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setFilesetListValueList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 9, value);
};
/**
 * @param {!proto.blaze_query.FilesetEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.FilesetEntry}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.addFilesetListValue = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.blaze_query.FilesetEntry, opt_index);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearFilesetListValueList = function () {
    this.setFilesetListValueList([]);
};
/**
 * repeated LabelListDictEntry label_list_dict_value = 10;
 * @return {!Array.<!proto.blaze_query.LabelListDictEntry>}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getLabelListDictValueList = function () {
    return /** @type{!Array.<!proto.blaze_query.LabelListDictEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.LabelListDictEntry, 10));
};
/** @param {!Array.<!proto.blaze_query.LabelListDictEntry>} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setLabelListDictValueList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 10, value);
};
/**
 * @param {!proto.blaze_query.LabelListDictEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.LabelListDictEntry}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.addLabelListDictValue = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.blaze_query.LabelListDictEntry, opt_index);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearLabelListDictValueList = function () {
    this.setLabelListDictValueList([]);
};
/**
 * repeated StringListDictEntry string_list_dict_value = 11;
 * @return {!Array.<!proto.blaze_query.StringListDictEntry>}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getStringListDictValueList = function () {
    return /** @type{!Array.<!proto.blaze_query.StringListDictEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.StringListDictEntry, 11));
};
/** @param {!Array.<!proto.blaze_query.StringListDictEntry>} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setStringListDictValueList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 11, value);
};
/**
 * @param {!proto.blaze_query.StringListDictEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.StringListDictEntry}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.addStringListDictValue = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.blaze_query.StringListDictEntry, opt_index);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearStringListDictValueList = function () {
    this.setStringListDictValueList([]);
};
/**
 * repeated int32 int_list_value = 13;
 * @return {!Array.<number>}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getIntListValueList = function () {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 13));
};
/** @param {!Array.<number>} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setIntListValueList = function (value) {
    jspb.Message.setField(this, 13, value || []);
};
/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.addIntListValue = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearIntListValueList = function () {
    this.setIntListValueList([]);
};
/**
 * repeated LabelDictUnaryEntry label_dict_unary_value = 15;
 * @return {!Array.<!proto.blaze_query.LabelDictUnaryEntry>}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getLabelDictUnaryValueList = function () {
    return /** @type{!Array.<!proto.blaze_query.LabelDictUnaryEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.LabelDictUnaryEntry, 15));
};
/** @param {!Array.<!proto.blaze_query.LabelDictUnaryEntry>} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setLabelDictUnaryValueList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 15, value);
};
/**
 * @param {!proto.blaze_query.LabelDictUnaryEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.LabelDictUnaryEntry}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.addLabelDictUnaryValue = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.blaze_query.LabelDictUnaryEntry, opt_index);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearLabelDictUnaryValueList = function () {
    this.setLabelDictUnaryValueList([]);
};
/**
 * repeated LabelKeyedStringDictEntry label_keyed_string_dict_value = 17;
 * @return {!Array.<!proto.blaze_query.LabelKeyedStringDictEntry>}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getLabelKeyedStringDictValueList = function () {
    return /** @type{!Array.<!proto.blaze_query.LabelKeyedStringDictEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.LabelKeyedStringDictEntry, 17));
};
/** @param {!Array.<!proto.blaze_query.LabelKeyedStringDictEntry>} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setLabelKeyedStringDictValueList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 17, value);
};
/**
 * @param {!proto.blaze_query.LabelKeyedStringDictEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.LabelKeyedStringDictEntry}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.addLabelKeyedStringDictValue = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 17, opt_value, proto.blaze_query.LabelKeyedStringDictEntry, opt_index);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearLabelKeyedStringDictValueList = function () {
    this.setLabelKeyedStringDictValueList([]);
};
/**
 * repeated DEPRECATED_GlobCriteria DEPRECATED_glob_criteria = 12;
 * @return {!Array.<!proto.blaze_query.DEPRECATED_GlobCriteria>}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getDeprecatedGlobCriteriaList = function () {
    return /** @type{!Array.<!proto.blaze_query.DEPRECATED_GlobCriteria>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.DEPRECATED_GlobCriteria, 12));
};
/** @param {!Array.<!proto.blaze_query.DEPRECATED_GlobCriteria>} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setDeprecatedGlobCriteriaList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 12, value);
};
/**
 * @param {!proto.blaze_query.DEPRECATED_GlobCriteria=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.DEPRECATED_GlobCriteria}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.addDeprecatedGlobCriteria = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.blaze_query.DEPRECATED_GlobCriteria, opt_index);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearDeprecatedGlobCriteriaList = function () {
    this.setDeprecatedGlobCriteriaList([]);
};
/**
 * repeated bytes DEPRECATED_string_dict_unary_value = 14;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getDeprecatedStringDictUnaryValueList = function () {
    return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 14));
};
/**
 * repeated bytes DEPRECATED_string_dict_unary_value = 14;
 * This is a type-conversion wrapper around `getDeprecatedStringDictUnaryValueList()`
 * @return {!Array.<string>}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getDeprecatedStringDictUnaryValueList_asB64 = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.bytesListAsB64(this.getDeprecatedStringDictUnaryValueList()));
};
/**
 * repeated bytes DEPRECATED_string_dict_unary_value = 14;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDeprecatedStringDictUnaryValueList()`
 * @return {!Array.<!Uint8Array>}
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.getDeprecatedStringDictUnaryValueList_asU8 = function () {
    return /** @type {!Array.<!Uint8Array>} */ (jspb.Message.bytesListAsU8(this.getDeprecatedStringDictUnaryValueList()));
};
/** @param {!(Array<!Uint8Array>|Array<string>)} value */
proto.blaze_query.Attribute.SelectorEntry.prototype.setDeprecatedStringDictUnaryValueList = function (value) {
    jspb.Message.setField(this, 14, value || []);
};
/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 */
proto.blaze_query.Attribute.SelectorEntry.prototype.addDeprecatedStringDictUnaryValue = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};
proto.blaze_query.Attribute.SelectorEntry.prototype.clearDeprecatedStringDictUnaryValueList = function () {
    this.setDeprecatedStringDictUnaryValueList([]);
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.Attribute.Selector = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.blaze_query.Attribute.Selector.repeatedFields_, null);
};
goog.inherits(proto.blaze_query.Attribute.Selector, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.Attribute.Selector.displayName = 'proto.blaze_query.Attribute.Selector';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blaze_query.Attribute.Selector.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.Attribute.Selector.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.Attribute.Selector.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.Attribute.Selector} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.Attribute.Selector.toObject = function (includeInstance, msg) {
        var f, obj = {
            entriesList: jspb.Message.toObjectList(msg.getEntriesList(), proto.blaze_query.Attribute.SelectorEntry.toObject, includeInstance),
            hasDefaultValue: jspb.Message.getField(msg, 2),
            noMatchError: jspb.Message.getField(msg, 3)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.Attribute.Selector}
 */
proto.blaze_query.Attribute.Selector.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.Attribute.Selector;
    return proto.blaze_query.Attribute.Selector.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.Attribute.Selector} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.Attribute.Selector}
 */
proto.blaze_query.Attribute.Selector.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.blaze_query.Attribute.SelectorEntry;
                reader.readMessage(value, proto.blaze_query.Attribute.SelectorEntry.deserializeBinaryFromReader);
                msg.addEntries(value);
                break;
            case 2:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setHasDefaultValue(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setNoMatchError(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.Attribute.Selector.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.Attribute.Selector.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.Attribute.Selector} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.Attribute.Selector.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getEntriesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.blaze_query.Attribute.SelectorEntry.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeBool(2, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
};
/**
 * repeated SelectorEntry entries = 1;
 * @return {!Array.<!proto.blaze_query.Attribute.SelectorEntry>}
 */
proto.blaze_query.Attribute.Selector.prototype.getEntriesList = function () {
    return /** @type{!Array.<!proto.blaze_query.Attribute.SelectorEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.Attribute.SelectorEntry, 1));
};
/** @param {!Array.<!proto.blaze_query.Attribute.SelectorEntry>} value */
proto.blaze_query.Attribute.Selector.prototype.setEntriesList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.blaze_query.Attribute.SelectorEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.Attribute.SelectorEntry}
 */
proto.blaze_query.Attribute.Selector.prototype.addEntries = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.blaze_query.Attribute.SelectorEntry, opt_index);
};
proto.blaze_query.Attribute.Selector.prototype.clearEntriesList = function () {
    this.setEntriesList([]);
};
/**
 * optional bool has_default_value = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.blaze_query.Attribute.Selector.prototype.getHasDefaultValue = function () {
    return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};
/** @param {boolean} value */
proto.blaze_query.Attribute.Selector.prototype.setHasDefaultValue = function (value) {
    jspb.Message.setField(this, 2, value);
};
proto.blaze_query.Attribute.Selector.prototype.clearHasDefaultValue = function () {
    jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.Selector.prototype.hasHasDefaultValue = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional string no_match_error = 3;
 * @return {string}
 */
proto.blaze_query.Attribute.Selector.prototype.getNoMatchError = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/** @param {string} value */
proto.blaze_query.Attribute.Selector.prototype.setNoMatchError = function (value) {
    jspb.Message.setField(this, 3, value);
};
proto.blaze_query.Attribute.Selector.prototype.clearNoMatchError = function () {
    jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.Selector.prototype.hasNoMatchError = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze_query.Attribute.SelectorList = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.blaze_query.Attribute.SelectorList.repeatedFields_, null);
};
goog.inherits(proto.blaze_query.Attribute.SelectorList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze_query.Attribute.SelectorList.displayName = 'proto.blaze_query.Attribute.SelectorList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blaze_query.Attribute.SelectorList.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze_query.Attribute.SelectorList.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze_query.Attribute.SelectorList.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze_query.Attribute.SelectorList} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze_query.Attribute.SelectorList.toObject = function (includeInstance, msg) {
        var f, obj = {
            type: jspb.Message.getField(msg, 1),
            elementsList: jspb.Message.toObjectList(msg.getElementsList(), proto.blaze_query.Attribute.Selector.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze_query.Attribute.SelectorList}
 */
proto.blaze_query.Attribute.SelectorList.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze_query.Attribute.SelectorList;
    return proto.blaze_query.Attribute.SelectorList.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze_query.Attribute.SelectorList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze_query.Attribute.SelectorList}
 */
proto.blaze_query.Attribute.SelectorList.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!proto.blaze_query.Attribute.Discriminator} */ (reader.readEnum());
                msg.setType(value);
                break;
            case 2:
                var value = new proto.blaze_query.Attribute.Selector;
                reader.readMessage(value, proto.blaze_query.Attribute.Selector.deserializeBinaryFromReader);
                msg.addElements(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze_query.Attribute.SelectorList.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze_query.Attribute.SelectorList.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze_query.Attribute.SelectorList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze_query.Attribute.SelectorList.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {!proto.blaze_query.Attribute.Discriminator} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeEnum(1, f);
    }
    f = message.getElementsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.blaze_query.Attribute.Selector.serializeBinaryToWriter);
    }
};
/**
 * optional Discriminator type = 1;
 * @return {!proto.blaze_query.Attribute.Discriminator}
 */
proto.blaze_query.Attribute.SelectorList.prototype.getType = function () {
    return /** @type {!proto.blaze_query.Attribute.Discriminator} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};
/** @param {!proto.blaze_query.Attribute.Discriminator} value */
proto.blaze_query.Attribute.SelectorList.prototype.setType = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.Attribute.SelectorList.prototype.clearType = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.SelectorList.prototype.hasType = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * repeated Selector elements = 2;
 * @return {!Array.<!proto.blaze_query.Attribute.Selector>}
 */
proto.blaze_query.Attribute.SelectorList.prototype.getElementsList = function () {
    return /** @type{!Array.<!proto.blaze_query.Attribute.Selector>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.Attribute.Selector, 2));
};
/** @param {!Array.<!proto.blaze_query.Attribute.Selector>} value */
proto.blaze_query.Attribute.SelectorList.prototype.setElementsList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.blaze_query.Attribute.Selector=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.Attribute.Selector}
 */
proto.blaze_query.Attribute.SelectorList.prototype.addElements = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.blaze_query.Attribute.Selector, opt_index);
};
proto.blaze_query.Attribute.SelectorList.prototype.clearElementsList = function () {
    this.setElementsList([]);
};
/**
 * required string name = 1;
 * @return {string}
 */
proto.blaze_query.Attribute.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/** @param {string} value */
proto.blaze_query.Attribute.prototype.setName = function (value) {
    jspb.Message.setField(this, 1, value);
};
proto.blaze_query.Attribute.prototype.clearName = function () {
    jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.prototype.hasName = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional Location DEPRECATED_parseable_location = 12;
 * @return {?proto.blaze_query.Location}
 */
proto.blaze_query.Attribute.prototype.getDeprecatedParseableLocation = function () {
    return /** @type{?proto.blaze_query.Location} */ (jspb.Message.getWrapperField(this, proto.blaze_query.Location, 12));
};
/** @param {?proto.blaze_query.Location|undefined} value */
proto.blaze_query.Attribute.prototype.setDeprecatedParseableLocation = function (value) {
    jspb.Message.setWrapperField(this, 12, value);
};
proto.blaze_query.Attribute.prototype.clearDeprecatedParseableLocation = function () {
    this.setDeprecatedParseableLocation(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.prototype.hasDeprecatedParseableLocation = function () {
    return jspb.Message.getField(this, 12) != null;
};
/**
 * optional bool explicitly_specified = 13;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.blaze_query.Attribute.prototype.getExplicitlySpecified = function () {
    return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 13, false));
};
/** @param {boolean} value */
proto.blaze_query.Attribute.prototype.setExplicitlySpecified = function (value) {
    jspb.Message.setField(this, 13, value);
};
proto.blaze_query.Attribute.prototype.clearExplicitlySpecified = function () {
    jspb.Message.setField(this, 13, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.prototype.hasExplicitlySpecified = function () {
    return jspb.Message.getField(this, 13) != null;
};
/**
 * optional bool nodep = 20;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.blaze_query.Attribute.prototype.getNodep = function () {
    return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 20, false));
};
/** @param {boolean} value */
proto.blaze_query.Attribute.prototype.setNodep = function (value) {
    jspb.Message.setField(this, 20, value);
};
proto.blaze_query.Attribute.prototype.clearNodep = function () {
    jspb.Message.setField(this, 20, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.prototype.hasNodep = function () {
    return jspb.Message.getField(this, 20) != null;
};
/**
 * required Discriminator type = 2;
 * @return {!proto.blaze_query.Attribute.Discriminator}
 */
proto.blaze_query.Attribute.prototype.getType = function () {
    return /** @type {!proto.blaze_query.Attribute.Discriminator} */ (jspb.Message.getFieldWithDefault(this, 2, 1));
};
/** @param {!proto.blaze_query.Attribute.Discriminator} value */
proto.blaze_query.Attribute.prototype.setType = function (value) {
    jspb.Message.setField(this, 2, value);
};
proto.blaze_query.Attribute.prototype.clearType = function () {
    jspb.Message.setField(this, 2, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.prototype.hasType = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional int32 int_value = 3;
 * @return {number}
 */
proto.blaze_query.Attribute.prototype.getIntValue = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};
/** @param {number} value */
proto.blaze_query.Attribute.prototype.setIntValue = function (value) {
    jspb.Message.setField(this, 3, value);
};
proto.blaze_query.Attribute.prototype.clearIntValue = function () {
    jspb.Message.setField(this, 3, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.prototype.hasIntValue = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional string string_value = 5;
 * @return {string}
 */
proto.blaze_query.Attribute.prototype.getStringValue = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/** @param {string} value */
proto.blaze_query.Attribute.prototype.setStringValue = function (value) {
    jspb.Message.setField(this, 5, value);
};
proto.blaze_query.Attribute.prototype.clearStringValue = function () {
    jspb.Message.setField(this, 5, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.prototype.hasStringValue = function () {
    return jspb.Message.getField(this, 5) != null;
};
/**
 * optional bool boolean_value = 14;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.blaze_query.Attribute.prototype.getBooleanValue = function () {
    return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 14, false));
};
/** @param {boolean} value */
proto.blaze_query.Attribute.prototype.setBooleanValue = function (value) {
    jspb.Message.setField(this, 14, value);
};
proto.blaze_query.Attribute.prototype.clearBooleanValue = function () {
    jspb.Message.setField(this, 14, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.prototype.hasBooleanValue = function () {
    return jspb.Message.getField(this, 14) != null;
};
/**
 * optional Tristate tristate_value = 15;
 * @return {!proto.blaze_query.Attribute.Tristate}
 */
proto.blaze_query.Attribute.prototype.getTristateValue = function () {
    return /** @type {!proto.blaze_query.Attribute.Tristate} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};
/** @param {!proto.blaze_query.Attribute.Tristate} value */
proto.blaze_query.Attribute.prototype.setTristateValue = function (value) {
    jspb.Message.setField(this, 15, value);
};
proto.blaze_query.Attribute.prototype.clearTristateValue = function () {
    jspb.Message.setField(this, 15, undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.prototype.hasTristateValue = function () {
    return jspb.Message.getField(this, 15) != null;
};
/**
 * repeated string string_list_value = 6;
 * @return {!Array.<string>}
 */
proto.blaze_query.Attribute.prototype.getStringListValueList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 6));
};
/** @param {!Array.<string>} value */
proto.blaze_query.Attribute.prototype.setStringListValueList = function (value) {
    jspb.Message.setField(this, 6, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.blaze_query.Attribute.prototype.addStringListValue = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};
proto.blaze_query.Attribute.prototype.clearStringListValueList = function () {
    this.setStringListValueList([]);
};
/**
 * optional License license = 7;
 * @return {?proto.blaze_query.License}
 */
proto.blaze_query.Attribute.prototype.getLicense = function () {
    return /** @type{?proto.blaze_query.License} */ (jspb.Message.getWrapperField(this, proto.blaze_query.License, 7));
};
/** @param {?proto.blaze_query.License|undefined} value */
proto.blaze_query.Attribute.prototype.setLicense = function (value) {
    jspb.Message.setWrapperField(this, 7, value);
};
proto.blaze_query.Attribute.prototype.clearLicense = function () {
    this.setLicense(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.prototype.hasLicense = function () {
    return jspb.Message.getField(this, 7) != null;
};
/**
 * repeated StringDictEntry string_dict_value = 8;
 * @return {!Array.<!proto.blaze_query.StringDictEntry>}
 */
proto.blaze_query.Attribute.prototype.getStringDictValueList = function () {
    return /** @type{!Array.<!proto.blaze_query.StringDictEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.StringDictEntry, 8));
};
/** @param {!Array.<!proto.blaze_query.StringDictEntry>} value */
proto.blaze_query.Attribute.prototype.setStringDictValueList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 8, value);
};
/**
 * @param {!proto.blaze_query.StringDictEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.StringDictEntry}
 */
proto.blaze_query.Attribute.prototype.addStringDictValue = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.blaze_query.StringDictEntry, opt_index);
};
proto.blaze_query.Attribute.prototype.clearStringDictValueList = function () {
    this.setStringDictValueList([]);
};
/**
 * repeated FilesetEntry fileset_list_value = 9;
 * @return {!Array.<!proto.blaze_query.FilesetEntry>}
 */
proto.blaze_query.Attribute.prototype.getFilesetListValueList = function () {
    return /** @type{!Array.<!proto.blaze_query.FilesetEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.FilesetEntry, 9));
};
/** @param {!Array.<!proto.blaze_query.FilesetEntry>} value */
proto.blaze_query.Attribute.prototype.setFilesetListValueList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 9, value);
};
/**
 * @param {!proto.blaze_query.FilesetEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.FilesetEntry}
 */
proto.blaze_query.Attribute.prototype.addFilesetListValue = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.blaze_query.FilesetEntry, opt_index);
};
proto.blaze_query.Attribute.prototype.clearFilesetListValueList = function () {
    this.setFilesetListValueList([]);
};
/**
 * repeated LabelListDictEntry label_list_dict_value = 10;
 * @return {!Array.<!proto.blaze_query.LabelListDictEntry>}
 */
proto.blaze_query.Attribute.prototype.getLabelListDictValueList = function () {
    return /** @type{!Array.<!proto.blaze_query.LabelListDictEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.LabelListDictEntry, 10));
};
/** @param {!Array.<!proto.blaze_query.LabelListDictEntry>} value */
proto.blaze_query.Attribute.prototype.setLabelListDictValueList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 10, value);
};
/**
 * @param {!proto.blaze_query.LabelListDictEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.LabelListDictEntry}
 */
proto.blaze_query.Attribute.prototype.addLabelListDictValue = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.blaze_query.LabelListDictEntry, opt_index);
};
proto.blaze_query.Attribute.prototype.clearLabelListDictValueList = function () {
    this.setLabelListDictValueList([]);
};
/**
 * repeated StringListDictEntry string_list_dict_value = 11;
 * @return {!Array.<!proto.blaze_query.StringListDictEntry>}
 */
proto.blaze_query.Attribute.prototype.getStringListDictValueList = function () {
    return /** @type{!Array.<!proto.blaze_query.StringListDictEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.StringListDictEntry, 11));
};
/** @param {!Array.<!proto.blaze_query.StringListDictEntry>} value */
proto.blaze_query.Attribute.prototype.setStringListDictValueList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 11, value);
};
/**
 * @param {!proto.blaze_query.StringListDictEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.StringListDictEntry}
 */
proto.blaze_query.Attribute.prototype.addStringListDictValue = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.blaze_query.StringListDictEntry, opt_index);
};
proto.blaze_query.Attribute.prototype.clearStringListDictValueList = function () {
    this.setStringListDictValueList([]);
};
/**
 * repeated int32 int_list_value = 17;
 * @return {!Array.<number>}
 */
proto.blaze_query.Attribute.prototype.getIntListValueList = function () {
    return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 17));
};
/** @param {!Array.<number>} value */
proto.blaze_query.Attribute.prototype.setIntListValueList = function (value) {
    jspb.Message.setField(this, 17, value || []);
};
/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.blaze_query.Attribute.prototype.addIntListValue = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 17, value, opt_index);
};
proto.blaze_query.Attribute.prototype.clearIntListValueList = function () {
    this.setIntListValueList([]);
};
/**
 * repeated LabelDictUnaryEntry label_dict_unary_value = 19;
 * @return {!Array.<!proto.blaze_query.LabelDictUnaryEntry>}
 */
proto.blaze_query.Attribute.prototype.getLabelDictUnaryValueList = function () {
    return /** @type{!Array.<!proto.blaze_query.LabelDictUnaryEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.LabelDictUnaryEntry, 19));
};
/** @param {!Array.<!proto.blaze_query.LabelDictUnaryEntry>} value */
proto.blaze_query.Attribute.prototype.setLabelDictUnaryValueList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 19, value);
};
/**
 * @param {!proto.blaze_query.LabelDictUnaryEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.LabelDictUnaryEntry}
 */
proto.blaze_query.Attribute.prototype.addLabelDictUnaryValue = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 19, opt_value, proto.blaze_query.LabelDictUnaryEntry, opt_index);
};
proto.blaze_query.Attribute.prototype.clearLabelDictUnaryValueList = function () {
    this.setLabelDictUnaryValueList([]);
};
/**
 * repeated LabelKeyedStringDictEntry label_keyed_string_dict_value = 22;
 * @return {!Array.<!proto.blaze_query.LabelKeyedStringDictEntry>}
 */
proto.blaze_query.Attribute.prototype.getLabelKeyedStringDictValueList = function () {
    return /** @type{!Array.<!proto.blaze_query.LabelKeyedStringDictEntry>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.LabelKeyedStringDictEntry, 22));
};
/** @param {!Array.<!proto.blaze_query.LabelKeyedStringDictEntry>} value */
proto.blaze_query.Attribute.prototype.setLabelKeyedStringDictValueList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 22, value);
};
/**
 * @param {!proto.blaze_query.LabelKeyedStringDictEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.LabelKeyedStringDictEntry}
 */
proto.blaze_query.Attribute.prototype.addLabelKeyedStringDictValue = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.blaze_query.LabelKeyedStringDictEntry, opt_index);
};
proto.blaze_query.Attribute.prototype.clearLabelKeyedStringDictValueList = function () {
    this.setLabelKeyedStringDictValueList([]);
};
/**
 * optional SelectorList selector_list = 21;
 * @return {?proto.blaze_query.Attribute.SelectorList}
 */
proto.blaze_query.Attribute.prototype.getSelectorList = function () {
    return /** @type{?proto.blaze_query.Attribute.SelectorList} */ (jspb.Message.getWrapperField(this, proto.blaze_query.Attribute.SelectorList, 21));
};
/** @param {?proto.blaze_query.Attribute.SelectorList|undefined} value */
proto.blaze_query.Attribute.prototype.setSelectorList = function (value) {
    jspb.Message.setWrapperField(this, 21, value);
};
proto.blaze_query.Attribute.prototype.clearSelectorList = function () {
    this.setSelectorList(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze_query.Attribute.prototype.hasSelectorList = function () {
    return jspb.Message.getField(this, 21) != null;
};
/**
 * repeated DEPRECATED_GlobCriteria DEPRECATED_glob_criteria = 16;
 * @return {!Array.<!proto.blaze_query.DEPRECATED_GlobCriteria>}
 */
proto.blaze_query.Attribute.prototype.getDeprecatedGlobCriteriaList = function () {
    return /** @type{!Array.<!proto.blaze_query.DEPRECATED_GlobCriteria>} */ (jspb.Message.getRepeatedWrapperField(this, proto.blaze_query.DEPRECATED_GlobCriteria, 16));
};
/** @param {!Array.<!proto.blaze_query.DEPRECATED_GlobCriteria>} value */
proto.blaze_query.Attribute.prototype.setDeprecatedGlobCriteriaList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 16, value);
};
/**
 * @param {!proto.blaze_query.DEPRECATED_GlobCriteria=} opt_value
 * @param {number=} opt_index
 * @return {!proto.blaze_query.DEPRECATED_GlobCriteria}
 */
proto.blaze_query.Attribute.prototype.addDeprecatedGlobCriteria = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.blaze_query.DEPRECATED_GlobCriteria, opt_index);
};
proto.blaze_query.Attribute.prototype.clearDeprecatedGlobCriteriaList = function () {
    this.setDeprecatedGlobCriteriaList([]);
};
/**
 * repeated bytes DEPRECATED_string_dict_unary_value = 18;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.blaze_query.Attribute.prototype.getDeprecatedStringDictUnaryValueList = function () {
    return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 18));
};
/**
 * repeated bytes DEPRECATED_string_dict_unary_value = 18;
 * This is a type-conversion wrapper around `getDeprecatedStringDictUnaryValueList()`
 * @return {!Array.<string>}
 */
proto.blaze_query.Attribute.prototype.getDeprecatedStringDictUnaryValueList_asB64 = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.bytesListAsB64(this.getDeprecatedStringDictUnaryValueList()));
};
/**
 * repeated bytes DEPRECATED_string_dict_unary_value = 18;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDeprecatedStringDictUnaryValueList()`
 * @return {!Array.<!Uint8Array>}
 */
proto.blaze_query.Attribute.prototype.getDeprecatedStringDictUnaryValueList_asU8 = function () {
    return /** @type {!Array.<!Uint8Array>} */ (jspb.Message.bytesListAsU8(this.getDeprecatedStringDictUnaryValueList()));
};
/** @param {!(Array<!Uint8Array>|Array<string>)} value */
proto.blaze_query.Attribute.prototype.setDeprecatedStringDictUnaryValueList = function (value) {
    jspb.Message.setField(this, 18, value || []);
};
/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 */
proto.blaze_query.Attribute.prototype.addDeprecatedStringDictUnaryValue = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};
proto.blaze_query.Attribute.prototype.clearDeprecatedStringDictUnaryValueList = function () {
    this.setDeprecatedStringDictUnaryValueList([]);
};
//# sourceMappingURL=attribute.js.map