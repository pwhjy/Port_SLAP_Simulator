"use strict";
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
goog.provide('proto.skylark_debugging.DebugRequest');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.skylark_debugging.ContinueExecutionRequest');
goog.require('proto.skylark_debugging.EvaluateRequest');
goog.require('proto.skylark_debugging.GetChildrenRequest');
goog.require('proto.skylark_debugging.ListFramesRequest');
goog.require('proto.skylark_debugging.PauseThreadRequest');
goog.require('proto.skylark_debugging.SetBreakpointsRequest');
goog.require('proto.skylark_debugging.StartDebuggingRequest');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.skylark_debugging.DebugRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, proto.skylark_debugging.DebugRequest.oneofGroups_);
};
goog.inherits(proto.skylark_debugging.DebugRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.skylark_debugging.DebugRequest.displayName = 'proto.skylark_debugging.DebugRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.skylark_debugging.DebugRequest.oneofGroups_ = [[101, 102, 103, 104, 105, 106, 107]];
/**
 * @enum {number}
 */
proto.skylark_debugging.DebugRequest.PayloadCase = {
    PAYLOAD_NOT_SET: 0,
    SET_BREAKPOINTS: 101,
    CONTINUE_EXECUTION: 102,
    EVALUATE: 103,
    LIST_FRAMES: 104,
    START_DEBUGGING: 105,
    PAUSE_THREAD: 106,
    GET_CHILDREN: 107
};
/**
 * @return {proto.skylark_debugging.DebugRequest.PayloadCase}
 */
proto.skylark_debugging.DebugRequest.prototype.getPayloadCase = function () {
    return /** @type {proto.skylark_debugging.DebugRequest.PayloadCase} */ (jspb.Message.computeOneofCase(this, proto.skylark_debugging.DebugRequest.oneofGroups_[0]));
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.skylark_debugging.DebugRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.skylark_debugging.DebugRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.skylark_debugging.DebugRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.skylark_debugging.DebugRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            sequenceNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
            setBreakpoints: (f = msg.getSetBreakpoints()) && proto.skylark_debugging.SetBreakpointsRequest.toObject(includeInstance, f),
            continueExecution: (f = msg.getContinueExecution()) && proto.skylark_debugging.ContinueExecutionRequest.toObject(includeInstance, f),
            evaluate: (f = msg.getEvaluate()) && proto.skylark_debugging.EvaluateRequest.toObject(includeInstance, f),
            listFrames: (f = msg.getListFrames()) && proto.skylark_debugging.ListFramesRequest.toObject(includeInstance, f),
            startDebugging: (f = msg.getStartDebugging()) && proto.skylark_debugging.StartDebuggingRequest.toObject(includeInstance, f),
            pauseThread: (f = msg.getPauseThread()) && proto.skylark_debugging.PauseThreadRequest.toObject(includeInstance, f),
            getChildren: (f = msg.getGetChildren()) && proto.skylark_debugging.GetChildrenRequest.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.skylark_debugging.DebugRequest}
 */
proto.skylark_debugging.DebugRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.skylark_debugging.DebugRequest;
    return proto.skylark_debugging.DebugRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.skylark_debugging.DebugRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.skylark_debugging.DebugRequest}
 */
proto.skylark_debugging.DebugRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setSequenceNumber(value);
                break;
            case 101:
                var value = new proto.skylark_debugging.SetBreakpointsRequest;
                reader.readMessage(value, proto.skylark_debugging.SetBreakpointsRequest.deserializeBinaryFromReader);
                msg.setSetBreakpoints(value);
                break;
            case 102:
                var value = new proto.skylark_debugging.ContinueExecutionRequest;
                reader.readMessage(value, proto.skylark_debugging.ContinueExecutionRequest.deserializeBinaryFromReader);
                msg.setContinueExecution(value);
                break;
            case 103:
                var value = new proto.skylark_debugging.EvaluateRequest;
                reader.readMessage(value, proto.skylark_debugging.EvaluateRequest.deserializeBinaryFromReader);
                msg.setEvaluate(value);
                break;
            case 104:
                var value = new proto.skylark_debugging.ListFramesRequest;
                reader.readMessage(value, proto.skylark_debugging.ListFramesRequest.deserializeBinaryFromReader);
                msg.setListFrames(value);
                break;
            case 105:
                var value = new proto.skylark_debugging.StartDebuggingRequest;
                reader.readMessage(value, proto.skylark_debugging.StartDebuggingRequest.deserializeBinaryFromReader);
                msg.setStartDebugging(value);
                break;
            case 106:
                var value = new proto.skylark_debugging.PauseThreadRequest;
                reader.readMessage(value, proto.skylark_debugging.PauseThreadRequest.deserializeBinaryFromReader);
                msg.setPauseThread(value);
                break;
            case 107:
                var value = new proto.skylark_debugging.GetChildrenRequest;
                reader.readMessage(value, proto.skylark_debugging.GetChildrenRequest.deserializeBinaryFromReader);
                msg.setGetChildren(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.skylark_debugging.DebugRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.skylark_debugging.DebugRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.skylark_debugging.DebugRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.skylark_debugging.DebugRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getSequenceNumber();
    if (f !== 0) {
        writer.writeInt64(1, f);
    }
    f = message.getSetBreakpoints();
    if (f != null) {
        writer.writeMessage(101, f, proto.skylark_debugging.SetBreakpointsRequest.serializeBinaryToWriter);
    }
    f = message.getContinueExecution();
    if (f != null) {
        writer.writeMessage(102, f, proto.skylark_debugging.ContinueExecutionRequest.serializeBinaryToWriter);
    }
    f = message.getEvaluate();
    if (f != null) {
        writer.writeMessage(103, f, proto.skylark_debugging.EvaluateRequest.serializeBinaryToWriter);
    }
    f = message.getListFrames();
    if (f != null) {
        writer.writeMessage(104, f, proto.skylark_debugging.ListFramesRequest.serializeBinaryToWriter);
    }
    f = message.getStartDebugging();
    if (f != null) {
        writer.writeMessage(105, f, proto.skylark_debugging.StartDebuggingRequest.serializeBinaryToWriter);
    }
    f = message.getPauseThread();
    if (f != null) {
        writer.writeMessage(106, f, proto.skylark_debugging.PauseThreadRequest.serializeBinaryToWriter);
    }
    f = message.getGetChildren();
    if (f != null) {
        writer.writeMessage(107, f, proto.skylark_debugging.GetChildrenRequest.serializeBinaryToWriter);
    }
};
/**
 * optional int64 sequence_number = 1;
 * @return {number}
 */
proto.skylark_debugging.DebugRequest.prototype.getSequenceNumber = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/** @param {number} value */
proto.skylark_debugging.DebugRequest.prototype.setSequenceNumber = function (value) {
    jspb.Message.setField(this, 1, value);
};
/**
 * optional SetBreakpointsRequest set_breakpoints = 101;
 * @return {?proto.skylark_debugging.SetBreakpointsRequest}
 */
proto.skylark_debugging.DebugRequest.prototype.getSetBreakpoints = function () {
    return /** @type{?proto.skylark_debugging.SetBreakpointsRequest} */ (jspb.Message.getWrapperField(this, proto.skylark_debugging.SetBreakpointsRequest, 101));
};
/** @param {?proto.skylark_debugging.SetBreakpointsRequest|undefined} value */
proto.skylark_debugging.DebugRequest.prototype.setSetBreakpoints = function (value) {
    jspb.Message.setOneofWrapperField(this, 101, proto.skylark_debugging.DebugRequest.oneofGroups_[0], value);
};
proto.skylark_debugging.DebugRequest.prototype.clearSetBreakpoints = function () {
    this.setSetBreakpoints(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.skylark_debugging.DebugRequest.prototype.hasSetBreakpoints = function () {
    return jspb.Message.getField(this, 101) != null;
};
/**
 * optional ContinueExecutionRequest continue_execution = 102;
 * @return {?proto.skylark_debugging.ContinueExecutionRequest}
 */
proto.skylark_debugging.DebugRequest.prototype.getContinueExecution = function () {
    return /** @type{?proto.skylark_debugging.ContinueExecutionRequest} */ (jspb.Message.getWrapperField(this, proto.skylark_debugging.ContinueExecutionRequest, 102));
};
/** @param {?proto.skylark_debugging.ContinueExecutionRequest|undefined} value */
proto.skylark_debugging.DebugRequest.prototype.setContinueExecution = function (value) {
    jspb.Message.setOneofWrapperField(this, 102, proto.skylark_debugging.DebugRequest.oneofGroups_[0], value);
};
proto.skylark_debugging.DebugRequest.prototype.clearContinueExecution = function () {
    this.setContinueExecution(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.skylark_debugging.DebugRequest.prototype.hasContinueExecution = function () {
    return jspb.Message.getField(this, 102) != null;
};
/**
 * optional EvaluateRequest evaluate = 103;
 * @return {?proto.skylark_debugging.EvaluateRequest}
 */
proto.skylark_debugging.DebugRequest.prototype.getEvaluate = function () {
    return /** @type{?proto.skylark_debugging.EvaluateRequest} */ (jspb.Message.getWrapperField(this, proto.skylark_debugging.EvaluateRequest, 103));
};
/** @param {?proto.skylark_debugging.EvaluateRequest|undefined} value */
proto.skylark_debugging.DebugRequest.prototype.setEvaluate = function (value) {
    jspb.Message.setOneofWrapperField(this, 103, proto.skylark_debugging.DebugRequest.oneofGroups_[0], value);
};
proto.skylark_debugging.DebugRequest.prototype.clearEvaluate = function () {
    this.setEvaluate(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.skylark_debugging.DebugRequest.prototype.hasEvaluate = function () {
    return jspb.Message.getField(this, 103) != null;
};
/**
 * optional ListFramesRequest list_frames = 104;
 * @return {?proto.skylark_debugging.ListFramesRequest}
 */
proto.skylark_debugging.DebugRequest.prototype.getListFrames = function () {
    return /** @type{?proto.skylark_debugging.ListFramesRequest} */ (jspb.Message.getWrapperField(this, proto.skylark_debugging.ListFramesRequest, 104));
};
/** @param {?proto.skylark_debugging.ListFramesRequest|undefined} value */
proto.skylark_debugging.DebugRequest.prototype.setListFrames = function (value) {
    jspb.Message.setOneofWrapperField(this, 104, proto.skylark_debugging.DebugRequest.oneofGroups_[0], value);
};
proto.skylark_debugging.DebugRequest.prototype.clearListFrames = function () {
    this.setListFrames(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.skylark_debugging.DebugRequest.prototype.hasListFrames = function () {
    return jspb.Message.getField(this, 104) != null;
};
/**
 * optional StartDebuggingRequest start_debugging = 105;
 * @return {?proto.skylark_debugging.StartDebuggingRequest}
 */
proto.skylark_debugging.DebugRequest.prototype.getStartDebugging = function () {
    return /** @type{?proto.skylark_debugging.StartDebuggingRequest} */ (jspb.Message.getWrapperField(this, proto.skylark_debugging.StartDebuggingRequest, 105));
};
/** @param {?proto.skylark_debugging.StartDebuggingRequest|undefined} value */
proto.skylark_debugging.DebugRequest.prototype.setStartDebugging = function (value) {
    jspb.Message.setOneofWrapperField(this, 105, proto.skylark_debugging.DebugRequest.oneofGroups_[0], value);
};
proto.skylark_debugging.DebugRequest.prototype.clearStartDebugging = function () {
    this.setStartDebugging(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.skylark_debugging.DebugRequest.prototype.hasStartDebugging = function () {
    return jspb.Message.getField(this, 105) != null;
};
/**
 * optional PauseThreadRequest pause_thread = 106;
 * @return {?proto.skylark_debugging.PauseThreadRequest}
 */
proto.skylark_debugging.DebugRequest.prototype.getPauseThread = function () {
    return /** @type{?proto.skylark_debugging.PauseThreadRequest} */ (jspb.Message.getWrapperField(this, proto.skylark_debugging.PauseThreadRequest, 106));
};
/** @param {?proto.skylark_debugging.PauseThreadRequest|undefined} value */
proto.skylark_debugging.DebugRequest.prototype.setPauseThread = function (value) {
    jspb.Message.setOneofWrapperField(this, 106, proto.skylark_debugging.DebugRequest.oneofGroups_[0], value);
};
proto.skylark_debugging.DebugRequest.prototype.clearPauseThread = function () {
    this.setPauseThread(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.skylark_debugging.DebugRequest.prototype.hasPauseThread = function () {
    return jspb.Message.getField(this, 106) != null;
};
/**
 * optional GetChildrenRequest get_children = 107;
 * @return {?proto.skylark_debugging.GetChildrenRequest}
 */
proto.skylark_debugging.DebugRequest.prototype.getGetChildren = function () {
    return /** @type{?proto.skylark_debugging.GetChildrenRequest} */ (jspb.Message.getWrapperField(this, proto.skylark_debugging.GetChildrenRequest, 107));
};
/** @param {?proto.skylark_debugging.GetChildrenRequest|undefined} value */
proto.skylark_debugging.DebugRequest.prototype.setGetChildren = function (value) {
    jspb.Message.setOneofWrapperField(this, 107, proto.skylark_debugging.DebugRequest.oneofGroups_[0], value);
};
proto.skylark_debugging.DebugRequest.prototype.clearGetChildren = function () {
    this.setGetChildren(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.skylark_debugging.DebugRequest.prototype.hasGetChildren = function () {
    return jspb.Message.getField(this, 107) != null;
};
//# sourceMappingURL=debugrequest.js.map