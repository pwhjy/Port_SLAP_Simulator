"use strict";
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
goog.provide('proto.build_event_stream.TestResult');
goog.provide('proto.build_event_stream.TestResult.ExecutionInfo');
goog.provide('proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage');
goog.provide('proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.build_event_stream.File');
goog.forwardDeclare('proto.build_event_stream.TestStatus');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.build_event_stream.TestResult = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.build_event_stream.TestResult.repeatedFields_, null);
};
goog.inherits(proto.build_event_stream.TestResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.build_event_stream.TestResult.displayName = 'proto.build_event_stream.TestResult';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.build_event_stream.TestResult.repeatedFields_ = [2, 7];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.build_event_stream.TestResult.prototype.toObject = function (opt_includeInstance) {
        return proto.build_event_stream.TestResult.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.build_event_stream.TestResult} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.build_event_stream.TestResult.toObject = function (includeInstance, msg) {
        var f, obj = {
            status: jspb.Message.getFieldWithDefault(msg, 5, 0),
            statusDetails: jspb.Message.getFieldWithDefault(msg, 9, ""),
            cachedLocally: jspb.Message.getFieldWithDefault(msg, 4, false),
            testAttemptStartMillisEpoch: jspb.Message.getFieldWithDefault(msg, 6, 0),
            testAttemptDurationMillis: jspb.Message.getFieldWithDefault(msg, 3, 0),
            testActionOutputList: jspb.Message.toObjectList(msg.getTestActionOutputList(), proto.build_event_stream.File.toObject, includeInstance),
            warningList: jspb.Message.getRepeatedField(msg, 7),
            executionInfo: (f = msg.getExecutionInfo()) && proto.build_event_stream.TestResult.ExecutionInfo.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.build_event_stream.TestResult}
 */
proto.build_event_stream.TestResult.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.build_event_stream.TestResult;
    return proto.build_event_stream.TestResult.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.build_event_stream.TestResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.build_event_stream.TestResult}
 */
proto.build_event_stream.TestResult.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 5:
                var value = /** @type {!proto.build_event_stream.TestStatus} */ (reader.readEnum());
                msg.setStatus(value);
                break;
            case 9:
                var value = /** @type {string} */ (reader.readString());
                msg.setStatusDetails(value);
                break;
            case 4:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setCachedLocally(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setTestAttemptStartMillisEpoch(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setTestAttemptDurationMillis(value);
                break;
            case 2:
                var value = new proto.build_event_stream.File;
                reader.readMessage(value, proto.build_event_stream.File.deserializeBinaryFromReader);
                msg.addTestActionOutput(value);
                break;
            case 7:
                var value = /** @type {string} */ (reader.readString());
                msg.addWarning(value);
                break;
            case 8:
                var value = new proto.build_event_stream.TestResult.ExecutionInfo;
                reader.readMessage(value, proto.build_event_stream.TestResult.ExecutionInfo.deserializeBinaryFromReader);
                msg.setExecutionInfo(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.build_event_stream.TestResult.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.build_event_stream.TestResult.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.build_event_stream.TestResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.build_event_stream.TestResult.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getStatus();
    if (f !== 0.0) {
        writer.writeEnum(5, f);
    }
    f = message.getStatusDetails();
    if (f.length > 0) {
        writer.writeString(9, f);
    }
    f = message.getCachedLocally();
    if (f) {
        writer.writeBool(4, f);
    }
    f = message.getTestAttemptStartMillisEpoch();
    if (f !== 0) {
        writer.writeInt64(6, f);
    }
    f = message.getTestAttemptDurationMillis();
    if (f !== 0) {
        writer.writeInt64(3, f);
    }
    f = message.getTestActionOutputList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.build_event_stream.File.serializeBinaryToWriter);
    }
    f = message.getWarningList();
    if (f.length > 0) {
        writer.writeRepeatedString(7, f);
    }
    f = message.getExecutionInfo();
    if (f != null) {
        writer.writeMessage(8, f, proto.build_event_stream.TestResult.ExecutionInfo.serializeBinaryToWriter);
    }
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.build_event_stream.TestResult.ExecutionInfo = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.build_event_stream.TestResult.ExecutionInfo.repeatedFields_, null);
};
goog.inherits(proto.build_event_stream.TestResult.ExecutionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.build_event_stream.TestResult.ExecutionInfo.displayName = 'proto.build_event_stream.TestResult.ExecutionInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.build_event_stream.TestResult.ExecutionInfo.repeatedFields_ = [5];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.build_event_stream.TestResult.ExecutionInfo.prototype.toObject = function (opt_includeInstance) {
        return proto.build_event_stream.TestResult.ExecutionInfo.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.build_event_stream.TestResult.ExecutionInfo} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.build_event_stream.TestResult.ExecutionInfo.toObject = function (includeInstance, msg) {
        var f, obj = {
            timeoutSeconds: jspb.Message.getFieldWithDefault(msg, 1, 0),
            strategy: jspb.Message.getFieldWithDefault(msg, 2, ""),
            cachedRemotely: jspb.Message.getFieldWithDefault(msg, 6, false),
            exitCode: jspb.Message.getFieldWithDefault(msg, 7, 0),
            hostname: jspb.Message.getFieldWithDefault(msg, 3, ""),
            timingBreakdown: (f = msg.getTimingBreakdown()) && proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.toObject(includeInstance, f),
            resourceUsageList: jspb.Message.toObjectList(msg.getResourceUsageList(), proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.build_event_stream.TestResult.ExecutionInfo}
 */
proto.build_event_stream.TestResult.ExecutionInfo.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.build_event_stream.TestResult.ExecutionInfo;
    return proto.build_event_stream.TestResult.ExecutionInfo.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.build_event_stream.TestResult.ExecutionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.build_event_stream.TestResult.ExecutionInfo}
 */
proto.build_event_stream.TestResult.ExecutionInfo.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setTimeoutSeconds(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setStrategy(value);
                break;
            case 6:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setCachedRemotely(value);
                break;
            case 7:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setExitCode(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setHostname(value);
                break;
            case 4:
                var value = new proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown;
                reader.readMessage(value, proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.deserializeBinaryFromReader);
                msg.setTimingBreakdown(value);
                break;
            case 5:
                var value = new proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage;
                reader.readMessage(value, proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage.deserializeBinaryFromReader);
                msg.addResourceUsage(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.build_event_stream.TestResult.ExecutionInfo.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.build_event_stream.TestResult.ExecutionInfo.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.build_event_stream.TestResult.ExecutionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.build_event_stream.TestResult.ExecutionInfo.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getTimeoutSeconds();
    if (f !== 0) {
        writer.writeInt32(1, f);
    }
    f = message.getStrategy();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getCachedRemotely();
    if (f) {
        writer.writeBool(6, f);
    }
    f = message.getExitCode();
    if (f !== 0) {
        writer.writeInt32(7, f);
    }
    f = message.getHostname();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getTimingBreakdown();
    if (f != null) {
        writer.writeMessage(4, f, proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.serializeBinaryToWriter);
    }
    f = message.getResourceUsageList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(5, f, proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage.serializeBinaryToWriter);
    }
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.repeatedFields_, null);
};
goog.inherits(proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.displayName = 'proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.prototype.toObject = function (opt_includeInstance) {
        return proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.toObject = function (includeInstance, msg) {
        var f, obj = {
            childList: jspb.Message.toObjectList(msg.getChildList(), proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.toObject, includeInstance),
            name: jspb.Message.getFieldWithDefault(msg, 2, ""),
            timeMillis: jspb.Message.getFieldWithDefault(msg, 3, 0)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown}
 */
proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown;
    return proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown}
 */
proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown;
                reader.readMessage(value, proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.deserializeBinaryFromReader);
                msg.addChild(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setTimeMillis(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getChildList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.serializeBinaryToWriter);
    }
    f = message.getName();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getTimeMillis();
    if (f !== 0) {
        writer.writeInt64(3, f);
    }
};
/**
 * repeated TimingBreakdown child = 1;
 * @return {!Array.<!proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown>}
 */
proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.prototype.getChildList = function () {
    return /** @type{!Array.<!proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown>} */ (jspb.Message.getRepeatedWrapperField(this, proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown, 1));
};
/** @param {!Array.<!proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown>} value */
proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.prototype.setChildList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown=} opt_value
 * @param {number=} opt_index
 * @return {!proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown}
 */
proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.prototype.addChild = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown, opt_index);
};
proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.prototype.clearChildList = function () {
    this.setChildList([]);
};
/**
 * optional string name = 2;
 * @return {string}
 */
proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/** @param {string} value */
proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.prototype.setName = function (value) {
    jspb.Message.setField(this, 2, value);
};
/**
 * optional int64 time_millis = 3;
 * @return {number}
 */
proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.prototype.getTimeMillis = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};
/** @param {number} value */
proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown.prototype.setTimeMillis = function (value) {
    jspb.Message.setField(this, 3, value);
};
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage.displayName = 'proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage';
}
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage.prototype.toObject = function (opt_includeInstance) {
        return proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: jspb.Message.getFieldWithDefault(msg, 1, ""),
            value: jspb.Message.getFieldWithDefault(msg, 2, 0)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage}
 */
proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage;
    return proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage}
 */
proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt64());
                msg.setValue(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getName();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getValue();
    if (f !== 0) {
        writer.writeInt64(2, f);
    }
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/** @param {string} value */
proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage.prototype.setName = function (value) {
    jspb.Message.setField(this, 1, value);
};
/**
 * optional int64 value = 2;
 * @return {number}
 */
proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage.prototype.getValue = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/** @param {number} value */
proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage.prototype.setValue = function (value) {
    jspb.Message.setField(this, 2, value);
};
/**
 * optional int32 timeout_seconds = 1;
 * @return {number}
 */
proto.build_event_stream.TestResult.ExecutionInfo.prototype.getTimeoutSeconds = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/** @param {number} value */
proto.build_event_stream.TestResult.ExecutionInfo.prototype.setTimeoutSeconds = function (value) {
    jspb.Message.setField(this, 1, value);
};
/**
 * optional string strategy = 2;
 * @return {string}
 */
proto.build_event_stream.TestResult.ExecutionInfo.prototype.getStrategy = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/** @param {string} value */
proto.build_event_stream.TestResult.ExecutionInfo.prototype.setStrategy = function (value) {
    jspb.Message.setField(this, 2, value);
};
/**
 * optional bool cached_remotely = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.build_event_stream.TestResult.ExecutionInfo.prototype.getCachedRemotely = function () {
    return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};
/** @param {boolean} value */
proto.build_event_stream.TestResult.ExecutionInfo.prototype.setCachedRemotely = function (value) {
    jspb.Message.setField(this, 6, value);
};
/**
 * optional int32 exit_code = 7;
 * @return {number}
 */
proto.build_event_stream.TestResult.ExecutionInfo.prototype.getExitCode = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};
/** @param {number} value */
proto.build_event_stream.TestResult.ExecutionInfo.prototype.setExitCode = function (value) {
    jspb.Message.setField(this, 7, value);
};
/**
 * optional string hostname = 3;
 * @return {string}
 */
proto.build_event_stream.TestResult.ExecutionInfo.prototype.getHostname = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/** @param {string} value */
proto.build_event_stream.TestResult.ExecutionInfo.prototype.setHostname = function (value) {
    jspb.Message.setField(this, 3, value);
};
/**
 * optional TimingBreakdown timing_breakdown = 4;
 * @return {?proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown}
 */
proto.build_event_stream.TestResult.ExecutionInfo.prototype.getTimingBreakdown = function () {
    return /** @type{?proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown} */ (jspb.Message.getWrapperField(this, proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown, 4));
};
/** @param {?proto.build_event_stream.TestResult.ExecutionInfo.TimingBreakdown|undefined} value */
proto.build_event_stream.TestResult.ExecutionInfo.prototype.setTimingBreakdown = function (value) {
    jspb.Message.setWrapperField(this, 4, value);
};
proto.build_event_stream.TestResult.ExecutionInfo.prototype.clearTimingBreakdown = function () {
    this.setTimingBreakdown(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.build_event_stream.TestResult.ExecutionInfo.prototype.hasTimingBreakdown = function () {
    return jspb.Message.getField(this, 4) != null;
};
/**
 * repeated ResourceUsage resource_usage = 5;
 * @return {!Array.<!proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage>}
 */
proto.build_event_stream.TestResult.ExecutionInfo.prototype.getResourceUsageList = function () {
    return /** @type{!Array.<!proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage>} */ (jspb.Message.getRepeatedWrapperField(this, proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage, 5));
};
/** @param {!Array.<!proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage>} value */
proto.build_event_stream.TestResult.ExecutionInfo.prototype.setResourceUsageList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 5, value);
};
/**
 * @param {!proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage}
 */
proto.build_event_stream.TestResult.ExecutionInfo.prototype.addResourceUsage = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.build_event_stream.TestResult.ExecutionInfo.ResourceUsage, opt_index);
};
proto.build_event_stream.TestResult.ExecutionInfo.prototype.clearResourceUsageList = function () {
    this.setResourceUsageList([]);
};
/**
 * optional TestStatus status = 5;
 * @return {!proto.build_event_stream.TestStatus}
 */
proto.build_event_stream.TestResult.prototype.getStatus = function () {
    return /** @type {!proto.build_event_stream.TestStatus} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};
/** @param {!proto.build_event_stream.TestStatus} value */
proto.build_event_stream.TestResult.prototype.setStatus = function (value) {
    jspb.Message.setField(this, 5, value);
};
/**
 * optional string status_details = 9;
 * @return {string}
 */
proto.build_event_stream.TestResult.prototype.getStatusDetails = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};
/** @param {string} value */
proto.build_event_stream.TestResult.prototype.setStatusDetails = function (value) {
    jspb.Message.setField(this, 9, value);
};
/**
 * optional bool cached_locally = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.build_event_stream.TestResult.prototype.getCachedLocally = function () {
    return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};
/** @param {boolean} value */
proto.build_event_stream.TestResult.prototype.setCachedLocally = function (value) {
    jspb.Message.setField(this, 4, value);
};
/**
 * optional int64 test_attempt_start_millis_epoch = 6;
 * @return {number}
 */
proto.build_event_stream.TestResult.prototype.getTestAttemptStartMillisEpoch = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};
/** @param {number} value */
proto.build_event_stream.TestResult.prototype.setTestAttemptStartMillisEpoch = function (value) {
    jspb.Message.setField(this, 6, value);
};
/**
 * optional int64 test_attempt_duration_millis = 3;
 * @return {number}
 */
proto.build_event_stream.TestResult.prototype.getTestAttemptDurationMillis = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};
/** @param {number} value */
proto.build_event_stream.TestResult.prototype.setTestAttemptDurationMillis = function (value) {
    jspb.Message.setField(this, 3, value);
};
/**
 * repeated File test_action_output = 2;
 * @return {!Array.<!proto.build_event_stream.File>}
 */
proto.build_event_stream.TestResult.prototype.getTestActionOutputList = function () {
    return /** @type{!Array.<!proto.build_event_stream.File>} */ (jspb.Message.getRepeatedWrapperField(this, proto.build_event_stream.File, 2));
};
/** @param {!Array.<!proto.build_event_stream.File>} value */
proto.build_event_stream.TestResult.prototype.setTestActionOutputList = function (value) {
    jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.build_event_stream.File=} opt_value
 * @param {number=} opt_index
 * @return {!proto.build_event_stream.File}
 */
proto.build_event_stream.TestResult.prototype.addTestActionOutput = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.build_event_stream.File, opt_index);
};
proto.build_event_stream.TestResult.prototype.clearTestActionOutputList = function () {
    this.setTestActionOutputList([]);
};
/**
 * repeated string warning = 7;
 * @return {!Array.<string>}
 */
proto.build_event_stream.TestResult.prototype.getWarningList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 7));
};
/** @param {!Array.<string>} value */
proto.build_event_stream.TestResult.prototype.setWarningList = function (value) {
    jspb.Message.setField(this, 7, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.build_event_stream.TestResult.prototype.addWarning = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};
proto.build_event_stream.TestResult.prototype.clearWarningList = function () {
    this.setWarningList([]);
};
/**
 * optional ExecutionInfo execution_info = 8;
 * @return {?proto.build_event_stream.TestResult.ExecutionInfo}
 */
proto.build_event_stream.TestResult.prototype.getExecutionInfo = function () {
    return /** @type{?proto.build_event_stream.TestResult.ExecutionInfo} */ (jspb.Message.getWrapperField(this, proto.build_event_stream.TestResult.ExecutionInfo, 8));
};
/** @param {?proto.build_event_stream.TestResult.ExecutionInfo|undefined} value */
proto.build_event_stream.TestResult.prototype.setExecutionInfo = function (value) {
    jspb.Message.setWrapperField(this, 8, value);
};
proto.build_event_stream.TestResult.prototype.clearExecutionInfo = function () {
    this.setExecutionInfo(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.build_event_stream.TestResult.prototype.hasExecutionInfo = function () {
    return jspb.Message.getField(this, 8) != null;
};
//# sourceMappingURL=testresult.js.map