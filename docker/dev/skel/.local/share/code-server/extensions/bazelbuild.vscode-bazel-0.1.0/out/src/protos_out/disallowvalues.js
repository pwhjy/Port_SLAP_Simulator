"use strict";
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
goog.provide('proto.blaze.invocation_policy.DisallowValues');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.blaze.invocation_policy.UseDefault');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.blaze.invocation_policy.DisallowValues = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.blaze.invocation_policy.DisallowValues.repeatedFields_, proto.blaze.invocation_policy.DisallowValues.oneofGroups_);
};
goog.inherits(proto.blaze.invocation_policy.DisallowValues, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.blaze.invocation_policy.DisallowValues.displayName = 'proto.blaze.invocation_policy.DisallowValues';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.blaze.invocation_policy.DisallowValues.repeatedFields_ = [1];
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.blaze.invocation_policy.DisallowValues.oneofGroups_ = [[3, 4]];
/**
 * @enum {number}
 */
proto.blaze.invocation_policy.DisallowValues.ReplacementValueCase = {
    REPLACEMENT_VALUE_NOT_SET: 0,
    NEW_VALUE: 3,
    USE_DEFAULT: 4
};
/**
 * @return {proto.blaze.invocation_policy.DisallowValues.ReplacementValueCase}
 */
proto.blaze.invocation_policy.DisallowValues.prototype.getReplacementValueCase = function () {
    return /** @type {proto.blaze.invocation_policy.DisallowValues.ReplacementValueCase} */ (jspb.Message.computeOneofCase(this, proto.blaze.invocation_policy.DisallowValues.oneofGroups_[0]));
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.blaze.invocation_policy.DisallowValues.prototype.toObject = function (opt_includeInstance) {
        return proto.blaze.invocation_policy.DisallowValues.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.blaze.invocation_policy.DisallowValues} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.blaze.invocation_policy.DisallowValues.toObject = function (includeInstance, msg) {
        var f, obj = {
            disallowedValuesList: jspb.Message.getRepeatedField(msg, 1),
            newValue: jspb.Message.getField(msg, 3),
            useDefault: (f = msg.getUseDefault()) && proto.blaze.invocation_policy.UseDefault.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.blaze.invocation_policy.DisallowValues}
 */
proto.blaze.invocation_policy.DisallowValues.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.blaze.invocation_policy.DisallowValues;
    return proto.blaze.invocation_policy.DisallowValues.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.blaze.invocation_policy.DisallowValues} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.blaze.invocation_policy.DisallowValues}
 */
proto.blaze.invocation_policy.DisallowValues.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.addDisallowedValues(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setNewValue(value);
                break;
            case 4:
                var value = new proto.blaze.invocation_policy.UseDefault;
                reader.readMessage(value, proto.blaze.invocation_policy.UseDefault.deserializeBinaryFromReader);
                msg.setUseDefault(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.blaze.invocation_policy.DisallowValues.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.blaze.invocation_policy.DisallowValues.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.blaze.invocation_policy.DisallowValues} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.blaze.invocation_policy.DisallowValues.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getDisallowedValuesList();
    if (f.length > 0) {
        writer.writeRepeatedString(1, f);
    }
    f = /** @type {string} */ (jspb.Message.getField(message, 3));
    if (f != null) {
        writer.writeString(3, f);
    }
    f = message.getUseDefault();
    if (f != null) {
        writer.writeMessage(4, f, proto.blaze.invocation_policy.UseDefault.serializeBinaryToWriter);
    }
};
/**
 * repeated string disallowed_values = 1;
 * @return {!Array.<string>}
 */
proto.blaze.invocation_policy.DisallowValues.prototype.getDisallowedValuesList = function () {
    return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};
/** @param {!Array.<string>} value */
proto.blaze.invocation_policy.DisallowValues.prototype.setDisallowedValuesList = function (value) {
    jspb.Message.setField(this, 1, value || []);
};
/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.blaze.invocation_policy.DisallowValues.prototype.addDisallowedValues = function (value, opt_index) {
    jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};
proto.blaze.invocation_policy.DisallowValues.prototype.clearDisallowedValuesList = function () {
    this.setDisallowedValuesList([]);
};
/**
 * optional string new_value = 3;
 * @return {string}
 */
proto.blaze.invocation_policy.DisallowValues.prototype.getNewValue = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/** @param {string} value */
proto.blaze.invocation_policy.DisallowValues.prototype.setNewValue = function (value) {
    jspb.Message.setOneofField(this, 3, proto.blaze.invocation_policy.DisallowValues.oneofGroups_[0], value);
};
proto.blaze.invocation_policy.DisallowValues.prototype.clearNewValue = function () {
    jspb.Message.setOneofField(this, 3, proto.blaze.invocation_policy.DisallowValues.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze.invocation_policy.DisallowValues.prototype.hasNewValue = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * optional UseDefault use_default = 4;
 * @return {?proto.blaze.invocation_policy.UseDefault}
 */
proto.blaze.invocation_policy.DisallowValues.prototype.getUseDefault = function () {
    return /** @type{?proto.blaze.invocation_policy.UseDefault} */ (jspb.Message.getWrapperField(this, proto.blaze.invocation_policy.UseDefault, 4));
};
/** @param {?proto.blaze.invocation_policy.UseDefault|undefined} value */
proto.blaze.invocation_policy.DisallowValues.prototype.setUseDefault = function (value) {
    jspb.Message.setOneofWrapperField(this, 4, proto.blaze.invocation_policy.DisallowValues.oneofGroups_[0], value);
};
proto.blaze.invocation_policy.DisallowValues.prototype.clearUseDefault = function () {
    this.setUseDefault(undefined);
};
/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.blaze.invocation_policy.DisallowValues.prototype.hasUseDefault = function () {
    return jspb.Message.getField(this, 4) != null;
};
//# sourceMappingURL=disallowvalues.js.map