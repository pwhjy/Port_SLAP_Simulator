/******************************************************************
MIT License http://www.opensource.org/licenses/mit-license.php
Author Qiming Zhao <chemzqm@gmail> (https://github.com/chemzqm)
*******************************************************************/
import { Document, OutputChannel } from 'coc.nvim';
import { Position, Range } from 'vscode-languageserver-types';
import BaseProvider from './baseProvider';
import { FileItem, SnipmateConfig, Snippet, SnippetEdit } from './types';
export declare class SnipmateProvider extends BaseProvider {
    private channel;
    private trace;
    private snippetFiles;
    private disposables;
    constructor(channel: OutputChannel, trace: string, config: SnipmateConfig);
    init(): Promise<void>;
    loadSnippetsFromFile(filetype: string, directory: string, filepath: string): Promise<void>;
    /**
     * Resolve snippet body to inserted text.
     *
     * @public
     * @param {Snippet} snippet
     * @param {Range} _range
     * @param {string} _line
     * @returns {Promise<string>}
     */
    resolveSnippetBody(snippet: Snippet, _range: Range, _line: string): Promise<string>;
    /**
     * Parse snippets from snippets file.
     *
     * @public
     * @param {string} filepath
     * @returns {Promise<Snippet[]>}
     */
    parseSnippetsFile(filepath: string): Promise<Snippet[]>;
    getTriggerSnippets(document: Document, position: Position, autoTrigger: boolean): Promise<SnippetEdit[]>;
    getSnippetFiles(): Promise<string[]>;
    getSnippets(): Promise<Snippet[]>;
    getAllSnippetFiles(): Promise<FileItem[]>;
    private getSnippetFileItems;
}
